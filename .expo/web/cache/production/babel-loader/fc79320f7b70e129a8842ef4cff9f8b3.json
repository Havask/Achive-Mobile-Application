{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import React,{useCallback}from'react';import Image from\"react-native-web/dist/exports/Image\";import Linking from\"react-native-web/dist/exports/Linking\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import View from\"react-native-web/dist/exports/View\";export var UrlPreviewBubble=function UrlPreviewBubble(props){var url=props.url,title=props.title,description=props.description,image=props.image;var onPressLink=useCallback(function _callee(){var canOpen;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(Linking.canOpenURL(url));case 2:canOpen=_context.sent;if(canOpen){Linking.openURL(url);}case 4:case\"end\":return _context.stop();}}},null,null,null,Promise);},[url]);return React.createElement(TouchableOpacity,{onPress:onPressLink},React.createElement(View,{style:styles.container},React.createElement(Image,{source:{uri:image},style:styles.previewImage}),React.createElement(View,{style:styles.subContainer},React.createElement(Text,{style:styles.title},title),React.createElement(Text,{style:styles.description},description.slice(0,50),\"...\"),React.createElement(Text,{style:styles.url},url))));};var styles=StyleSheet.create({container:{flexDirection:'row',backgroundColor:'#f5f5f5',borderRadius:10,padding:10,maxHeight:100,overflow:'hidden'},subContainer:{marginLeft:10},previewImage:{width:30,height:30,borderRadius:10},title:{fontSize:13,fontWeight:'bold'},description:{fontSize:12,color:'#888'},url:{marginTop:40,color:'#3C91E6'}});","map":{"version":3,"mappings":"4DAAA,MAAOA,MAAP,EAAgBC,WAAhB,KAAmC,OAAnC,C,0WAWA,MAAO,IAAMC,iBAAgB,CAAIC,QAApBD,iBAAoBC,MAAD,CAA8B,CAC5D,GAAQC,IAAR,CAA2CD,KAA3C,CAAQC,GAAR,CAAaC,KAAb,CAA2CF,KAA3C,CAAaE,KAAb,CAAoBC,WAApB,CAA2CH,KAA3C,CAAoBG,WAApB,CAAiCC,KAAjC,CAA2CJ,KAA3C,CAAiCI,KAAjC,CAEA,GAAMC,YAAW,CAAGP,WAAW,CAAC,iMACRQ,OAAO,CAACC,UAARD,CAAmBL,GAAnBK,CADQ,SACxBE,OADwB,eAG9B,GAAIA,OAAJ,CAAa,CACXF,OAAO,CAACG,OAARH,CAAgBL,GAAhBK,EACD,CAL6B,qEAAD,CAM5B,CAACL,GAAD,CAN4B,CAA/B,CAQA,MACEJ,qBAACa,gBAAD,EAAkBC,OAAO,CAAEN,WAA3B,EACER,oBAACe,IAAD,EAAMC,KAAK,CAAEC,MAAM,CAACC,SAApB,EACElB,oBAACmB,KAAD,EAAOC,MAAM,CAAE,CAAEC,GAAG,CAAEd,KAAP,CAAf,CAA+BS,KAAK,CAAEC,MAAM,CAACK,YAA7C,EADF,CAGEtB,oBAACe,IAAD,EAAMC,KAAK,CAAEC,MAAM,CAACM,YAApB,EACEvB,oBAACwB,IAAD,EAAMR,KAAK,CAAEC,MAAM,CAACZ,KAApB,EAA4BA,KAA5B,CADF,CAEEL,oBAACwB,IAAD,EAAMR,KAAK,CAAEC,MAAM,CAACX,WAApB,EAAkCA,WAAW,CAACmB,KAAZnB,CAAkB,CAAlBA,CAAqB,EAArBA,CAAlC,OAFF,CAGEN,oBAACwB,IAAD,EAAMR,KAAK,CAAEC,MAAM,CAACb,GAApB,EAA0BA,GAA1B,CAHF,CAHF,CADF,CADF,CAXK,EA0BP,GAAMa,OAAM,CAAGS,UAAU,CAACC,MAAXD,CAAkB,CAC/BR,SAAS,CAAE,CACTU,aAAa,CAAE,KADN,CAETC,eAAe,CAAE,SAFR,CAGTC,YAAY,CAAE,EAHL,CAITC,OAAO,CAAE,EAJA,CAKTC,SAAS,CAAE,GALF,CAMTC,QAAQ,CAAE,QAND,CADoB,CAS/BV,YAAY,CAAE,CACZW,UAAU,CAAE,EADA,CATiB,CAY/BZ,YAAY,CAAE,CACZa,KAAK,CAAE,EADK,CAEZC,MAAM,CAAE,EAFI,CAGZN,YAAY,CAAE,EAHF,CAZiB,CAiB/BzB,KAAK,CAAE,CACLgC,QAAQ,CAAE,EADL,CAELC,UAAU,CAAE,MAFP,CAjBwB,CAqB/BhC,WAAW,CAAE,CACX+B,QAAQ,CAAE,EADC,CAEXE,KAAK,CAAE,MAFI,CArBkB,CAyB/BnC,GAAG,CAAE,CACHoC,SAAS,CAAE,EADR,CAEHD,KAAK,CAAE,SAFJ,CAzB0B,CAAlBb,CAAf","names":["React","useCallback","UrlPreviewBubble","props","url","title","description","image","onPressLink","Linking","canOpenURL","canOpen","openURL","TouchableOpacity","onPress","View","style","styles","container","Image","source","uri","previewImage","subContainer","Text","slice","StyleSheet","create","flexDirection","backgroundColor","borderRadius","padding","maxHeight","overflow","marginLeft","width","height","fontSize","fontWeight","color","marginTop"],"sources":["UrlPreviewBubble.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport {\n  Image,\n  Linking,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport type { IUrlPreviewBubble } from 'src/types/Chatty.types';\n\nexport const UrlPreviewBubble = (props: IUrlPreviewBubble) => {\n  const { url, title, description, image } = props;\n\n  const onPressLink = useCallback(async () => {\n    const canOpen = await Linking.canOpenURL(url);\n\n    if (canOpen) {\n      Linking.openURL(url);\n    }\n  }, [url]);\n\n  return (\n    <TouchableOpacity onPress={onPressLink}>\n      <View style={styles.container}>\n        <Image source={{ uri: image }} style={styles.previewImage} />\n\n        <View style={styles.subContainer}>\n          <Text style={styles.title}>{title}</Text>\n          <Text style={styles.description}>{description.slice(0, 50)}...</Text>\n          <Text style={styles.url}>{url}</Text>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    backgroundColor: '#f5f5f5',\n    borderRadius: 10,\n    padding: 10,\n    maxHeight: 100,\n    overflow: 'hidden',\n  },\n  subContainer: {\n    marginLeft: 10,\n  },\n  previewImage: {\n    width: 30,\n    height: 30,\n    borderRadius: 10,\n  },\n  title: {\n    fontSize: 13,\n    fontWeight: 'bold',\n  },\n  description: {\n    fontSize: 12,\n    color: '#888',\n  },\n  url: {\n    marginTop: 40,\n    color: '#3C91E6',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}