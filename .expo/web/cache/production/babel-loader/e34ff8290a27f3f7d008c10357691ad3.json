{"ast":null,"code":"import{useEffect,useRef}from'react';export function usePrevious(value){var ref=useRef();useEffect(function(){ref.current=value;},[value]);return ref.current;}","map":{"version":3,"mappings":"AAAA,OAASA,SAAT,CAAoBC,MAApB,KAAkC,OAAlC,CAOA,MAAO,SAASC,YAAT,CAAwBC,KAAxB,CAAmD,CACxD,GAAMC,IAAG,CAAGH,MAAM,EAAlB,CACAD,SAAS,CAAC,UAAM,CACdI,GAAG,CAACC,OAAJD,CAAcD,KAAdC,CADO,EAEN,CAACD,KAAD,CAFM,CAATH,CAGA,MAAOI,IAAG,CAACC,OAAX,CACD","names":["useEffect","useRef","usePrevious","value","ref","current"],"sources":["usePrevious.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\n/**\n * UsePrevious returns the previous value of a given value.\n * @param {any} value - any\n * @returns The previous value of the input value.\n */\nexport function usePrevious<T>(value: any): T | undefined {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n"]},"metadata":{},"sourceType":"module"}