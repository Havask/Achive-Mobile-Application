{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"icon\",\"inputProps\",\"combinedProps\",\"children\",\"wrapperRef\",\"isHovered\",\"isFocusVisible\"],_excluded2=[\"_interactionBox\",\"_icon\",\"_stack\",\"_text\"],_excluded3=[\"icon\",\"children\",\"wrapperRef\",\"isHovered\",\"isFocusVisible\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import Box from\"../Box\";import{Stack}from\"../Stack\";import{Center}from\"../../composites/Center\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{wrapStringChild}from\"../../../utils/wrapStringChild\";import{mergeRefs}from\"./../../../utils\";import{useHover}from'@react-native-aria/interactions';import{useRadio}from'@react-native-aria/radio';import{VisuallyHidden}from'@react-aria/visually-hidden';import{RadioContext}from\"./RadioGroup\";import{useFocusRing}from'@react-native-aria/focus';import{CircleIcon}from\"../Icon/Icons\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";import{combineContextAndProps,isEmptyObj}from\"../../../utils\";import{useFormControlContext}from\"../../composites/FormControl\";var RadioComponent=memo(forwardRef(function(_ref2,ref){var icon=_ref2.icon,inputProps=_ref2.inputProps,combinedProps=_ref2.combinedProps,children=_ref2.children,wrapperRef=_ref2.wrapperRef,isHoveredProp=_ref2.isHovered,isFocusVisibleProp=_ref2.isFocusVisible,props=_objectWithoutProperties(_ref2,_excluded);var isInvalid=combinedProps.isInvalid,isReadOnly=combinedProps.isReadOnly,isIndeterminate=combinedProps.isIndeterminate;var isDisabled=inputProps.disabled,isChecked=inputProps.checked;var _ref=React.useRef(null);var _useHover=useHover({},_ref),isHovered=_useHover.isHovered;var mergedRefs=mergeRefs([_ref,wrapperRef]);var _useFocusRing=useFocusRing(),focusProps=_useFocusRing.focusProps,isFocusVisible=_useFocusRing.isFocusVisible;var _usePropsResolution=usePropsResolution('Radio',combinedProps,{isInvalid:isInvalid,isReadOnly:isReadOnly,isFocusVisible:isFocusVisibleProp||isFocusVisible,isDisabled:isDisabled,isIndeterminate:isIndeterminate,isChecked:isChecked,isHovered:isHoveredProp||isHovered}),_interactionBox=_usePropsResolution._interactionBox,_icon=_usePropsResolution._icon,_stack=_usePropsResolution._stack,_text=_usePropsResolution._text,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded2);var sizedIcon=function sizedIcon(){return React.cloneElement(icon,_objectSpread({},_icon));};var component=React.createElement(Stack,_stack,React.createElement(Center,null,React.createElement(Box,_interactionBox),React.createElement(Center,resolvedProps,icon&&sizedIcon&&isChecked?sizedIcon():React.createElement(CircleIcon,_extends({},_icon,{opacity:isChecked?1:0})))),wrapStringChild(children,_text));if(useHasResponsiveProps(props)){return null;}return React.createElement(Box,{accessibilityRole:\"label\",ref:mergedRefs},React.createElement(VisuallyHidden,null,React.createElement(\"input\",_extends({},inputProps,focusProps,{ref:ref}))),component);}));var Radio=function Radio(_ref3,ref){var icon=_ref3.icon,children=_ref3.children,wrapperRef=_ref3.wrapperRef,isHoveredProp=_ref3.isHovered,isFocusVisibleProp=_ref3.isFocusVisible,props=_objectWithoutProperties(_ref3,_excluded3);var _contextState$state;var formControlContext=useFormControlContext();var contextState=React.useContext(RadioContext);var combinedProps=combineContextAndProps(_objectSpread(_objectSpread({},formControlContext),contextState),props);var inputRef=React.useRef(null);var radioState=useRadio(_objectSpread(_objectSpread({},combinedProps),{},{'aria-label':props.accessibilityLabel,children:children}),(_contextState$state=contextState.state)!==null&&_contextState$state!==void 0?_contextState$state:{},inputRef);var inputProps=React.useMemo(function(){return radioState.inputProps;},[radioState.inputProps.checked,radioState.inputProps.disabled]);var _React$useState=React.useState(_objectSpread({},combinedProps)),_React$useState2=_slicedToArray(_React$useState,1),contextCombinedProps=_React$useState2[0];if(useHasResponsiveProps(props)){return null;}if(isEmptyObj(contextState)){console.error('Error: Radio must be wrapped inside a Radio.Group');return React.createElement(React.Fragment,null);}return React.createElement(RadioComponent,{inputProps:inputProps,combinedProps:contextCombinedProps,children:children,ref:ref,icon:icon,wrapperRef:wrapperRef,isHovered:isHoveredProp,isFocusVisible:isFocusVisibleProp});};export default memo(forwardRef(Radio));","map":{"version":3,"mappings":"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","names":["React","memo","forwardRef","Box","Stack","Center","usePropsResolution","wrapStringChild","mergeRefs","useHover","useRadio","VisuallyHidden","RadioContext","useFocusRing","CircleIcon","useHasResponsiveProps","combineContextAndProps","isEmptyObj","useFormControlContext","RadioComponent","ref","icon","inputProps","combinedProps","children","wrapperRef","isHoveredProp","isHovered","isFocusVisibleProp","isFocusVisible","props","isInvalid","isReadOnly","isIndeterminate","isDisabled","disabled","isChecked","checked","_ref","useRef","mergedRefs","focusProps","_interactionBox","_icon","_stack","_text","resolvedProps","sizedIcon","cloneElement","component","opacity","accessibilityRole","Radio","formControlContext","contextState","useContext","inputRef","radioState","accessibilityLabel","state","useMemo","useState","contextCombinedProps","console","error"],"sources":["Radio.web.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../Box';\nimport { Stack } from '../Stack';\nimport { Center } from '../../composites/Center';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { wrapStringChild } from '../../../utils/wrapStringChild';\nimport type { IRadioProps } from './types';\nimport { mergeRefs } from './../../../utils';\nimport { useHover } from '@react-native-aria/interactions';\nimport { useRadio } from '@react-native-aria/radio';\nimport { VisuallyHidden } from '@react-aria/visually-hidden';\nimport { RadioContext } from './RadioGroup';\nimport { useFocusRing } from '@react-native-aria/focus';\nimport { CircleIcon } from '../Icon/Icons';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { combineContextAndProps, isEmptyObj } from '../../../utils';\nimport { useFormControlContext } from '../../composites/FormControl';\n\nconst RadioComponent = memo(\n  forwardRef(\n    (\n      {\n        icon,\n        inputProps,\n        combinedProps,\n        children,\n        wrapperRef,\n        isHovered: isHoveredProp,\n        isFocusVisible: isFocusVisibleProp,\n        ...props\n      }: any,\n      ref: any\n    ) => {\n      const { isInvalid, isReadOnly, isIndeterminate } = combinedProps;\n      const { disabled: isDisabled, checked: isChecked } = inputProps;\n      const _ref = React.useRef(null);\n      const { isHovered } = useHover({}, _ref);\n      const mergedRefs = mergeRefs([_ref, wrapperRef]);\n      const { focusProps, isFocusVisible } = useFocusRing();\n\n      const {\n        _interactionBox,\n        _icon,\n        _stack,\n        _text,\n        ...resolvedProps\n      } = usePropsResolution('Radio', combinedProps, {\n        isInvalid,\n        isReadOnly,\n        isFocusVisible: isFocusVisibleProp || isFocusVisible,\n        isDisabled,\n        isIndeterminate,\n        isChecked,\n        isHovered: isHoveredProp || isHovered,\n      });\n\n      // only calling below function when icon exist.\n      const sizedIcon = () =>\n        //@ts-ignore\n        React.cloneElement(icon, {\n          ..._icon,\n        });\n\n      const component = (\n        <Stack {..._stack}>\n          <Center>\n            {/* Interaction Box */}\n            <Box {..._interactionBox} />\n            {/* Radio */}\n            <Center {...resolvedProps}>\n              {icon && sizedIcon && isChecked ? (\n                sizedIcon()\n              ) : (\n                <CircleIcon {..._icon} opacity={isChecked ? 1 : 0} />\n              )}\n            </Center>\n          </Center>\n          {wrapStringChild(children, _text)}\n        </Stack>\n      );\n      //TODO: refactor for responsive prop\n      if (useHasResponsiveProps(props)) {\n        return null;\n      }\n\n      return (\n        <Box\n          // @ts-ignore - RN web supports accessibilityRole=\"label\"\n          accessibilityRole=\"label\"\n          ref={mergedRefs}\n        >\n          <VisuallyHidden>\n            <input {...inputProps} {...focusProps} ref={ref} />\n          </VisuallyHidden>\n          {component}\n        </Box>\n      );\n    }\n  )\n);\n\nconst Radio = (\n  {\n    icon,\n    children,\n    wrapperRef,\n    isHovered: isHoveredProp,\n    isFocusVisible: isFocusVisibleProp,\n    ...props\n  }: IRadioProps,\n  ref: any\n) => {\n  const formControlContext = useFormControlContext();\n  const contextState = React.useContext(RadioContext);\n\n  const combinedProps = combineContextAndProps(\n    { ...formControlContext, ...contextState },\n    props\n  );\n\n  const inputRef = React.useRef(null);\n  const radioState = useRadio(\n    { ...combinedProps, 'aria-label': props.accessibilityLabel, children },\n    contextState.state ?? {},\n    inputRef\n  );\n\n  //@ts-ignore\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const inputProps = React.useMemo(() => radioState.inputProps, [\n    radioState.inputProps.checked,\n    radioState.inputProps.disabled,\n  ]);\n\n  const [contextCombinedProps] = React.useState({\n    ...combinedProps,\n  });\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  if (isEmptyObj(contextState)) {\n    console.error('Error: Radio must be wrapped inside a Radio.Group');\n    return <></>;\n  }\n\n  return (\n    <RadioComponent\n      inputProps={inputProps}\n      combinedProps={contextCombinedProps}\n      children={children}\n      ref={ref}\n      icon={icon}\n      wrapperRef={wrapperRef}\n      isHovered={isHoveredProp}\n      isFocusVisible={isFocusVisibleProp}\n    />\n  );\n};\n\nexport default memo(forwardRef(Radio));\n"]},"metadata":{},"sourceType":"module"}