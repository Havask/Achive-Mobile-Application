{"ast":null,"code":"import{EventEmitter}from'eventemitter3';var ChatEmitter=new EventEmitter();var ChatBubbleEmitter=new EventEmitter();export{ChatEmitter,ChatBubbleEmitter};","map":{"version":3,"mappings":"AAAA,OAASA,YAAT,KAA6B,eAA7B,CAiBA,GAAMC,YAAW,CAAG,GAAID,aAAJ,EAApB,CACA,GAAME,kBAAiB,CAAG,GAAIF,aAAJ,EAA1B,CAEA,OAASC,WAAT,CAAsBC,iBAAtB","names":["EventEmitter","ChatEmitter","ChatBubbleEmitter"],"sources":["eventEmitter.ts"],"sourcesContent":["import { EventEmitter } from 'eventemitter3';\nimport type { IMessage } from '../types/Chatty.types';\nimport type TypedEmitter from 'typed-emitter';\n\nexport type EventMap = {\n  [key: string]: (...args: any[]) => void;\n};\n\ntype ChatEvents = {\n  patternPressed: (pattern: string, index: number, message: IMessage) => void;\n  actionPressed: (index: number, message: IMessage) => void;\n};\n\ntype ChatBubbleEvents = {\n  replyBubblePressed: (messageId: number) => void;\n};\n\nconst ChatEmitter = new EventEmitter() as TypedEmitter<ChatEvents>;\nconst ChatBubbleEmitter = new EventEmitter() as TypedEmitter<ChatBubbleEvents>;\n\nexport { ChatEmitter, ChatBubbleEmitter };\n"]},"metadata":{},"sourceType":"module"}