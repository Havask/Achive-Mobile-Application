{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import React from'react';import Clipboard from\"react-native-web/dist/exports/Clipboard\";export function useClipboard(){var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),hasCopied=_React$useState2[0],setHasCopied=_React$useState2[1];var _React$useState3=React.useState(''),_React$useState4=_slicedToArray(_React$useState3,2),value=_React$useState4[0],setValue=_React$useState4[1];var onCopy=function onCopy(copiedValue){return _regeneratorRuntime.async(function onCopy$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!Clipboard){_context.next=3;break;}_context.next=3;return _regeneratorRuntime.awrap(Clipboard.setString(copiedValue));case 3:setValue(copiedValue);setHasCopied(true);case 5:case\"end\":return _context.stop();}}},null,null,null,Promise);};return{value:value,onCopy:onCopy,hasCopied:hasCopied};}","map":{"version":3,"mappings":"6HAAA,MAAOA,MAAP,KAAkB,OAAlB,C,+DAGA,MAAO,SAASC,aAAT,EAAwB,CAC7B,oBAAkCD,KAAK,CAACE,QAANF,CAAe,KAAfA,CAAlC,oDAAOG,SAAP,qBAAkBC,YAAlB,qBACA,qBAA0BJ,KAAK,CAACE,QAANF,CAAuB,EAAvBA,CAA1B,qDAAOK,KAAP,qBAAcC,QAAd,qBACA,GAAMC,OAAM,CAAG,QAATA,OAAS,CAAOC,WAAP,sHACTC,SADS,0EAELA,SAAS,CAACC,SAAVD,CAAoBD,WAApBC,CAFK,SAIbH,QAAQ,CAACE,WAAD,CAARF,CACAF,YAAY,CAAC,IAAD,CAAZA,CALa,qEAAf,CAOA,MAAO,CACLC,KADK,CACLA,KADK,CAELE,MAFK,CAELA,MAFK,CAGLJ,mBAHK,CAAP,CAKD","names":["React","useClipboard","useState","hasCopied","setHasCopied","value","setValue","onCopy","copiedValue","Clipboard","setString"],"sources":["useClipboard.ts"],"sourcesContent":["import React from 'react';\nimport { Clipboard } from 'react-native';\n\nexport function useClipboard() {\n  const [hasCopied, setHasCopied] = React.useState(false);\n  const [value, setValue] = React.useState<string>('');\n  const onCopy = async (copiedValue: string) => {\n    if (Clipboard) {\n      await Clipboard.setString(copiedValue);\n    }\n    setValue(copiedValue);\n    setHasCopied(true);\n  };\n  return {\n    value,\n    onCopy,\n    hasCopied,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}