{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import React,{useContext}from'react';import{useCallback}from'react';import{ActionSheetIOS}from\"react-native-web/dist/index\";import Platform from\"react-native-web/dist/exports/Platform\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{PropsContext}from\"../Chatty\";import{contextMenuView}from\"../utils/contextMenu\";import{ChatEmitter}from\"../utils/eventEmitter\";function ContextMenuWrapper(props){var _propsContext$bubbleP10,_propsContext$bubbleP11,_propsContext$bubbleP12,_propsContext$bubbleP13,_propsContext$bubbleP14,_propsContext$bubbleP17,_propsContext$bubbleP18;var propsContext=useContext(PropsContext);var _onPress=useCallback(function(index){ChatEmitter.emit('actionPressed',index,props.message);},[props.message]);var onLongPress=useCallback(function(){if(Platform.OS==='ios'){var _propsContext$bubbleP,_propsContext$bubbleP2,_propsContext$bubbleP3,_propsContext$bubbleP4,_propsContext$bubbleP5,_propsContext$bubbleP6,_propsContext$bubbleP7,_propsContext$bubbleP8,_propsContext$bubbleP9;ActionSheetIOS.showActionSheetWithOptions({options:[].concat(_toConsumableArray((_propsContext$bubbleP=propsContext.bubbleProps)===null||_propsContext$bubbleP===void 0?void 0:(_propsContext$bubbleP2=_propsContext$bubbleP.actions)===null||_propsContext$bubbleP2===void 0?void 0:_propsContext$bubbleP2.options.map(function(_){return _.title;})),[(_propsContext$bubbleP3=(_propsContext$bubbleP4=propsContext.bubbleProps)===null||_propsContext$bubbleP4===void 0?void 0:(_propsContext$bubbleP5=_propsContext$bubbleP4.actions)===null||_propsContext$bubbleP5===void 0?void 0:_propsContext$bubbleP5.cancelButtonLabel)!==null&&_propsContext$bubbleP3!==void 0?_propsContext$bubbleP3:'Close']),cancelButtonIndex:(_propsContext$bubbleP6=propsContext.bubbleProps)===null||_propsContext$bubbleP6===void 0?void 0:(_propsContext$bubbleP7=_propsContext$bubbleP6.actions)===null||_propsContext$bubbleP7===void 0?void 0:_propsContext$bubbleP7.options.length,destructiveButtonIndex:((_propsContext$bubbleP8=propsContext.bubbleProps)===null||_propsContext$bubbleP8===void 0?void 0:(_propsContext$bubbleP9=_propsContext$bubbleP8.actions)===null||_propsContext$bubbleP9===void 0?void 0:_propsContext$bubbleP9.options.findIndex(function(_){return _.destructive;}))||-1},_onPress);}},[_onPress,(_propsContext$bubbleP10=propsContext.bubbleProps)===null||_propsContext$bubbleP10===void 0?void 0:(_propsContext$bubbleP11=_propsContext$bubbleP10.actions)===null||_propsContext$bubbleP11===void 0?void 0:_propsContext$bubbleP11.cancelButtonLabel,(_propsContext$bubbleP12=propsContext.bubbleProps)===null||_propsContext$bubbleP12===void 0?void 0:(_propsContext$bubbleP13=_propsContext$bubbleP12.actions)===null||_propsContext$bubbleP13===void 0?void 0:_propsContext$bubbleP13.options]);if(!((_propsContext$bubbleP14=propsContext.bubbleProps)!==null&&_propsContext$bubbleP14!==void 0&&_propsContext$bubbleP14.actions))return props.children;if(!contextMenuView){return React.createElement(TouchableOpacity,{onLongPress:onLongPress},props.children);}if(Platform.OS==='ios'&&Platform.Version>=13){var _propsContext$bubbleP15,_propsContext$bubbleP16;return React.createElement(contextMenuView.default,{actions:(_propsContext$bubbleP15=propsContext.bubbleProps)===null||_propsContext$bubbleP15===void 0?void 0:(_propsContext$bubbleP16=_propsContext$bubbleP15.actions)===null||_propsContext$bubbleP16===void 0?void 0:_propsContext$bubbleP16.options,onPress:function onPress(e){return _onPress(e.nativeEvent.index);}},props.children);}return React.createElement(contextMenuView.default,{actions:(_propsContext$bubbleP17=propsContext.bubbleProps)===null||_propsContext$bubbleP17===void 0?void 0:(_propsContext$bubbleP18=_propsContext$bubbleP17.actions)===null||_propsContext$bubbleP18===void 0?void 0:_propsContext$bubbleP18.options,onPress:function onPress(e){return _onPress(e.nativeEvent.index);}},props.children);}export{ContextMenuWrapper};","map":{"version":3,"mappings":"yEAAA,MAAOA,MAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,WAAT,KAA4B,OAA5B,C,OACSC,c,6KAET,OAASC,YAAT,iBACA,OAASC,eAAT,4BACA,OAASC,WAAT,6BAOA,QAASC,mBAAT,CAA4BC,KAA5B,CAA2C,6KACzC,GAAMC,aAAY,CAAGR,UAAU,CAACG,YAAD,CAA/B,CAEA,GAAMM,SAAO,CAAGR,WAAW,CACxBS,cAAD,CAAW,CACTL,WAAW,CAACM,IAAZN,CAAiB,eAAjBA,CAAkCK,KAAlCL,CAAyCE,KAAK,CAACK,OAA/CP,EAFuB,EAIzB,CAACE,KAAK,CAACK,OAAP,CAJyB,CAA3B,CAOA,GAAMC,YAAW,CAAGZ,WAAW,CAAC,UAAM,CACpC,GAAIa,QAAQ,CAACC,EAATD,GAAgB,KAApB,CAA2B,mNACzBZ,cAAc,CAACc,0BAAfd,CACE,CACEe,OAAO,8BACL,uBAAIT,YAAY,CAACU,WAAjB,wEAAIC,sBAA0BC,OAA9B,iDAAIC,uBAAmCJ,OAAnC,CAA2CK,GAA3C,CACDC,UAAD,QAAOA,EAAC,CAACC,KAAT,EADE,CADC,GAAE,gDAIPhB,YAAY,CAACU,WAJN,yEAIPO,uBAA0BL,OAJnB,iDAIPM,uBAAmCC,iBAJ5B,iEAIiD,OAJnD,EADT,CAOEC,iBAAiB,yBAAEpB,YAAY,CAACU,WAAf,yEAAEW,uBAA0BT,OAA5B,iDAAEU,uBAAmCb,OAAnC,CAA2Cc,MAPhE,CAQEC,sBAAsB,CACpB,qCAAY,CAACd,WAAb,gGAA0BE,OAA1B,wEAAmCH,OAAnC,CAA2CgB,SAA3C,CACGV,UAAD,QAAOA,EAAC,CAACW,WAAT,EADF,IAEK,CAAC,CAXV,CADFhC,CAcEO,QAdFP,EAgBD,CAlB4B,EAmB5B,CACDO,QADC,0BAEDD,YAAY,CAACU,WAFZ,2EAEDiB,wBAA0Bf,OAFzB,kDAEDgB,wBAAmCT,iBAFlC,0BAGDnB,YAAY,CAACU,WAHZ,2EAGDmB,wBAA0BjB,OAHzB,kDAGDkB,wBAAmCrB,OAHlC,CAnB4B,CAA/B,CA0BA,GAAI,2BAACT,YAAY,CAACU,WAAd,4CAACqB,wBAA0BnB,OAA3B,CAAJ,CAAwC,MAAOb,MAAK,CAACiC,QAAb,CAGxC,GAAI,CAACpC,eAAL,CAAsB,CACpB,MACEL,qBAAC0C,gBAAD,EAAkB5B,WAAW,CAAEA,WAA/B,EACGN,KAAK,CAACiC,QADT,CADF,CAKD,CAED,GAAI1B,QAAQ,CAACC,EAATD,GAAgB,KAAhBA,EAAyBA,QAAQ,CAAC4B,OAAT5B,EAAoB,EAAjD,CAAqD,qDACnD,MACEf,qBAACK,eAAD,CAAiBuC,OAAjB,EACEvB,OAAO,0BAAEZ,YAAY,CAACU,WAAf,2EAAE0B,wBAA0BxB,OAA5B,kDAAEyB,wBAAmC5B,OAD9C,CAEER,OAAO,CAAGqC,kBAAD,QAAYrC,SAAO,CAACqC,CAAC,CAACC,WAAFD,CAAcpC,KAAf,CAAnB,EAFX,EAIGH,KAAK,CAACiC,QAJT,CADF,CAQD,CACD,MACEzC,qBAACK,eAAD,CAAiBuC,OAAjB,EACEvB,OAAO,0BAAEZ,YAAY,CAACU,WAAf,2EAAE8B,wBAA0B5B,OAA5B,kDAAE6B,wBAAmChC,OAD9C,CAEER,OAAO,CAAGqC,kBAAD,QAAYrC,SAAO,CAACqC,CAAC,CAACC,WAAFD,CAAcpC,KAAf,CAAnB,EAFX,EAIGH,KAAK,CAACiC,QAJT,CADF,CAQD,CAED,OAASlC,kBAAT","names":["React","useContext","useCallback","ActionSheetIOS","PropsContext","contextMenuView","ChatEmitter","ContextMenuWrapper","props","propsContext","onPress","index","emit","message","onLongPress","Platform","OS","showActionSheetWithOptions","options","bubbleProps","_propsContext$bubbleP","actions","_propsContext$bubbleP2","map","_","title","_propsContext$bubbleP4","_propsContext$bubbleP5","cancelButtonLabel","cancelButtonIndex","_propsContext$bubbleP6","_propsContext$bubbleP7","length","destructiveButtonIndex","findIndex","destructive","_propsContext$bubbleP10","_propsContext$bubbleP11","_propsContext$bubbleP12","_propsContext$bubbleP13","_propsContext$bubbleP14","children","TouchableOpacity","Version","default","_propsContext$bubbleP15","_propsContext$bubbleP16","e","nativeEvent","_propsContext$bubbleP17","_propsContext$bubbleP18"],"sources":["ContextMenuWrapper.tsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { useCallback } from 'react';\nimport { ActionSheetIOS, Platform, TouchableOpacity } from 'react-native';\nimport type { IMessage } from '../types/Chatty.types';\nimport { PropsContext } from '../Chatty';\nimport { contextMenuView } from '../utils/contextMenu';\nimport { ChatEmitter } from '../utils/eventEmitter';\n\ninterface IProps {\n  message: IMessage;\n  children: JSX.Element;\n}\n\nfunction ContextMenuWrapper(props: IProps) {\n  const propsContext = useContext(PropsContext);\n\n  const onPress = useCallback(\n    (index) => {\n      ChatEmitter.emit('actionPressed', index, props.message);\n    },\n    [props.message]\n  );\n\n  const onLongPress = useCallback(() => {\n    if (Platform.OS === 'ios') {\n      ActionSheetIOS.showActionSheetWithOptions(\n        {\n          options: [\n            ...(propsContext.bubbleProps?.actions?.options.map(\n              (_) => _.title\n            ) as string[]),\n            propsContext.bubbleProps?.actions?.cancelButtonLabel ?? 'Close',\n          ],\n          cancelButtonIndex: propsContext.bubbleProps?.actions?.options.length,\n          destructiveButtonIndex:\n            propsContext.bubbleProps?.actions?.options.findIndex(\n              (_) => _.destructive\n            ) || -1,\n        },\n        onPress\n      );\n    }\n  }, [\n    onPress,\n    propsContext.bubbleProps?.actions?.cancelButtonLabel,\n    propsContext.bubbleProps?.actions?.options,\n  ]);\n\n  // If actions are not defined, just return the children\n  if (!propsContext.bubbleProps?.actions) return props.children;\n\n  // If actions are defined, but ios version is not supported, return the actionsheet\n  if (!contextMenuView) {\n    return (\n      <TouchableOpacity onLongPress={onLongPress}>\n        {props.children}\n      </TouchableOpacity>\n    );\n  }\n\n  if (Platform.OS === 'ios' && Platform.Version >= 13) {\n    return (\n      <contextMenuView.default\n        actions={propsContext.bubbleProps?.actions?.options}\n        onPress={(e: any) => onPress(e.nativeEvent.index)}\n      >\n        {props.children}\n      </contextMenuView.default>\n    );\n  }\n  return (\n    <contextMenuView.default\n      actions={propsContext.bubbleProps?.actions?.options}\n      onPress={(e: any) => onPress(e.nativeEvent.index)}\n    >\n      {props.children}\n    </contextMenuView.default>\n  );\n}\n\nexport { ContextMenuWrapper };\n"]},"metadata":{},"sourceType":"module"}