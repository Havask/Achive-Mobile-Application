{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"variant\"],_excluded2=[\"label\",\"icon\",\"renderInPortal\",\"placement\",\"placementProps\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import{Button}from\"../../primitives/Button\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{OverlayContainer}from'@react-native-aria/overlays';import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var Fab=function Fab(_ref,ref){var variant=_ref.variant,props=_objectWithoutProperties(_ref,_excluded);var themeProps=usePropsResolution('FAB',props);var label=themeProps.label,icon=themeProps.icon,renderInPortal=themeProps.renderInPortal,placement=themeProps.placement,placementProps=themeProps.placementProps,newProps=_objectWithoutProperties(themeProps,_excluded2);var fabComponent=React.createElement(Button,_extends({variant:variant},placementProps[placement],{ref:ref,startIcon:icon},newProps),label);if(useHasResponsiveProps(props)){return null;}return renderInPortal?React.createElement(OverlayContainer,null,fabComponent):fabComponent;};export default memo(forwardRef(Fab));","map":{"version":3,"mappings":"gdAAA,MAAOA,MAAP,EAAgBC,IAAhB,CAAsBC,UAAtB,KAAwC,OAAxC,CACA,OAASC,MAAT,+BAEA,OAASC,kBAAT,oCACA,OAASC,gBAAT,KAAiC,6BAAjC,CACA,OAASC,qBAAT,4CAEA,GAAMC,IAAG,CAAG,QAANA,IAAM,MAAmCC,GAAnC,CAAgD,IAA7CC,QAA6C,MAA7CA,OAA6C,CAAjCC,KAAiC,0CAC1D,GAAMC,WAAU,CAAGP,kBAAkB,CAAC,KAAD,CAAQM,KAAR,CAArC,CACA,GACEE,MADF,CAOID,UAPJ,CACEC,KADF,CAEEC,IAFF,CAOIF,UAPJ,CAEEE,IAFF,CAGEC,cAHF,CAOIH,UAPJ,CAGEG,cAHF,CAIEC,SAJF,CAOIJ,UAPJ,CAIEI,SAJF,CAKEC,cALF,CAOIL,UAPJ,CAKEK,cALF,CAMKC,QANL,0BAOIN,UAPJ,aASA,GAAMO,aAAY,CAChBlB,oBAACG,MAAD,WACEM,OAAO,CAAEA,OADX,EAEMO,cAAc,CAACD,SAAD,CAFpB,EAGEP,GAAG,CAAEA,GAHP,CAIEW,SAAS,CAAEN,IAJb,EAKMI,QALN,EAOGL,KAPH,CADF,CAYA,GAAIN,qBAAqB,CAACI,KAAD,CAAzB,CAAkC,CAChC,MAAO,KAAP,CACD,CAED,MAAOI,eAAc,CACnBd,oBAACK,gBAAD,MAAmBa,YAAnB,CADmB,CAGnBA,YAHF,CA3BF,EAkCA,cAAejB,KAAI,CAACC,UAAU,CAACK,GAAD,CAAX,CAAnB","names":["React","memo","forwardRef","Button","usePropsResolution","OverlayContainer","useHasResponsiveProps","Fab","ref","variant","props","themeProps","label","icon","renderInPortal","placement","placementProps","newProps","fabComponent","startIcon"],"sources":["Fab.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Button } from '../../primitives/Button';\nimport type { IFabProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { OverlayContainer } from '@react-native-aria/overlays';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Fab = ({ variant, ...props }: IFabProps, ref: any) => {\n  const themeProps = usePropsResolution('FAB', props);\n  const {\n    label,\n    icon,\n    renderInPortal,\n    placement,\n    placementProps,\n    ...newProps\n  } = themeProps;\n\n  const fabComponent = (\n    <Button\n      variant={variant}\n      {...placementProps[placement]}\n      ref={ref}\n      startIcon={icon}\n      {...newProps}\n    >\n      {label}\n    </Button>\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return renderInPortal ? (\n    <OverlayContainer>{fabComponent}</OverlayContainer>\n  ) : (\n    fabComponent\n  );\n};\n\nexport default memo(forwardRef(Fab));\n"]},"metadata":{},"sourceType":"module"}