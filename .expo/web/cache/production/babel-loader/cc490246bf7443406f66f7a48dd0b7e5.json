{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useImperativeHandle,useState}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";function _FAB(_,ref){var _$containerStyle,_$content;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isVisible=_useState2[0],setIsVisible=_useState2[1];useImperativeHandle(ref,function(){return{show:function show(){return setIsVisible(true);},hide:function hide(){return setIsVisible(false);}};},[]);if(!isVisible)return null;return React.createElement(TouchableOpacity,{style:(_$containerStyle=_.containerStyle)!==null&&_$containerStyle!==void 0?_$containerStyle:styles.button,onPress:_.onPress},(_$content=_.content)!==null&&_$content!==void 0?_$content:React.createElement(Text,{style:styles.label},\"DOWN\"));}var styles=StyleSheet.create({button:{width:50,zIndex:1,height:50,backgroundColor:'lightblue',padding:10,borderRadius:50,position:'absolute',bottom:50,right:20},label:{textAlign:'center',fontSize:10}});export var FAB=React.memo(React.forwardRef(_FAB));","map":{"version":3,"mappings":"iEACA,MAAOA,MAAP,EAAgBC,mBAAhB,CAAqCC,QAArC,KAAqD,OAArD,C,mMASA,QAASC,KAAT,CAAcC,CAAd,CAAuCC,GAAvC,CAA0D,gCACxD,cAAkCH,QAAQ,CAAU,KAAV,CAA1C,wCAAOI,SAAP,eAAkBC,YAAlB,eAEAN,mBAAmB,CACjBI,GADiB,CAEjB,iBAAO,CACLG,IAAI,CAAE,sBAAMD,aAAY,CAAC,IAAD,CAAlB,EADD,CAELE,IAAI,CAAE,sBAAMF,aAAY,CAAC,KAAD,CAAlB,EAFD,CAAP,EAFiB,CAMjB,EANiB,CAAnBN,CASA,GAAI,CAACK,SAAL,CAAgB,MAAO,KAAP,CAEhB,MACEN,qBAACU,gBAAD,EACEC,KAAK,mBAAEP,CAAC,CAACQ,cAAJ,qDAAsBC,MAAM,CAACC,MADpC,CAEEC,OAAO,CAAEX,CAAC,CAACW,OAFb,aAIGX,CAAC,CAACY,OAJL,uCAIgBhB,oBAACiB,IAAD,EAAMN,KAAK,CAAEE,MAAM,CAACK,KAApB,SAJhB,CADF,CAQD,CAED,GAAML,OAAM,CAAGM,UAAU,CAACC,MAAXD,CAAkB,CAC/BL,MAAM,CAAE,CACNO,KAAK,CAAE,EADD,CAENC,MAAM,CAAE,CAFF,CAGNC,MAAM,CAAE,EAHF,CAINC,eAAe,CAAE,WAJX,CAKNC,OAAO,CAAE,EALH,CAMNC,YAAY,CAAE,EANR,CAONC,QAAQ,CAAE,UAPJ,CAQNC,MAAM,CAAE,EARF,CASNC,KAAK,CAAE,EATD,CADuB,CAY/BX,KAAK,CAAE,CACLY,SAAS,CAAE,QADN,CAELC,QAAQ,CAAE,EAFL,CAZwB,CAAlBZ,CAAf,CAkBA,MAAO,IAAMa,IAAG,CAAGhC,KAAK,CAACiC,IAANjC,CAAWA,KAAK,CAACkC,UAANlC,CAAiBG,IAAjBH,CAAXA,CAAZ","names":["React","useImperativeHandle","useState","_FAB","_","ref","isVisible","setIsVisible","show","hide","TouchableOpacity","style","containerStyle","styles","button","onPress","content","Text","label","StyleSheet","create","width","zIndex","height","backgroundColor","padding","borderRadius","position","bottom","right","textAlign","fontSize","FAB","memo","forwardRef"],"sources":["FAB.tsx"],"sourcesContent":["import type { Ref } from 'react';\nimport React, { useImperativeHandle, useState } from 'react';\nimport { StyleSheet, Text, TouchableOpacity } from 'react-native';\nimport type { IScrollToBottomProps } from 'src/types/Chatty.types';\n\nexport interface IFabRef {\n  show: () => void;\n  hide: () => void;\n}\n\nfunction _FAB(_: IScrollToBottomProps, ref: Ref<IFabRef>) {\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      show: () => setIsVisible(true),\n      hide: () => setIsVisible(false),\n    }),\n    []\n  );\n\n  if (!isVisible) return null;\n\n  return (\n    <TouchableOpacity\n      style={_.containerStyle ?? styles.button}\n      onPress={_.onPress}\n    >\n      {_.content ?? <Text style={styles.label}>DOWN</Text>}\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    width: 50,\n    zIndex: 1,\n    height: 50,\n    backgroundColor: 'lightblue',\n    padding: 10,\n    borderRadius: 50,\n    position: 'absolute',\n    bottom: 50,\n    right: 20,\n  },\n  label: {\n    textAlign: 'center',\n    fontSize: 10,\n  },\n});\n\nexport const FAB = React.memo(React.forwardRef(_FAB));\n"]},"metadata":{},"sourceType":"module"}