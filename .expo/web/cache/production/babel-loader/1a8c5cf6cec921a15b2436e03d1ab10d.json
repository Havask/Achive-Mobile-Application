{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"trigger\",\"closeOnSelect\",\"children\",\"onOpen\",\"onClose\",\"isOpen\",\"defaultIsOpen\",\"placement\"],_excluded2=[\"_overlay\",\"_presenceTransition\",\"_backdrop\"],_excluded3=[\"menuRef\",\"children\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import Box from\"../../primitives/Box\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{Popper}from\"../Popper\";import AccessibilityInfo from\"react-native-web/dist/exports/AccessibilityInfo\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import{useControllableState}from\"../../../hooks\";import{useMenuTrigger,useMenu,useMenuTypeahead}from\"./useMenu\";import Backdrop from\"../Backdrop\";import{PresenceTransition}from\"../Transitions\";import{FocusScope}from'@react-native-aria/focus';import{MenuContext}from\"./MenuContext\";import{Overlay}from\"../../primitives/Overlay\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var Menu=function Menu(_ref,ref){var trigger=_ref.trigger,_ref$closeOnSelect=_ref.closeOnSelect,closeOnSelect=_ref$closeOnSelect===void 0?true:_ref$closeOnSelect,children=_ref.children,onOpen=_ref.onOpen,onClose=_ref.onClose,isOpenProp=_ref.isOpen,defaultIsOpen=_ref.defaultIsOpen,_ref$placement=_ref.placement,placement=_ref$placement===void 0?'bottom left':_ref$placement,props=_objectWithoutProperties(_ref,_excluded);var triggerRef=React.useRef(null);var _useControllableState=useControllableState({value:isOpenProp,defaultValue:defaultIsOpen,onChange:function onChange(value){value?onOpen&&onOpen():onClose&&onClose();}}),_useControllableState2=_slicedToArray(_useControllableState,2),isOpen=_useControllableState2[0],setIsOpen=_useControllableState2[1];var _usePropsResolution=usePropsResolution('Menu',props),_overlay=_usePropsResolution._overlay,_presenceTransition=_usePropsResolution._presenceTransition,_backdrop=_usePropsResolution._backdrop,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded2);var handleOpen=React.useCallback(function(){setIsOpen(true);},[setIsOpen]);var handleClose=React.useCallback(function(){setIsOpen(false);},[setIsOpen]);var triggerProps=useMenuTrigger({handleOpen:handleOpen,isOpen:isOpen});var updatedTrigger=function updatedTrigger(){return trigger(_objectSpread(_objectSpread({},triggerProps),{},{ref:triggerRef,onPress:handleOpen}),{open:isOpen});};React.useEffect(function(){if(isOpen){AccessibilityInfo.announceForAccessibility('Popup window');}},[isOpen]);if(useHasResponsiveProps(resolvedProps)){return null;}return React.createElement(React.Fragment,null,updatedTrigger(),React.createElement(Overlay,_extends({isOpen:isOpen,onRequestClose:handleClose,useRNModalOnAndroid:true},_overlay,{unmountOnExit:true}),React.createElement(PresenceTransition,_extends({visible:isOpen},_presenceTransition),React.createElement(Popper,_extends({triggerRef:triggerRef,onClose:handleClose,placement:placement},resolvedProps),React.createElement(Backdrop,_extends({onPress:handleClose},_backdrop)),React.createElement(Popper.Content,{isOpen:isOpen},React.createElement(MenuContext.Provider,{value:{closeOnSelect:closeOnSelect,onClose:handleClose}},React.createElement(FocusScope,{contain:true,restoreFocus:true,autoFocus:true},React.createElement(MenuContent,_extends({menuRef:ref},resolvedProps),children))))))));};var MenuContent=function MenuContent(_ref2){var menuRef=_ref2.menuRef,children=_ref2.children,props=_objectWithoutProperties(_ref2,_excluded3);var menuProps=useMenu();var typeaheadProps=useMenuTypeahead(menuProps);return React.createElement(Box,_extends({},props,menuProps,typeaheadProps,{ref:menuRef}),React.createElement(ScrollView,null,children));};export default memo(forwardRef(Menu));","map":{"version":3,"mappings":"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","names":["React","memo","forwardRef","Box","usePropsResolution","Popper","useControllableState","useMenuTrigger","useMenu","useMenuTypeahead","Backdrop","PresenceTransition","FocusScope","MenuContext","Overlay","useHasResponsiveProps","Menu","ref","trigger","closeOnSelect","children","onOpen","onClose","isOpenProp","isOpen","defaultIsOpen","placement","props","triggerRef","useRef","value","defaultValue","onChange","setIsOpen","_overlay","_presenceTransition","_backdrop","resolvedProps","handleOpen","useCallback","handleClose","triggerProps","updatedTrigger","onPress","open","useEffect","AccessibilityInfo","announceForAccessibility","onRequestClose","useRNModalOnAndroid","unmountOnExit","visible","Content","Provider","contain","restoreFocus","autoFocus","MenuContent","menuRef","menuProps","typeaheadProps","ScrollView"],"sources":["Menu.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport type { IMenuProps } from './types';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Popper } from '../Popper';\nimport { AccessibilityInfo, ScrollView } from 'react-native';\nimport { useControllableState } from '../../../hooks';\nimport { useMenuTrigger, useMenu, useMenuTypeahead } from './useMenu';\nimport Backdrop from '../Backdrop';\nimport { PresenceTransition } from '../Transitions';\nimport { FocusScope } from '@react-native-aria/focus';\nimport { MenuContext } from './MenuContext';\nimport { Overlay } from '../../primitives/Overlay';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Menu = (\n  {\n    trigger,\n    closeOnSelect = true,\n    children,\n    onOpen,\n    onClose,\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    placement = 'bottom left',\n    ...props\n  }: IMenuProps,\n  ref?: any\n) => {\n  const triggerRef = React.useRef(null);\n  const [isOpen, setIsOpen] = useControllableState({\n    value: isOpenProp,\n    defaultValue: defaultIsOpen,\n    onChange: (value) => {\n      value ? onOpen && onOpen() : onClose && onClose();\n    },\n  });\n\n  const {\n    _overlay,\n    _presenceTransition,\n    _backdrop,\n    ...resolvedProps\n  } = usePropsResolution('Menu', props);\n  const handleOpen = React.useCallback(() => {\n    setIsOpen(true);\n  }, [setIsOpen]);\n\n  const handleClose = React.useCallback(() => {\n    setIsOpen(false);\n  }, [setIsOpen]);\n\n  const triggerProps = useMenuTrigger({\n    handleOpen,\n    isOpen,\n  });\n\n  const updatedTrigger = () => {\n    return trigger(\n      {\n        ...triggerProps,\n        ref: triggerRef,\n        onPress: handleOpen,\n      },\n      { open: isOpen }\n    );\n  };\n\n  React.useEffect(() => {\n    if (isOpen) {\n      AccessibilityInfo.announceForAccessibility('Popup window');\n    }\n  }, [isOpen]);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(resolvedProps)) {\n    return null;\n  }\n  return (\n    <>\n      {updatedTrigger()}\n      <Overlay\n        isOpen={isOpen}\n        onRequestClose={handleClose}\n        useRNModalOnAndroid\n        {..._overlay}\n        unmountOnExit\n      >\n        <PresenceTransition visible={isOpen} {..._presenceTransition}>\n          <Popper\n            triggerRef={triggerRef}\n            onClose={handleClose}\n            placement={placement}\n            {...resolvedProps}\n          >\n            <Backdrop onPress={handleClose} {..._backdrop} />\n            <Popper.Content isOpen={isOpen}>\n              <MenuContext.Provider\n                value={{ closeOnSelect, onClose: handleClose }}\n              >\n                <FocusScope contain restoreFocus autoFocus>\n                  <MenuContent menuRef={ref} {...resolvedProps}>\n                    {children}\n                  </MenuContent>\n                </FocusScope>\n              </MenuContext.Provider>\n            </Popper.Content>\n          </Popper>\n        </PresenceTransition>\n      </Overlay>\n    </>\n  );\n};\n\nconst MenuContent = ({\n  menuRef,\n  children,\n  ...props\n}: Omit<IMenuProps, 'trigger'> & { menuRef: any }) => {\n  const menuProps = useMenu();\n  const typeaheadProps = useMenuTypeahead(menuProps);\n\n  return (\n    <Box {...props} {...menuProps} {...typeaheadProps} ref={menuRef}>\n      <ScrollView>{children}</ScrollView>\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(Menu));\n"]},"metadata":{},"sourceType":"module"}