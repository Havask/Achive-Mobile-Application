{"ast":null,"code":"import Platform from\"react-native-web/dist/exports/Platform\";import createMultiStyleIconSet from\"./createMultiStyleIconSet\";export var FA5Style={regular:'regular',light:'light',solid:'solid',brand:'brand'};export function createFA5iconSet(glyphMap){var metadata=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var fonts=arguments.length>2?arguments[2]:undefined;var pro=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;var metadataKeys=Object.keys(metadata);var fontFamily=\"FontAwesome5\"+(pro?'Pro':'Free');function fallbackFamily(glyph){for(var i=0;i<metadataKeys.length;i+=1){var family=metadataKeys[i];if(metadata[family].indexOf(glyph)!==-1){return family==='brands'?'brand':family;}}return'regular';}function glyphValidator(glyph,style){var family=style==='brand'?'brands':style;if(metadataKeys.indexOf(family)===-1)return false;return metadata[family].indexOf(glyph)!==-1;}function createFontAwesomeStyle(styleName,fontWeight){var family=arguments.length>2&&arguments[2]!==undefined?arguments[2]:fontFamily;var fontFile=fonts[styleName];return{fontFamily:family+\"-\"+styleName,fontFile:fontFile,fontStyle:Platform.select({ios:{fontWeight:fontWeight},default:{}}),glyphMap:glyphMap};}var brandIcons=createFontAwesomeStyle('Brand','400');var lightIcons=createFontAwesomeStyle('Light','100');var regularIcons=createFontAwesomeStyle('Regular','400');var solidIcons=createFontAwesomeStyle('Solid','700');var Icon=createMultiStyleIconSet({brand:brandIcons,light:lightIcons,regular:regularIcons,solid:solidIcons},{defaultStyle:'regular',fallbackFamily:fallbackFamily,glyphValidator:glyphValidator});return Icon;}","map":{"version":3,"mappings":"6DACA,MAAOA,wBAAP,iCAEA,MAAO,IAAMC,SAAQ,CAAG,CACtBC,OAAO,CAAE,SADa,CAEtBC,KAAK,CAAE,OAFe,CAGtBC,KAAK,CAAE,OAHe,CAItBC,KAAK,CAAE,OAJe,CAAjB,CAOP,MAAM,SAAUC,iBAAV,CAA2BC,QAA3B,CAAsE,IAAjCC,SAAiC,2DAAtB,EAAsB,IAAlBC,MAAkB,8CAAXC,IAAW,2DAAL,KAAK,CAC1E,GAAMC,aAAY,CAAGC,MAAM,CAACC,IAAP,CAAYL,QAAZ,CAArB,CACA,GAAMM,WAAU,iBAAkBJ,GAAG,CAAG,KAAH,CAAW,MAAhC,CAAhB,CAEA,QAASK,eAAT,CAAwBC,KAAxB,CAA6B,CAC3B,IAAK,GAAIC,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGN,YAAY,CAACO,MAAjC,CAAyCD,CAAC,EAAI,CAA9C,CAAiD,CAC/C,GAAME,OAAM,CAAGR,YAAY,CAACM,CAAD,CAA3B,CACA,GAAIT,QAAQ,CAACW,MAAD,CAAR,CAAiBC,OAAjB,CAAyBJ,KAAzB,IAAoC,CAAC,CAAzC,CAA4C,CAC1C,MAAOG,OAAM,GAAK,QAAX,CAAsB,OAAtB,CAAgCA,MAAvC,CACD,CACF,CAED,MAAO,SAAP,CACD,CAED,QAASE,eAAT,CAAwBL,KAAxB,CAA+BM,KAA/B,CAAoC,CAClC,GAAMH,OAAM,CAAGG,KAAK,GAAK,OAAV,CAAoB,QAApB,CAA+BA,KAA9C,CACA,GAAIX,YAAY,CAACS,OAAb,CAAqBD,MAArB,IAAiC,CAAC,CAAtC,CAAyC,MAAO,MAAP,CACzC,MAAOX,SAAQ,CAACW,MAAD,CAAR,CAAiBC,OAAjB,CAAyBJ,KAAzB,IAAoC,CAAC,CAA5C,CACD,CAED,QAASO,uBAAT,CAAgCC,SAAhC,CAA2CC,UAA3C,CAA0E,IAAnBN,OAAmB,2DAAVL,UAAU,CACxE,GAAIY,SAAQ,CAAGjB,KAAK,CAACe,SAAD,CAApB,CAEA,MAAO,CACLV,UAAU,CAAKK,MAAL,KAAeK,SADpB,CAELE,QAAQ,CAARA,QAFK,CAGLC,SAAS,CAAEC,QAAQ,CAACC,MAAT,CAAgB,CACzBC,GAAG,CAAE,CACHL,UAAU,CAAVA,UADG,CADoB,CAIzBM,OAAO,CAAE,EAJgB,CAAhB,CAHN,CASLxB,QAAQ,CAARA,QATK,CAAP,CAWD,CAED,GAAMyB,WAAU,CAAGT,sBAAsB,CAAC,OAAD,CAAU,KAAV,CAAzC,CACA,GAAMU,WAAU,CAAGV,sBAAsB,CAAC,OAAD,CAAU,KAAV,CAAzC,CACA,GAAMW,aAAY,CAAGX,sBAAsB,CAAC,SAAD,CAAY,KAAZ,CAA3C,CACA,GAAMY,WAAU,CAAGZ,sBAAsB,CAAC,OAAD,CAAU,KAAV,CAAzC,CACA,GAAMa,KAAI,CAAGpC,uBAAuB,CAClC,CACEK,KAAK,CAAE2B,UADT,CAEE7B,KAAK,CAAE8B,UAFT,CAGE/B,OAAO,CAAEgC,YAHX,CAIE9B,KAAK,CAAE+B,UAJT,CADkC,CAOlC,CACEE,YAAY,CAAE,SADhB,CAEEtB,cAAc,CAAdA,cAFF,CAGEM,cAAc,CAAdA,cAHF,CAPkC,CAApC,CAcA,MAAOe,KAAP,CACD","names":["createMultiStyleIconSet","FA5Style","regular","light","solid","brand","createFA5iconSet","glyphMap","metadata","fonts","pro","metadataKeys","Object","keys","fontFamily","fallbackFamily","glyph","i","length","family","indexOf","glyphValidator","style","createFontAwesomeStyle","styleName","fontWeight","fontFile","fontStyle","Platform","select","ios","default","brandIcons","lightIcons","regularIcons","solidIcons","Icon","defaultStyle"],"sourceRoot":"","sources":["../src/createIconSetFromFontAwesome5.ts"],"sourcesContent":["import { Platform } from 'react-native';\nimport createMultiStyleIconSet from './createMultiStyleIconSet';\n\nexport const FA5Style = {\n  regular: 'regular',\n  light: 'light',\n  solid: 'solid',\n  brand: 'brand',\n};\n\nexport function createFA5iconSet(glyphMap, metadata = {}, fonts, pro = false) {\n  const metadataKeys = Object.keys(metadata);\n  const fontFamily = `FontAwesome5${pro ? 'Pro' : 'Free'}`;\n\n  function fallbackFamily(glyph) {\n    for (let i = 0; i < metadataKeys.length; i += 1) {\n      const family = metadataKeys[i];\n      if (metadata[family].indexOf(glyph) !== -1) {\n        return family === 'brands' ? 'brand' : family;\n      }\n    }\n\n    return 'regular';\n  }\n\n  function glyphValidator(glyph, style) {\n    const family = style === 'brand' ? 'brands' : style;\n    if (metadataKeys.indexOf(family) === -1) return false;\n    return metadata[family].indexOf(glyph) !== -1;\n  }\n\n  function createFontAwesomeStyle(styleName, fontWeight, family = fontFamily) {\n    let fontFile = fonts[styleName];\n\n    return {\n      fontFamily: `${family}-${styleName}`,\n      fontFile,\n      fontStyle: Platform.select({\n        ios: {\n          fontWeight,\n        },\n        default: {},\n      }),\n      glyphMap,\n    };\n  }\n\n  const brandIcons = createFontAwesomeStyle('Brand', '400');\n  const lightIcons = createFontAwesomeStyle('Light', '100');\n  const regularIcons = createFontAwesomeStyle('Regular', '400');\n  const solidIcons = createFontAwesomeStyle('Solid', '700');\n  const Icon = createMultiStyleIconSet(\n    {\n      brand: brandIcons,\n      light: lightIcons,\n      regular: regularIcons,\n      solid: solidIcons,\n    },\n    {\n      defaultStyle: 'regular',\n      fallbackFamily,\n      glyphValidator,\n    },\n  );\n\n  return Icon;\n}"]},"metadata":{},"sourceType":"module"}