{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{useContext}from'react';import Appearance from\"react-native-web/dist/exports/Appearance\";import View from\"react-native-web/dist/exports/View\";import{PropsContext}from\"../Chatty\";var isLoaded=false;try{require('moti');require('expo-linear-gradient');isLoaded=true;}catch(_unused){console.warn('Moti and expo-linear-gradient is not installed. Skeleton loader will not work.');}export function Skeleton(props){var propsContext=useContext(PropsContext);if(propsContext!==null&&propsContext!==void 0&&propsContext.enableSkeletonLoader&&isLoaded){try{var SS=require('moti/skeleton').Skeleton;return React.createElement(SS,_extends({colorMode:Appearance.getColorScheme()},props),props.children);}catch(_unused2){console.warn('Moti and expo-linear-gradient is not installed. Skeleton loader will not work.');}}return React.createElement(View,null,props.children);}","map":{"version":3,"mappings":"uRAAA,MAAOA,MAAP,EAAgBC,UAAhB,KAAkC,OAAlC,C,sHAEA,OAASC,YAAT,iBACA,GAAIC,SAAiB,CAAG,KAAxB,CAEA,GAAI,CACFC,OAAO,CAAC,MAAD,CAAPA,CACAA,OAAO,CAAC,sBAAD,CAAPA,CACAD,QAAQ,CAAG,IAAXA,CAHF,CAIE,cAAM,CACNE,OAAO,CAACC,IAARD,CACE,gFADFA,EAGD,CAOD,MAAO,SAASE,SAAT,CAAkBC,KAAlB,CAA8B,CACnC,GAAMC,aAAY,CAAGR,UAAU,CAACC,YAAD,CAA/B,CAEA,GAAIO,YAAY,OAAZA,cAAY,SAAZA,cAAY,CAAEC,oBAAdD,EAAsCN,QAA1C,CAAoD,CAClD,GAAI,CACF,GAAMQ,GAAE,CAAGP,OAAO,CAAC,eAAD,CAAPA,CAAyBG,QAApC,CAEA,MACEP,qBAACW,EAAD,WAAIC,SAAS,CAAEC,UAAU,CAACC,cAAXD,EAAf,EAAgDL,KAAhD,EACGA,KAAK,CAACO,QADT,CADF,CAHF,CAQE,eAAM,CACNV,OAAO,CAACC,IAARD,CACE,gFADFA,EAGD,CACF,CAED,MAAOL,qBAACgB,IAAD,MAAOR,KAAK,CAACO,QAAb,CAAP,CACD","names":["React","useContext","PropsContext","isLoaded","require","console","warn","Skeleton","props","propsContext","enableSkeletonLoader","SS","colorMode","Appearance","getColorScheme","children","View"],"sources":["moti.tsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { Appearance, View } from 'react-native';\nimport { PropsContext } from '../Chatty';\nlet isLoaded: boolean = false;\n\ntry {\n  require('moti');\n  require('expo-linear-gradient');\n  isLoaded = true;\n} catch {\n  console.warn(\n    'Moti and expo-linear-gradient is not installed. Skeleton loader will not work.'\n  );\n}\n\n/**\n * If the skeleton loader is enabled, then render the skeleton loader. Otherwise, render the children\n * @param {any} props - any\n * @returns A skeleton component / Native view object\n */\nexport function Skeleton(props: any) {\n  const propsContext = useContext(PropsContext);\n\n  if (propsContext?.enableSkeletonLoader && isLoaded) {\n    try {\n      const SS = require('moti/skeleton').Skeleton;\n\n      return (\n        <SS colorMode={Appearance.getColorScheme()} {...props}>\n          {props.children}\n        </SS>\n      );\n    } catch {\n      console.warn(\n        'Moti and expo-linear-gradient is not installed. Skeleton loader will not work.'\n      );\n    }\n  }\n\n  return <View>{props.children}</View>;\n}\n"]},"metadata":{},"sourceType":"module"}