{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{useCallback}from'react';import{triggerHaptic}from\"../utils/hapticEngine\";export function useHaptic(){var trigger=useCallback(function _callee(type){return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(triggerHaptic(type).catch(function(err){return console.error('Error while triggering haptic',err);}));case 2:case\"end\":return _context.stop();}}},null,null,null,Promise);},[]);return{trigger:trigger};}","map":{"version":3,"mappings":"4DAAA,OAASA,WAAT,KAA4B,OAA5B,CAEA,OAASC,aAAT,6BAMA,MAAO,SAASC,UAAT,EAAqB,CAC1B,GAAMC,QAAO,CAAGH,WAAW,CAAC,iBAAOI,IAAP,oKACpBH,aAAa,CAACG,IAAD,CAAbH,CAAoBI,KAApBJ,CAA2BK,YAAD,QAC9BC,QAAO,CAACC,KAARD,CAAc,+BAAdA,CAA+CD,GAA/CC,CAD8B,EAA1BN,CADoB,uEAAD,CAIxB,EAJwB,CAA3B,CAMA,MAAO,CAAEE,eAAF,CAAP,CACD","names":["useCallback","triggerHaptic","useHaptic","trigger","type","catch","err","console","error"],"sources":["useHaptic.ts"],"sourcesContent":["import { useCallback } from 'react';\nimport type { HapticType } from '../types/Chatty.types';\nimport { triggerHaptic } from '../utils/hapticEngine';\n\n/**\n * `useHaptic` returns a `trigger` function that triggers haptic feedback\n * @returns A function that triggers haptic feedback.\n */\nexport function useHaptic() {\n  const trigger = useCallback(async (type: HapticType) => {\n    await triggerHaptic(type).catch((err) =>\n      console.error('Error while triggering haptic', err)\n    );\n  }, []);\n\n  return { trigger };\n}\n"]},"metadata":{},"sourceType":"module"}