{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"wrapperRef\",\"isHovered\",\"isFocusVisible\"],_excluded2=[\"isInvalid\",\"isReadOnly\",\"isIndeterminate\"],_excluded3=[\"icon\",\"_interactionBox\",\"_icon\",\"_stack\",\"_text\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import{mergeRefs}from\"../../../utils\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{Center}from\"../../composites/Center\";import{useFormControlContext}from\"../../composites/FormControl\";import Box from\"../Box\";import{useToggleState}from'@react-stately/toggle';import{VisuallyHidden}from'@react-aria/visually-hidden';import{CheckboxGroupContext}from\"./CheckboxGroup\";import{useHover}from'@react-native-aria/interactions';import{useCheckbox,useCheckboxGroupItem}from'@react-native-aria/checkbox';import{useFocusRing}from'@react-native-aria/focus';import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";import{extractInObject,stylingProps}from\"../../../theme/tools/utils\";import{combineContextAndProps}from\"../../../utils\";import SizedIcon from\"./SizedIcon\";import{Stack}from\"../Stack\";import{wrapStringChild}from\"../../../utils/wrapStringChild\";var Checkbox=function Checkbox(_ref2,ref){var wrapperRef=_ref2.wrapperRef,isHoveredProp=_ref2.isHovered,isFocusVisibleProp=_ref2.isFocusVisible,props=_objectWithoutProperties(_ref2,_excluded);var formControlContext=useFormControlContext();var _combineContextAndPro=combineContextAndProps(formControlContext,props),isInvalid=_combineContextAndPro.isInvalid,isReadOnly=_combineContextAndPro.isReadOnly,isIndeterminate=_combineContextAndPro.isIndeterminate,combinedProps=_objectWithoutProperties(_combineContextAndPro,_excluded2);var checkboxGroupContext=React.useContext(CheckboxGroupContext);var state=useToggleState(_objectSpread(_objectSpread({},props),{},{defaultSelected:props.defaultIsChecked,isSelected:props.isChecked}));var _ref=React.useRef();var mergedRef=mergeRefs([ref,_ref]);var _ref3=checkboxGroupContext?useCheckboxGroupItem(_objectSpread(_objectSpread({},combinedProps),{},{'aria-label':combinedProps.accessibilityLabel,'value':combinedProps.value}),checkboxGroupContext.state,mergedRef):useCheckbox(_objectSpread(_objectSpread({},combinedProps),{},{'aria-label':combinedProps.accessibilityLabel}),state,mergedRef),groupItemInputProps=_ref3.inputProps;var inputProps=React.useMemo(function(){return groupItemInputProps;},[groupItemInputProps.checked,groupItemInputProps.disabled,groupItemInputProps]);var _React$useState=React.useState(_objectSpread(_objectSpread({},checkboxGroupContext),combinedProps)),_React$useState2=_slicedToArray(_React$useState,1),contextCombinedProps=_React$useState2[0];return React.createElement(CheckboxComponent,{wrapperRef:wrapperRef,mergedRef:mergedRef,inputProps:inputProps,combinedProps:contextCombinedProps,isInvalid:isInvalid,isReadOnly:isReadOnly,isHovered:isHoveredProp,isIndeterminate:isIndeterminate,isFocusVisible:isFocusVisibleProp});};var CheckboxComponent=React.memo(function(_ref4){var wrapperRef=_ref4.wrapperRef,inputProps=_ref4.inputProps,combinedProps=_ref4.combinedProps,isInvalid=_ref4.isInvalid,isReadOnly=_ref4.isReadOnly,isIndeterminate=_ref4.isIndeterminate,mergedRef=_ref4.mergedRef,isHoveredProp=_ref4.isHovered,isFocusVisibleProp=_ref4.isFocusVisible;var _ref=React.useRef();var _useHover=useHover({},_ref),isHovered=_useHover.isHovered;var isChecked=inputProps.checked,isDisabled=inputProps.disabled;var _useFocusRing=useFocusRing(),focusProps=_useFocusRing.focusProps,isFocusVisible=_useFocusRing.isFocusVisible;var _usePropsResolution=usePropsResolution('Checkbox',combinedProps,{isInvalid:isInvalid,isReadOnly:isReadOnly,isFocusVisible:isFocusVisibleProp||isFocusVisible,isDisabled:isDisabled,isIndeterminate:isIndeterminate,isChecked:isChecked,isHovered:isHovered||isHoveredProp}),icon=_usePropsResolution.icon,_interactionBox=_usePropsResolution._interactionBox,_icon=_usePropsResolution._icon,_stack=_usePropsResolution._stack,_text=_usePropsResolution._text,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded3);var _extractInObject=extractInObject(resolvedProps,[].concat(_toConsumableArray(stylingProps.margin),_toConsumableArray(stylingProps.layout),_toConsumableArray(stylingProps.flexbox),_toConsumableArray(stylingProps.position),['_text'])),_extractInObject2=_slicedToArray(_extractInObject,2),layoutProps=_extractInObject2[0],nonLayoutProps=_extractInObject2[1];var component=React.useMemo(function(){return React.createElement(Stack,_extends({},_stack,layoutProps),React.createElement(Center,null,React.createElement(Box,_extends({},_interactionBox,{h:isFocusVisible||isFocusVisibleProp?'130%':'0%',w:isFocusVisible||isFocusVisibleProp?'130%':'0%'})),React.createElement(Center,nonLayoutProps,React.createElement(SizedIcon,{icon:icon,_icon:_icon,isChecked:isChecked}))),wrapStringChild(resolvedProps===null||resolvedProps===void 0?void 0:resolvedProps.children,_text));},[_icon,_stack,_text,_interactionBox,icon,isChecked,isFocusVisible,nonLayoutProps,layoutProps,isFocusVisibleProp,resolvedProps===null||resolvedProps===void 0?void 0:resolvedProps.children]);var mergedWrapperRef=React.useMemo(function(){return mergeRefs([wrapperRef,_ref]);},[wrapperRef]);if(useHasResponsiveProps(resolvedProps)){return null;}return React.createElement(Box,{accessibilityRole:\"label\",ref:mergedWrapperRef},React.createElement(VisuallyHidden,null,React.createElement(\"input\",_extends({},inputProps,focusProps,{ref:mergedRef}))),component);});export default memo(forwardRef(Checkbox));","map":{"version":3,"mappings":"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","names":["React","memo","forwardRef","mergeRefs","usePropsResolution","Center","useFormControlContext","Box","useToggleState","VisuallyHidden","CheckboxGroupContext","useHover","useCheckbox","useCheckboxGroupItem","useFocusRing","useHasResponsiveProps","extractInObject","stylingProps","combineContextAndProps","SizedIcon","Stack","wrapStringChild","Checkbox","ref","wrapperRef","isHoveredProp","isHovered","isFocusVisibleProp","isFocusVisible","props","formControlContext","isInvalid","isReadOnly","isIndeterminate","combinedProps","checkboxGroupContext","useContext","state","defaultSelected","defaultIsChecked","isSelected","isChecked","_ref","useRef","mergedRef","accessibilityLabel","value","groupItemInputProps","inputProps","useMemo","checked","disabled","useState","contextCombinedProps","CheckboxComponent","isDisabled","focusProps","icon","_interactionBox","_icon","_stack","_text","resolvedProps","margin","layout","flexbox","position","layoutProps","nonLayoutProps","component","h","w","children","mergedWrapperRef","accessibilityRole"],"sources":["Checkbox.web.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { mergeRefs } from '../../../utils';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Center } from '../../composites/Center';\nimport { useFormControlContext } from '../../composites/FormControl';\nimport Box from '../Box';\nimport type { ICheckboxProps } from './types';\nimport { useToggleState } from '@react-stately/toggle';\nimport { VisuallyHidden } from '@react-aria/visually-hidden';\nimport { CheckboxGroupContext } from './CheckboxGroup';\nimport { useHover } from '@react-native-aria/interactions';\nimport { useCheckbox, useCheckboxGroupItem } from '@react-native-aria/checkbox';\nimport { useFocusRing } from '@react-native-aria/focus';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport { combineContextAndProps } from '../../../utils';\nimport SizedIcon from './SizedIcon';\nimport { Stack } from '../Stack';\nimport { wrapStringChild } from '../../../utils/wrapStringChild';\n\nconst Checkbox = (\n  {\n    wrapperRef,\n    isHovered: isHoveredProp,\n    isFocusVisible: isFocusVisibleProp,\n    ...props\n  }: ICheckboxProps,\n  ref: any\n) => {\n  const formControlContext = useFormControlContext();\n\n  const {\n    isInvalid,\n    isReadOnly,\n    isIndeterminate,\n    ...combinedProps\n  } = combineContextAndProps(formControlContext, props);\n\n  const checkboxGroupContext = React.useContext(CheckboxGroupContext);\n  const state = useToggleState({\n    ...props,\n    defaultSelected: props.defaultIsChecked,\n    isSelected: props.isChecked,\n  });\n\n  const _ref = React.useRef();\n  const mergedRef = mergeRefs([ref, _ref]);\n\n  // Swap hooks depending on whether this checkbox is inside a CheckboxGroup.\n  // This is a bit unorthodox. Typically, hooks cannot be called in a conditional,\n  // but since the checkbox won't move in and out of a group, it should be safe.\n  const { inputProps: groupItemInputProps } = checkboxGroupContext\n    ? // eslint-disable-next-line react-hooks/rules-of-hooks\n      useCheckboxGroupItem(\n        {\n          ...combinedProps,\n          'aria-label': combinedProps.accessibilityLabel,\n          'value': combinedProps.value,\n        },\n        checkboxGroupContext.state,\n        //@ts-ignore\n        mergedRef\n      )\n    : // eslint-disable-next-line react-hooks/rules-of-hooks\n      useCheckbox(\n        {\n          ...combinedProps,\n          'aria-label': combinedProps.accessibilityLabel,\n        },\n        state,\n        //@ts-ignore\n        mergedRef\n      );\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const inputProps = React.useMemo(() => groupItemInputProps, [\n    groupItemInputProps.checked,\n    groupItemInputProps.disabled,\n    groupItemInputProps,\n  ]);\n\n  const [contextCombinedProps] = React.useState({\n    ...checkboxGroupContext,\n    ...combinedProps,\n  });\n\n  return (\n    <CheckboxComponent\n      wrapperRef={wrapperRef}\n      mergedRef={mergedRef}\n      inputProps={inputProps}\n      combinedProps={contextCombinedProps}\n      isInvalid={isInvalid}\n      isReadOnly={isReadOnly}\n      isHovered={isHoveredProp}\n      isIndeterminate={isIndeterminate}\n      isFocusVisible={isFocusVisibleProp}\n    />\n  );\n};\n\nconst CheckboxComponent = React.memo(\n  ({\n    wrapperRef,\n    inputProps,\n    combinedProps,\n    isInvalid,\n    isReadOnly,\n    isIndeterminate,\n    mergedRef,\n    isHovered: isHoveredProp,\n    isFocusVisible: isFocusVisibleProp,\n  }: any) => {\n    const _ref = React.useRef();\n    const { isHovered } = useHover({}, _ref);\n\n    const { checked: isChecked, disabled: isDisabled } = inputProps;\n\n    const { focusProps, isFocusVisible } = useFocusRing();\n\n    const {\n      icon,\n      _interactionBox,\n      _icon,\n      _stack,\n      _text,\n      ...resolvedProps\n    } = usePropsResolution('Checkbox', combinedProps, {\n      isInvalid,\n      isReadOnly,\n      isFocusVisible: isFocusVisibleProp || isFocusVisible,\n      isDisabled,\n      isIndeterminate,\n      isChecked,\n      isHovered: isHovered || isHoveredProp,\n    });\n\n    const [layoutProps, nonLayoutProps] = extractInObject(resolvedProps, [\n      ...stylingProps.margin,\n      ...stylingProps.layout,\n      ...stylingProps.flexbox,\n      ...stylingProps.position,\n      '_text',\n    ]);\n    const component = React.useMemo(() => {\n      return (\n        <Stack {..._stack} {...layoutProps}>\n          <Center>\n            {/* Interaction Box */}\n            <Box\n              {..._interactionBox}\n              h={isFocusVisible || isFocusVisibleProp ? '130%' : '0%'}\n              w={isFocusVisible || isFocusVisibleProp ? '130%' : '0%'}\n            />\n            {/* Checkbox */}\n            <Center {...nonLayoutProps}>\n              {/* {iconResolver()} */}\n              <SizedIcon icon={icon} _icon={_icon} isChecked={isChecked} />\n            </Center>\n          </Center>\n          {/* Label */}\n          {/* {resolvedProps?.children} */}\n          {wrapStringChild(resolvedProps?.children, _text)}\n        </Stack>\n      );\n    }, [\n      _icon,\n      _stack,\n      _text,\n      _interactionBox,\n      icon,\n      isChecked,\n      isFocusVisible,\n      nonLayoutProps,\n      layoutProps,\n      isFocusVisibleProp,\n      resolvedProps?.children,\n    ]);\n\n    const mergedWrapperRef = React.useMemo(\n      () => mergeRefs([wrapperRef, _ref]),\n      [wrapperRef]\n    );\n\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(resolvedProps)) {\n      return null;\n    }\n\n    return (\n      <Box\n        // @ts-ignore - RN web supports accessibilityRole=\"label\"\n        accessibilityRole=\"label\"\n        ref={mergedWrapperRef}\n      >\n        <VisuallyHidden>\n          {/* <input {...props.inputProps} {...props.focusProps} ref={props.mergedRef} /> */}\n          <input {...inputProps} {...focusProps} ref={mergedRef} />\n        </VisuallyHidden>\n\n        {component}\n      </Box>\n    );\n  }\n);\n\nexport default memo(forwardRef(Checkbox));\n"]},"metadata":{},"sourceType":"module"}