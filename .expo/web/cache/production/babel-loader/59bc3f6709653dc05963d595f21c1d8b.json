{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"style\",\"debug\"];import{getStyleAndFilteredProps,propConfig}from\"../theme/styled-system\";import{useTheme}from\"./useTheme\";import React from'react';import{useNativeBaseConfig}from\"../core/NativeBaseContext\";import{useResponsiveQuery}from\"../utils/useResponsiveQuery\";import stableHash from'stable-hash';var getStyledSystemPropsAndRestProps=function getStyledSystemPropsAndRestProps(props){var styledSystemProps={};var restProps={};for(var key in props){if(key in propConfig){styledSystemProps[key]=props[key];}else{restProps[key]=props[key];}}return{styledSystemProps:styledSystemProps,restProps:restProps};};export var useStyledSystemPropsResolver=function useStyledSystemPropsResolver(_ref){var propStyle=_ref.style,debug=_ref.debug,props=_objectWithoutProperties(_ref,_excluded);var theme=useTheme();var _useNativeBaseConfig=useNativeBaseConfig('makeStyledComponent'),currentBreakpoint=_useNativeBaseConfig.currentBreakpoint,config=_useNativeBaseConfig.config;var strictMode=config.strictMode;var _useResponsiveQuery=useResponsiveQuery(),getResponsiveStyles=_useResponsiveQuery.getResponsiveStyles;var _getStyledSystemProps=getStyledSystemPropsAndRestProps(props),styledSystemProps=_getStyledSystemProps.styledSystemProps,restProps=_getStyledSystemProps.restProps;var _React$useMemo=React.useMemo(function(){var _getStyleAndFilteredP=getStyleAndFilteredProps({styledSystemProps:styledSystemProps,theme:theme,debug:debug,currentBreakpoint:currentBreakpoint,strictMode:strictMode,getResponsiveStyles:getResponsiveStyles}),styleSheet=_getStyleAndFilteredP.styleSheet,dataSet=_getStyleAndFilteredP.dataSet;if(propStyle){return{style:[styleSheet.box,propStyle],dataSet:dataSet};}else{return{style:styleSheet.box,dataSet:dataSet};}},[stableHash(styledSystemProps),theme,debug,currentBreakpoint,strictMode,propStyle,getResponsiveStyles,props]),style=_React$useMemo.style,dataSet=_React$useMemo.dataSet;if(process.env.NODE_ENV==='development'&&debug){console.log('style,resprops',currentBreakpoint);}restProps.dataSet=dataSet;return[style,restProps];};","map":{"version":3,"mappings":"qHAAA,OAASA,wBAAT,CAAmCC,UAAnC,8BACA,OAASC,QAAT,kBACA,MAAOC,MAAP,KAAkB,OAAlB,CACA,OAASC,mBAAT,iCACA,OAASC,kBAAT,mCAEA,MAAOC,WAAP,KAAuB,aAAvB,CAEA,GAAMC,iCAAgC,CAAIC,QAApCD,iCAAoCC,MAAD,CAAgB,CACvD,GAAMC,kBAAsB,CAAG,EAA/B,CACA,GAAMC,UAAc,CAAG,EAAvB,CAEA,IAAK,GAAIC,IAAT,GAAgBH,MAAhB,CAAuB,CACrB,GAAIG,GAAG,GAAIV,WAAX,CAAuB,CACrBQ,iBAAiB,CAACE,GAAD,CAAjBF,CAAyBD,KAAK,CAACG,GAAD,CAA9BF,CADF,KAEO,CACLC,SAAS,CAACC,GAAD,CAATD,CAAiBF,KAAK,CAACG,GAAD,CAAtBD,CACD,CACF,CAED,MAAO,CAAED,iBAAF,CAAEA,iBAAF,CAAqBC,mBAArB,CAAP,CAZF,EAeA,MAAO,IAAME,6BAA4B,CAAG,QAA/BA,6BAA+B,MAIjC,IAHFC,UAGE,MAHTC,KAGS,CAFTC,KAES,MAFTA,KAES,CADNP,KACM,0CACT,GAAMQ,MAAK,CAAGd,QAAQ,EAAtB,CACA,yBAAsCE,mBAAmB,CACvD,qBADuD,CAAzD,CAAQa,iBAAR,sBAAQA,iBAAR,CAA2BC,MAA3B,sBAA2BA,MAA3B,CAGA,GAAMC,WAAU,CAAGD,MAAM,CAACC,UAA1B,CAEA,wBAAgCd,kBAAkB,EAAlD,CAAQe,mBAAR,qBAAQA,mBAAR,CAEA,0BAAyCb,gCAAgC,CACvEC,KADuE,CAAzE,CAAQC,iBAAR,uBAAQA,iBAAR,CAA2BC,SAA3B,uBAA2BA,SAA3B,CAIA,mBAA2BP,KAAK,CAACkB,OAANlB,CAAc,UAAM,CAC7C,0BAAgCH,wBAAwB,CAAC,CACvDS,iBADuD,CACvDA,iBADuD,CAEvDO,KAFuD,CAEvDA,KAFuD,CAGvDD,KAHuD,CAGvDA,KAHuD,CAIvDE,iBAJuD,CAIvDA,iBAJuD,CAKvDE,UALuD,CAKvDA,UALuD,CAMvDC,uCANuD,CAAD,CAAxD,CAAQE,UAAR,uBAAQA,UAAR,CAAoBC,OAApB,uBAAoBA,OAApB,CAQA,GAAIV,SAAJ,CAAe,CACb,MAAO,CAAEC,KAAK,CAAE,CAACQ,UAAU,CAACE,GAAZ,CAAiBX,SAAjB,CAAT,CAAsCU,eAAtC,CAAP,CADF,KAEO,CACL,MAAO,CAAET,KAAK,CAAEQ,UAAU,CAACE,GAApB,CAAyBD,eAAzB,CAAP,CAZ2C,CAApB,EAexB,CAEDjB,UAAU,CAACG,iBAAD,CAFT,CAGDO,KAHC,CAIDD,KAJC,CAKDE,iBALC,CAMDE,UANC,CAODN,SAPC,CAQDO,mBARC,CASDZ,KATC,CAfwBL,CAA3B,CAAQW,KAAR,gBAAQA,KAAR,CAAeS,OAAf,gBAAeA,OAAf,CA0BA,GAAIE,OAAO,CAACC,GAARD,CAAYE,QAAZF,GAAyB,aAAzBA,EAA0CV,KAA9C,CAAqD,CAEnDa,OAAO,CAACC,GAARD,CAAY,gBAAZA,CAA8BX,iBAA9BW,EACD,CAEDlB,SAAS,CAACa,OAAVb,CAAoBa,OAApBb,CAEA,MAAO,CAACI,KAAD,CAAQJ,SAAR,CAAP,CAlDK","names":["getStyleAndFilteredProps","propConfig","useTheme","React","useNativeBaseConfig","useResponsiveQuery","stableHash","getStyledSystemPropsAndRestProps","props","styledSystemProps","restProps","key","useStyledSystemPropsResolver","propStyle","style","debug","theme","currentBreakpoint","config","strictMode","getResponsiveStyles","useMemo","styleSheet","dataSet","box","process","env","NODE_ENV","console","log"],"sources":["useStyledSystemPropsResolver.ts"],"sourcesContent":["import { getStyleAndFilteredProps, propConfig } from '../theme/styled-system';\nimport { useTheme } from './useTheme';\nimport React from 'react';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\nimport { useResponsiveQuery } from '../utils/useResponsiveQuery';\n//@ts-ignore\nimport stableHash from 'stable-hash';\n\nconst getStyledSystemPropsAndRestProps = (props: any) => {\n  const styledSystemProps: any = {};\n  const restProps: any = {};\n\n  for (let key in props) {\n    if (key in propConfig) {\n      styledSystemProps[key] = props[key];\n    } else {\n      restProps[key] = props[key];\n    }\n  }\n\n  return { styledSystemProps, restProps };\n};\n\nexport const useStyledSystemPropsResolver = ({\n  style: propStyle,\n  debug,\n  ...props\n}: any) => {\n  const theme = useTheme();\n  const { currentBreakpoint, config } = useNativeBaseConfig(\n    'makeStyledComponent'\n  );\n  const strictMode = config.strictMode;\n\n  const { getResponsiveStyles } = useResponsiveQuery();\n\n  const { styledSystemProps, restProps } = getStyledSystemPropsAndRestProps(\n    props\n  );\n\n  const { style, dataSet } = React.useMemo(() => {\n    const { styleSheet, dataSet } = getStyleAndFilteredProps({\n      styledSystemProps,\n      theme,\n      debug,\n      currentBreakpoint,\n      strictMode,\n      getResponsiveStyles,\n    });\n    if (propStyle) {\n      return { style: [styleSheet.box, propStyle], dataSet };\n    } else {\n      return { style: styleSheet.box, dataSet };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    stableHash(styledSystemProps),\n    theme,\n    debug,\n    currentBreakpoint,\n    strictMode,\n    propStyle,\n    getResponsiveStyles,\n    props,\n  ]);\n  if (process.env.NODE_ENV === 'development' && debug) {\n    /* eslint-disable-next-line */\n    console.log('style,resprops', currentBreakpoint);\n  }\n\n  restProps.dataSet = dataSet;\n\n  return [style, restProps];\n};\n"]},"metadata":{},"sourceType":"module"}