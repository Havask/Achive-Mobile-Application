{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState}from'react';import{useCallback}from'react';import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";function _LoadEarlier(props){var onLoadEarlier=props.onLoadEarlier;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),fetchingEarlier=_useState2[0],setFetchingEarlier=_useState2[1];var onPress=useCallback(function(){setFetchingEarlier(true);onLoadEarlier().finally(function(){return setFetchingEarlier(false);});},[onLoadEarlier]);return React.createElement(TouchableOpacity,{onPress:onPress,style:props!==null&&props!==void 0&&props.buttonContainerStyle?props.buttonContainerStyle:{padding:10,backgroundColor:!fetchingEarlier?'#eb8334':undefined,maxWidth:100,margin:10,borderRadius:10,alignSelf:'center'}},React.createElement(Text,{style:props!==null&&props!==void 0&&props.labelStyle?props.labelStyle:{color:'#fff'}},fetchingEarlier?React.createElement(ActivityIndicator,null):'Load Earlier'));}export var LoadEarlier=React.memo(_LoadEarlier);","map":{"version":3,"mappings":"iEAAA,MAAOA,MAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,WAAT,KAA4B,OAA5B,C,iNAKA,QAASC,aAAT,CAAsBC,KAAtB,CAAgD,CAC9C,GAAQC,cAAR,CAA0BD,KAA1B,CAAQC,aAAR,CACA,cAA8CJ,QAAQ,CAAC,KAAD,CAAtD,wCAAOK,eAAP,eAAwBC,kBAAxB,eAEA,GAAMC,QAAO,CAAGN,WAAW,CAAC,UAAM,CAChCK,kBAAkB,CAAC,IAAD,CAAlBA,CAEAF,aAAa,GAAII,OAAjBJ,CAAyB,iBAAME,mBAAkB,CAAC,KAAD,CAAxB,EAAzBF,EAHyB,EAIxB,CAACA,aAAD,CAJwB,CAA3B,CAMA,MACEL,qBAACU,gBAAD,EACEF,OAAO,CAAEA,OADX,CAEEG,KAAK,CACHP,KAAK,OAALA,OAAK,SAALA,OAAK,CAAEQ,oBAAPR,CACIA,KAAK,CAACQ,oBADVR,CAEI,CACES,OAAO,CAAE,EADX,CAEEC,eAAe,CAAE,CAACR,eAAD,CAAmB,SAAnB,CAA+BS,SAFlD,CAGEC,QAAQ,CAAE,GAHZ,CAIEC,MAAM,CAAE,EAJV,CAKEC,YAAY,CAAE,EALhB,CAMEC,SAAS,CAAE,QANb,CALR,EAeEnB,oBAACoB,IAAD,EAAMT,KAAK,CAAEP,KAAK,OAALA,OAAK,SAALA,OAAK,CAAEiB,UAAPjB,CAAoBA,KAAK,CAACiB,UAA1BjB,CAAuC,CAAEkB,KAAK,CAAE,MAAT,CAApD,EACGhB,eAAe,CAAGN,oBAACuB,iBAAD,MAAH,CAA2B,cAD7C,CAfF,CADF,CAqBD,CAED,MAAO,IAAMC,YAAW,CAAGxB,KAAK,CAACyB,IAANzB,CAAWG,YAAXH,CAApB","names":["React","useState","useCallback","_LoadEarlier","props","onLoadEarlier","fetchingEarlier","setFetchingEarlier","onPress","finally","TouchableOpacity","style","buttonContainerStyle","padding","backgroundColor","undefined","maxWidth","margin","borderRadius","alignSelf","Text","labelStyle","color","ActivityIndicator","LoadEarlier","memo"],"sources":["LoadEarlier.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useCallback } from 'react';\nimport { ActivityIndicator } from 'react-native';\nimport { Text, TouchableOpacity } from 'react-native';\nimport type { ILoadEarlierProps } from 'src/types/Chatty.types';\n\nfunction _LoadEarlier(props: ILoadEarlierProps) {\n  const { onLoadEarlier } = props;\n  const [fetchingEarlier, setFetchingEarlier] = useState(false);\n\n  const onPress = useCallback(() => {\n    setFetchingEarlier(true);\n\n    onLoadEarlier!().finally(() => setFetchingEarlier(false));\n  }, [onLoadEarlier]);\n\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={\n        props?.buttonContainerStyle\n          ? props.buttonContainerStyle\n          : {\n              padding: 10,\n              backgroundColor: !fetchingEarlier ? '#eb8334' : undefined,\n              maxWidth: 100,\n              margin: 10,\n              borderRadius: 10,\n              alignSelf: 'center',\n            }\n      }\n    >\n      <Text style={props?.labelStyle ? props.labelStyle : { color: '#fff' }}>\n        {fetchingEarlier ? <ActivityIndicator /> : 'Load Earlier'}\n      </Text>\n    </TouchableOpacity>\n  );\n}\n\nexport const LoadEarlier = React.memo(_LoadEarlier);\n"]},"metadata":{},"sourceType":"module"}