{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _createForOfIteratorHelperLoose(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(it)return(it=it.call(o)).next.bind(it);if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}var _Reanimated$default$c,_Reanimated$default;import React,{useEffect,useRef}from'react';import{BaseGesture,CALLBACK_TYPE}from\"./gesture\";import{Reanimated}from\"./reanimatedWrapper\";import{registerHandler,unregisterHandler}from\"../handlersRegistry\";import RNGestureHandlerModule from\"../../RNGestureHandlerModule\";import{baseGestureHandlerWithMonitorProps,filterConfig,findNodeHandle}from\"../gestureHandlerCommon\";import{GestureStateManager}from\"./gestureStateManager\";import{flingGestureHandlerProps}from\"../FlingGestureHandler\";import{forceTouchGestureHandlerProps}from\"../ForceTouchGestureHandler\";import{longPressGestureHandlerProps}from\"../LongPressGestureHandler\";import{panGestureHandlerProps,panGestureHandlerCustomNativeProps}from\"../PanGestureHandler\";import{tapGestureHandlerProps}from\"../TapGestureHandler\";import{State}from\"../../State\";import{EventType}from\"../../EventType\";var ALLOWED_PROPS=[].concat(_toConsumableArray(baseGestureHandlerWithMonitorProps),_toConsumableArray(tapGestureHandlerProps),_toConsumableArray(panGestureHandlerProps),_toConsumableArray(panGestureHandlerCustomNativeProps),_toConsumableArray(longPressGestureHandlerProps),_toConsumableArray(forceTouchGestureHandlerProps),_toConsumableArray(flingGestureHandlerProps));function convertToHandlerTag(ref){if(typeof ref==='number'){return ref;}else if(ref instanceof BaseGesture){return ref.handlerTag;}else{var _ref$current$handlerT,_ref$current;return(_ref$current$handlerT=(_ref$current=ref.current)===null||_ref$current===void 0?void 0:_ref$current.handlerTag)!==null&&_ref$current$handlerT!==void 0?_ref$current$handlerT:-1;}}function extractValidHandlerTags(interactionGroup){var _interactionGroup$map,_interactionGroup$map2;return(_interactionGroup$map=interactionGroup===null||interactionGroup===void 0?void 0:(_interactionGroup$map2=interactionGroup.map(convertToHandlerTag))===null||_interactionGroup$map2===void 0?void 0:_interactionGroup$map2.filter(function(tag){return tag>0;}))!==null&&_interactionGroup$map!==void 0?_interactionGroup$map:[];}function dropHandlers(preparedGesture){for(var _iterator=_createForOfIteratorHelperLoose(preparedGesture.config),_step;!(_step=_iterator()).done;){var handler=_step.value;RNGestureHandlerModule.dropGestureHandler(handler.handlerTag);unregisterHandler(handler.handlerTag);}}function attachHandlers(_ref){var preparedGesture=_ref.preparedGesture,gestureConfig=_ref.gestureConfig,gesture=_ref.gesture,viewTag=_ref.viewTag,useAnimated=_ref.useAnimated;if(!preparedGesture.firstExecution){gestureConfig===null||gestureConfig===void 0?void 0:gestureConfig.initialize();}else{preparedGesture.firstExecution=false;}setImmediate(function(){gestureConfig===null||gestureConfig===void 0?void 0:gestureConfig.prepare();});var _loop=function _loop(handler){RNGestureHandlerModule.createGestureHandler(handler.handlerName,handler.handlerTag,filterConfig(handler.config,ALLOWED_PROPS));registerHandler(handler.handlerTag,handler);setImmediate(function(){var requireToFail=[];if(handler.config.requireToFail){requireToFail=extractValidHandlerTags(handler.config.requireToFail);}var simultaneousWith=[];if(handler.config.simultaneousWith){simultaneousWith=extractValidHandlerTags(handler.config.simultaneousWith);}RNGestureHandlerModule.updateGestureHandler(handler.handlerTag,filterConfig(handler.config,ALLOWED_PROPS,{simultaneousHandlers:simultaneousWith,waitFor:requireToFail}));});};for(var _iterator2=_createForOfIteratorHelperLoose(gesture),_step2;!(_step2=_iterator2()).done;){var handler=_step2.value;_loop(handler);}preparedGesture.config=gesture;for(var _iterator3=_createForOfIteratorHelperLoose(preparedGesture.config),_step3;!(_step3=_iterator3()).done;){var _gesture=_step3.value;RNGestureHandlerModule.attachGestureHandler(_gesture.handlerTag,viewTag,!useAnimated);}if(preparedGesture.animatedHandlers){preparedGesture.animatedHandlers.value=gesture.map(function(g){return g.handlers;});}}function updateHandlers(preparedGesture,gestureConfig,gesture){gestureConfig===null||gestureConfig===void 0?void 0:gestureConfig.prepare();for(var i=0;i<gesture.length;i++){var handler=preparedGesture.config[i];gesture[i].handlerTag=handler.handlerTag;gesture[i].handlers.handlerTag=handler.handlerTag;}setImmediate(function(){for(var _i=0;_i<gesture.length;_i++){var _handler=preparedGesture.config[_i];_handler.config=gesture[_i].config;_handler.handlers=gesture[_i].handlers;_handler.handlers.handlerTag=_handler.handlerTag;var requireToFail=extractValidHandlerTags(_handler.config.requireToFail);var simultaneousWith=extractValidHandlerTags(_handler.config.simultaneousWith);RNGestureHandlerModule.updateGestureHandler(_handler.handlerTag,filterConfig(_handler.config,ALLOWED_PROPS,{simultaneousHandlers:simultaneousWith,waitFor:requireToFail}));registerHandler(_handler.handlerTag,_handler);}if(preparedGesture.animatedHandlers){preparedGesture.animatedHandlers.value=preparedGesture.config.map(function(g){return g.handlers;});}});}function needsToReattach(preparedGesture,gesture){if(gesture.length!==preparedGesture.config.length){return true;}for(var i=0;i<gesture.length;i++){if(gesture[i].handlerName!==preparedGesture.config[i].handlerName){return true;}}return false;}function useAnimatedGesture(preparedGesture){if(!Reanimated){return;}var isStateChangeEvent=function(){var _f=function _f(event){return event.oldState!=null;};_f._closure={};_f.asString=\"function isStateChangeEvent(event){return event.oldState!=null;}\";_f.__workletHash=13883357260557;_f.__location=\"/Users/havardskjaerstein/Desktop/Achive/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/GestureDetector.js (154:2)\";global.__reanimatedWorkletInit(_f);return _f;}();var isTouchEvent=function(){var _f=function _f(event){return event.eventType!=null;};_f._closure={};_f.asString=\"function isTouchEvent(event){return event.eventType!=null;}\";_f.__workletHash=15872269086045;_f.__location=\"/Users/havardskjaerstein/Desktop/Achive/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/GestureDetector.js (160:2)\";global.__reanimatedWorkletInit(_f);return _f;}();var getHandler=function(){var _f=function _f(type,gesture){switch(type){case CALLBACK_TYPE.BEGAN:return gesture.onBegin;case CALLBACK_TYPE.START:return gesture.onStart;case CALLBACK_TYPE.UPDATE:return gesture.onUpdate;case CALLBACK_TYPE.CHANGE:return gesture.onChange;case CALLBACK_TYPE.END:return gesture.onEnd;case CALLBACK_TYPE.FINALIZE:return gesture.onFinalize;case CALLBACK_TYPE.TOUCHES_DOWN:return gesture.onTouchesDown;case CALLBACK_TYPE.TOUCHES_MOVE:return gesture.onTouchesMove;case CALLBACK_TYPE.TOUCHES_UP:return gesture.onTouchesUp;case CALLBACK_TYPE.TOUCHES_CANCELLED:return gesture.onTouchesCancelled;}};_f._closure={CALLBACK_TYPE:{BEGAN:CALLBACK_TYPE.BEGAN,START:CALLBACK_TYPE.START,UPDATE:CALLBACK_TYPE.UPDATE,CHANGE:CALLBACK_TYPE.CHANGE,END:CALLBACK_TYPE.END,FINALIZE:CALLBACK_TYPE.FINALIZE,TOUCHES_DOWN:CALLBACK_TYPE.TOUCHES_DOWN,TOUCHES_MOVE:CALLBACK_TYPE.TOUCHES_MOVE,TOUCHES_UP:CALLBACK_TYPE.TOUCHES_UP,TOUCHES_CANCELLED:CALLBACK_TYPE.TOUCHES_CANCELLED}};_f.asString=\"function getHandler(type,gesture){const{CALLBACK_TYPE}=jsThis._closure;{switch(type){case CALLBACK_TYPE.BEGAN:return gesture.onBegin;case CALLBACK_TYPE.START:return gesture.onStart;case CALLBACK_TYPE.UPDATE:return gesture.onUpdate;case CALLBACK_TYPE.CHANGE:return gesture.onChange;case CALLBACK_TYPE.END:return gesture.onEnd;case CALLBACK_TYPE.FINALIZE:return gesture.onFinalize;case CALLBACK_TYPE.TOUCHES_DOWN:return gesture.onTouchesDown;case CALLBACK_TYPE.TOUCHES_MOVE:return gesture.onTouchesMove;case CALLBACK_TYPE.TOUCHES_UP:return gesture.onTouchesUp;case CALLBACK_TYPE.TOUCHES_CANCELLED:return gesture.onTouchesCancelled;}}}\";_f.__workletHash=13033906201160;_f.__location=\"/Users/havardskjaerstein/Desktop/Achive/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/GestureDetector.js (166:2)\";global.__reanimatedWorkletInit(_f);return _f;}();var touchEventTypeToCallbackType=function(){var _f=function _f(eventType){switch(eventType){case EventType.TOUCHES_DOWN:return CALLBACK_TYPE.TOUCHES_DOWN;case EventType.TOUCHES_MOVE:return CALLBACK_TYPE.TOUCHES_MOVE;case EventType.TOUCHES_UP:return CALLBACK_TYPE.TOUCHES_UP;case EventType.TOUCHES_CANCELLED:return CALLBACK_TYPE.TOUCHES_CANCELLED;}return CALLBACK_TYPE.UNDEFINED;};_f._closure={EventType:{TOUCHES_DOWN:EventType.TOUCHES_DOWN,TOUCHES_MOVE:EventType.TOUCHES_MOVE,TOUCHES_UP:EventType.TOUCHES_UP,TOUCHES_CANCELLED:EventType.TOUCHES_CANCELLED},CALLBACK_TYPE:{TOUCHES_DOWN:CALLBACK_TYPE.TOUCHES_DOWN,TOUCHES_MOVE:CALLBACK_TYPE.TOUCHES_MOVE,TOUCHES_UP:CALLBACK_TYPE.TOUCHES_UP,TOUCHES_CANCELLED:CALLBACK_TYPE.TOUCHES_CANCELLED,UNDEFINED:CALLBACK_TYPE.UNDEFINED}};_f.asString=\"function touchEventTypeToCallbackType(eventType){const{EventType,CALLBACK_TYPE}=jsThis._closure;{switch(eventType){case EventType.TOUCHES_DOWN:return CALLBACK_TYPE.TOUCHES_DOWN;case EventType.TOUCHES_MOVE:return CALLBACK_TYPE.TOUCHES_MOVE;case EventType.TOUCHES_UP:return CALLBACK_TYPE.TOUCHES_UP;case EventType.TOUCHES_CANCELLED:return CALLBACK_TYPE.TOUCHES_CANCELLED;}return CALLBACK_TYPE.UNDEFINED;}}\";_f.__workletHash=4665487911277;_f.__location=\"/Users/havardskjaerstein/Desktop/Achive/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/GestureDetector.js (202:2)\";global.__reanimatedWorkletInit(_f);return _f;}();var runWorklet=function(){var _f=function _f(type,gesture,event){var handler=getHandler(type,gesture);if(gesture.isWorklet[type]){for(var _len=arguments.length,args=new Array(_len>3?_len-3:0),_key=3;_key<_len;_key++){args[_key-3]=arguments[_key];}handler===null||handler===void 0?void 0:handler.apply(void 0,[event].concat(args));}else if(handler){console.warn('Animated gesture callback must be a worklet');}};_f._closure={getHandler:getHandler};_f.asString=\"function runWorklet(type,gesture,event,...args){const{getHandler}=jsThis._closure;{const handler=getHandler(type,gesture);if(gesture.isWorklet[type]){handler===null||handler===void 0?void 0:handler(event,...args);}else if(handler){console.warn('Animated gesture callback must be a worklet');}}}\";_f.__workletHash=3175729087786;_f.__location=\"/Users/havardskjaerstein/Desktop/Achive/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/GestureDetector.js (222:2)\";global.__reanimatedWorkletInit(_f);return _f;}();var sharedHandlersCallbacks=Reanimated.useSharedValue(null);var lastUpdateEvent=Reanimated.useSharedValue([]);var stateControllers=[];var callback=function(){var _f=function _f(event){var currentCallback=sharedHandlersCallbacks.value;if(!currentCallback){return;}for(var i=0;i<currentCallback.length;i++){var gesture=currentCallback[i];if(event.handlerTag===gesture.handlerTag){if(isStateChangeEvent(event)){if(event.oldState===State.UNDETERMINED&&event.state===State.BEGAN){runWorklet(CALLBACK_TYPE.BEGAN,gesture,event);}else if((event.oldState===State.BEGAN||event.oldState===State.UNDETERMINED)&&event.state===State.ACTIVE){runWorklet(CALLBACK_TYPE.START,gesture,event);lastUpdateEvent.value[gesture.handlerTag]=undefined;}else if(event.oldState!==event.state&&event.state===State.END){if(event.oldState===State.ACTIVE){runWorklet(CALLBACK_TYPE.END,gesture,event,true);}runWorklet(CALLBACK_TYPE.FINALIZE,gesture,event,true);}else if((event.state===State.FAILED||event.state===State.CANCELLED)&&event.state!==event.oldState){if(event.oldState===State.ACTIVE){runWorklet(CALLBACK_TYPE.END,gesture,event,false);}runWorklet(CALLBACK_TYPE.FINALIZE,gesture,event,false);}}else if(isTouchEvent(event)){if(!stateControllers[i]){stateControllers[i]=GestureStateManager.create(event.handlerTag);}if(event.eventType!==EventType.UNDETERMINED){runWorklet(touchEventTypeToCallbackType(event.eventType),gesture,event,stateControllers[i]);}}else{runWorklet(CALLBACK_TYPE.UPDATE,gesture,event);if(gesture.onChange&&gesture.changeEventCalculator){var _gesture$changeEventC;runWorklet(CALLBACK_TYPE.CHANGE,gesture,(_gesture$changeEventC=gesture.changeEventCalculator)===null||_gesture$changeEventC===void 0?void 0:_gesture$changeEventC.call(gesture,event,lastUpdateEvent.value[gesture.handlerTag]));lastUpdateEvent.value[gesture.handlerTag]=event;}}}}};_f._closure={sharedHandlersCallbacks:sharedHandlersCallbacks,isStateChangeEvent:isStateChangeEvent,State:{UNDETERMINED:State.UNDETERMINED,BEGAN:State.BEGAN,ACTIVE:State.ACTIVE,END:State.END,FAILED:State.FAILED,CANCELLED:State.CANCELLED},runWorklet:runWorklet,CALLBACK_TYPE:{BEGAN:CALLBACK_TYPE.BEGAN,START:CALLBACK_TYPE.START,END:CALLBACK_TYPE.END,FINALIZE:CALLBACK_TYPE.FINALIZE,UPDATE:CALLBACK_TYPE.UPDATE,CHANGE:CALLBACK_TYPE.CHANGE},lastUpdateEvent:lastUpdateEvent,isTouchEvent:isTouchEvent,stateControllers:stateControllers,GestureStateManager:{create:GestureStateManager.create},EventType:{UNDETERMINED:EventType.UNDETERMINED},touchEventTypeToCallbackType:touchEventTypeToCallbackType};_f.asString=\"function _f(event){const{sharedHandlersCallbacks,isStateChangeEvent,State,runWorklet,CALLBACK_TYPE,lastUpdateEvent,isTouchEvent,stateControllers,GestureStateManager,EventType,touchEventTypeToCallbackType}=jsThis._closure;{const currentCallback=sharedHandlersCallbacks.value;if(!currentCallback){return;}for(let i=0;i<currentCallback.length;i++){const gesture=currentCallback[i];if(event.handlerTag===gesture.handlerTag){if(isStateChangeEvent(event)){if(event.oldState===State.UNDETERMINED&&event.state===State.BEGAN){runWorklet(CALLBACK_TYPE.BEGAN,gesture,event);}else if((event.oldState===State.BEGAN||event.oldState===State.UNDETERMINED)&&event.state===State.ACTIVE){runWorklet(CALLBACK_TYPE.START,gesture,event);lastUpdateEvent.value[gesture.handlerTag]=undefined;}else if(event.oldState!==event.state&&event.state===State.END){if(event.oldState===State.ACTIVE){runWorklet(CALLBACK_TYPE.END,gesture,event,true);}runWorklet(CALLBACK_TYPE.FINALIZE,gesture,event,true);}else if((event.state===State.FAILED||event.state===State.CANCELLED)&&event.state!==event.oldState){if(event.oldState===State.ACTIVE){runWorklet(CALLBACK_TYPE.END,gesture,event,false);}runWorklet(CALLBACK_TYPE.FINALIZE,gesture,event,false);}}else if(isTouchEvent(event)){if(!stateControllers[i]){stateControllers[i]=GestureStateManager.create(event.handlerTag);}if(event.eventType!==EventType.UNDETERMINED){runWorklet(touchEventTypeToCallbackType(event.eventType),gesture,event,stateControllers[i]);}}else{runWorklet(CALLBACK_TYPE.UPDATE,gesture,event);if(gesture.onChange&&gesture.changeEventCalculator){var _gesture$changeEventC;runWorklet(CALLBACK_TYPE.CHANGE,gesture,(_gesture$changeEventC=gesture.changeEventCalculator)===null||_gesture$changeEventC===void 0?void 0:_gesture$changeEventC.call(gesture,event,lastUpdateEvent.value[gesture.handlerTag]));lastUpdateEvent.value[gesture.handlerTag]=event;}}}}}}\";_f.__workletHash=8983705865779;_f.__location=\"/Users/havardskjaerstein/Desktop/Achive/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/GestureDetector.js (245:19)\";global.__reanimatedWorkletInit(_f);return _f;}();var event=Reanimated.useEvent(callback,['onGestureHandlerStateChange','onGestureHandlerEvent'],true);preparedGesture.animatedEventHandler=event;preparedGesture.animatedHandlers=sharedHandlersCallbacks;}export var GestureDetector=function GestureDetector(props){var _gestureConfig$toGest,_gestureConfig$toGest2;var gestureConfig=props.gesture;var gesture=(_gestureConfig$toGest=gestureConfig===null||gestureConfig===void 0?void 0:(_gestureConfig$toGest2=gestureConfig.toGestureArray)===null||_gestureConfig$toGest2===void 0?void 0:_gestureConfig$toGest2.call(gestureConfig))!==null&&_gestureConfig$toGest!==void 0?_gestureConfig$toGest:[];var useAnimated=gesture.find(function(gesture){return gesture.handlers.isWorklet.reduce(function(prev,current){return prev||current;});})!=null;var viewRef=useRef(null);var firstRenderRef=useRef(true);var preparedGesture=React.useRef({config:gesture,animatedEventHandler:null,animatedHandlers:null,firstExecution:true,useAnimated:useAnimated}).current;if(useAnimated!==preparedGesture.useAnimated){throw new Error('You cannot change whether you are using gesture or animatedGesture while the app is running');}if(preparedGesture.firstExecution){var _gestureConfig$initia;gestureConfig===null||gestureConfig===void 0?void 0:(_gestureConfig$initia=gestureConfig.initialize)===null||_gestureConfig$initia===void 0?void 0:_gestureConfig$initia.call(gestureConfig);}if(useAnimated){useAnimatedGesture(preparedGesture);}useEffect(function(){firstRenderRef.current=true;var viewTag=findNodeHandle(viewRef.current);attachHandlers({preparedGesture:preparedGesture,gestureConfig:gestureConfig,gesture:gesture,viewTag:viewTag,useAnimated:useAnimated});return function(){dropHandlers(preparedGesture);};},[]);useEffect(function(){if(!firstRenderRef.current){var viewTag=findNodeHandle(viewRef.current);if(needsToReattach(preparedGesture,gesture)){dropHandlers(preparedGesture);attachHandlers({preparedGesture:preparedGesture,gestureConfig:gestureConfig,gesture:gesture,viewTag:viewTag,useAnimated:useAnimated});}else{updateHandlers(preparedGesture,gestureConfig,gesture);}}else{firstRenderRef.current=false;}},[props]);if(useAnimated){return React.createElement(AnimatedWrap,{ref:viewRef,onGestureHandlerEvent:preparedGesture.animatedEventHandler},props.children);}else{return React.createElement(Wrap,{ref:viewRef},props.children);}};var Wrap=function(_React$Component){_inherits(Wrap,_React$Component);var _super=_createSuper(Wrap);function Wrap(){_classCallCheck(this,Wrap);return _super.apply(this,arguments);}_createClass(Wrap,[{key:\"render\",value:function render(){var child=React.Children.only(this.props.children);return React.cloneElement(child,{collapsable:false},child.props.children);}}]);return Wrap;}(React.Component);var AnimatedWrap=(_Reanimated$default$c=Reanimated===null||Reanimated===void 0?void 0:(_Reanimated$default=Reanimated.default)===null||_Reanimated$default===void 0?void 0:_Reanimated$default.createAnimatedComponent(Wrap))!==null&&_Reanimated$default$c!==void 0?_Reanimated$default$c:Wrap;","map":{"version":3,"mappings":"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","names":["React","useEffect","useRef","BaseGesture","CALLBACK_TYPE","Reanimated","registerHandler","unregisterHandler","RNGestureHandlerModule","baseGestureHandlerWithMonitorProps","filterConfig","findNodeHandle","GestureStateManager","flingGestureHandlerProps","forceTouchGestureHandlerProps","longPressGestureHandlerProps","panGestureHandlerProps","panGestureHandlerCustomNativeProps","tapGestureHandlerProps","State","EventType","ALLOWED_PROPS","convertToHandlerTag","ref","handlerTag","current","_ref$current","extractValidHandlerTags","interactionGroup","map","_interactionGroup$map2","filter","tag","dropHandlers","preparedGesture","config","handler","dropGestureHandler","attachHandlers","gestureConfig","gesture","viewTag","useAnimated","firstExecution","initialize","setImmediate","prepare","createGestureHandler","handlerName","requireToFail","simultaneousWith","updateGestureHandler","simultaneousHandlers","waitFor","attachGestureHandler","animatedHandlers","value","g","handlers","updateHandlers","i","length","needsToReattach","useAnimatedGesture","isStateChangeEvent","event","oldState","isTouchEvent","eventType","getHandler","type","BEGAN","onBegin","START","onStart","UPDATE","onUpdate","CHANGE","onChange","END","onEnd","FINALIZE","onFinalize","TOUCHES_DOWN","onTouchesDown","TOUCHES_MOVE","onTouchesMove","TOUCHES_UP","onTouchesUp","TOUCHES_CANCELLED","onTouchesCancelled","touchEventTypeToCallbackType","UNDEFINED","runWorklet","isWorklet","args","console","warn","sharedHandlersCallbacks","useSharedValue","lastUpdateEvent","stateControllers","callback","currentCallback","UNDETERMINED","state","ACTIVE","undefined","FAILED","CANCELLED","create","changeEventCalculator","_gesture$changeEventC","useEvent","animatedEventHandler","GestureDetector","props","toGestureArray","_gestureConfig$toGest2","find","reduce","prev","viewRef","firstRenderRef","Error","AnimatedWrap","onGestureHandlerEvent","children","Wrap","render","child","Children","only","cloneElement","collapsable","Component","default","_Reanimated$default","createAnimatedComponent"],"sources":["GestureDetector.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport {\n  GestureType,\n  HandlerCallbacks,\n  BaseGesture,\n  GestureRef,\n  CALLBACK_TYPE,\n} from './gesture';\nimport { Reanimated, SharedValue } from './reanimatedWrapper';\nimport { registerHandler, unregisterHandler } from '../handlersRegistry';\nimport RNGestureHandlerModule from '../../RNGestureHandlerModule';\nimport {\n  baseGestureHandlerWithMonitorProps,\n  filterConfig,\n  findNodeHandle,\n  GestureTouchEvent,\n  GestureUpdateEvent,\n  GestureStateChangeEvent,\n} from '../gestureHandlerCommon';\nimport {\n  GestureStateManager,\n  GestureStateManagerType,\n} from './gestureStateManager';\nimport { flingGestureHandlerProps } from '../FlingGestureHandler';\nimport { forceTouchGestureHandlerProps } from '../ForceTouchGestureHandler';\nimport { longPressGestureHandlerProps } from '../LongPressGestureHandler';\nimport {\n  panGestureHandlerProps,\n  panGestureHandlerCustomNativeProps,\n} from '../PanGestureHandler';\nimport { tapGestureHandlerProps } from '../TapGestureHandler';\nimport { State } from '../../State';\nimport { EventType } from '../../EventType';\nimport { ComposedGesture } from './gestureComposition';\n\nconst ALLOWED_PROPS = [\n  ...baseGestureHandlerWithMonitorProps,\n  ...tapGestureHandlerProps,\n  ...panGestureHandlerProps,\n  ...panGestureHandlerCustomNativeProps,\n  ...longPressGestureHandlerProps,\n  ...forceTouchGestureHandlerProps,\n  ...flingGestureHandlerProps,\n];\n\nexport type GestureConfigReference = {\n  config: GestureType[];\n  animatedEventHandler: unknown;\n  animatedHandlers: SharedValue<\n    HandlerCallbacks<Record<string, unknown>>[] | null\n  > | null;\n  firstExecution: boolean;\n  useAnimated: boolean;\n};\n\nfunction convertToHandlerTag(ref: GestureRef): number {\n  if (typeof ref === 'number') {\n    return ref;\n  } else if (ref instanceof BaseGesture) {\n    return ref.handlerTag;\n  } else {\n    // @ts-ignore in this case it should be a ref either to gesture object or\n    // a gesture handler component, in both cases handlerTag property exists\n    return ref.current?.handlerTag ?? -1;\n  }\n}\n\nfunction extractValidHandlerTags(interactionGroup: GestureRef[] | undefined) {\n  return (\n    interactionGroup?.map(convertToHandlerTag)?.filter((tag) => tag > 0) ?? []\n  );\n}\n\nfunction dropHandlers(preparedGesture: GestureConfigReference) {\n  for (const handler of preparedGesture.config) {\n    RNGestureHandlerModule.dropGestureHandler(handler.handlerTag);\n\n    unregisterHandler(handler.handlerTag);\n  }\n}\n\ninterface AttachHandlersConfig {\n  preparedGesture: GestureConfigReference;\n  gestureConfig: ComposedGesture | GestureType | undefined;\n  gesture: GestureType[];\n  viewTag: number;\n  useAnimated: boolean;\n}\n\nfunction attachHandlers({\n  preparedGesture,\n  gestureConfig,\n  gesture,\n  viewTag,\n  useAnimated,\n}: AttachHandlersConfig) {\n  if (!preparedGesture.firstExecution) {\n    gestureConfig?.initialize();\n  } else {\n    preparedGesture.firstExecution = false;\n  }\n\n  // use setImmediate to extract handlerTags, because all refs should be initialized\n  // when it's ran\n  setImmediate(() => {\n    gestureConfig?.prepare();\n  });\n\n  for (const handler of gesture) {\n    RNGestureHandlerModule.createGestureHandler(\n      handler.handlerName,\n      handler.handlerTag,\n      filterConfig(handler.config, ALLOWED_PROPS)\n    );\n\n    registerHandler(handler.handlerTag, handler);\n\n    // use setImmediate to extract handlerTags, because all refs should be initialized\n    // when it's ran\n    setImmediate(() => {\n      let requireToFail: number[] = [];\n      if (handler.config.requireToFail) {\n        requireToFail = extractValidHandlerTags(handler.config.requireToFail);\n      }\n\n      let simultaneousWith: number[] = [];\n      if (handler.config.simultaneousWith) {\n        simultaneousWith = extractValidHandlerTags(\n          handler.config.simultaneousWith\n        );\n      }\n\n      RNGestureHandlerModule.updateGestureHandler(\n        handler.handlerTag,\n        filterConfig(handler.config, ALLOWED_PROPS, {\n          simultaneousHandlers: simultaneousWith,\n          waitFor: requireToFail,\n        })\n      );\n    });\n  }\n  preparedGesture.config = gesture;\n\n  for (const gesture of preparedGesture.config) {\n    RNGestureHandlerModule.attachGestureHandler(\n      gesture.handlerTag,\n      viewTag,\n      !useAnimated // send direct events when using animatedGesture, device events otherwise\n    );\n  }\n\n  if (preparedGesture.animatedHandlers) {\n    preparedGesture.animatedHandlers.value = (gesture.map(\n      (g) => g.handlers\n    ) as unknown) as HandlerCallbacks<Record<string, unknown>>[];\n  }\n}\n\nfunction updateHandlers(\n  preparedGesture: GestureConfigReference,\n  gestureConfig: ComposedGesture | GestureType | undefined,\n  gesture: GestureType[]\n) {\n  gestureConfig?.prepare();\n\n  for (let i = 0; i < gesture.length; i++) {\n    const handler = preparedGesture.config[i];\n\n    gesture[i].handlerTag = handler.handlerTag;\n    gesture[i].handlers.handlerTag = handler.handlerTag;\n  }\n\n  // use setImmediate to extract handlerTags, because when it's ran, all refs should be updated\n  // and handlerTags in BaseGesture references should be updated in the loop above (we need to wait\n  // in case of external relations)\n  setImmediate(() => {\n    for (let i = 0; i < gesture.length; i++) {\n      const handler = preparedGesture.config[i];\n\n      handler.config = gesture[i].config;\n      handler.handlers = gesture[i].handlers;\n      handler.handlers.handlerTag = handler.handlerTag;\n\n      const requireToFail = extractValidHandlerTags(\n        handler.config.requireToFail\n      );\n\n      const simultaneousWith = extractValidHandlerTags(\n        handler.config.simultaneousWith\n      );\n\n      RNGestureHandlerModule.updateGestureHandler(\n        handler.handlerTag,\n        filterConfig(handler.config, ALLOWED_PROPS, {\n          simultaneousHandlers: simultaneousWith,\n          waitFor: requireToFail,\n        })\n      );\n\n      registerHandler(handler.handlerTag, handler);\n    }\n\n    if (preparedGesture.animatedHandlers) {\n      preparedGesture.animatedHandlers.value = (preparedGesture.config.map(\n        (g) => g.handlers\n      ) as unknown) as HandlerCallbacks<Record<string, unknown>>[];\n    }\n  });\n}\n\nfunction needsToReattach(\n  preparedGesture: GestureConfigReference,\n  gesture: GestureType[]\n) {\n  if (gesture.length !== preparedGesture.config.length) {\n    return true;\n  }\n  for (let i = 0; i < gesture.length; i++) {\n    if (gesture[i].handlerName !== preparedGesture.config[i].handlerName) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction useAnimatedGesture(preparedGesture: GestureConfigReference) {\n  if (!Reanimated) {\n    return;\n  }\n\n  function isStateChangeEvent(\n    event: GestureUpdateEvent | GestureStateChangeEvent | GestureTouchEvent\n  ): event is GestureStateChangeEvent {\n    'worklet';\n    // @ts-ignore Yes, the oldState prop is missing on GestureTouchEvent, that's the point\n    return event.oldState != null;\n  }\n\n  function isTouchEvent(\n    event: GestureUpdateEvent | GestureStateChangeEvent | GestureTouchEvent\n  ): event is GestureTouchEvent {\n    'worklet';\n    return event.eventType != null;\n  }\n\n  function getHandler(\n    type: CALLBACK_TYPE,\n    gesture: HandlerCallbacks<Record<string, unknown>>\n  ) {\n    'worklet';\n    switch (type) {\n      case CALLBACK_TYPE.BEGAN:\n        return gesture.onBegin;\n      case CALLBACK_TYPE.START:\n        return gesture.onStart;\n      case CALLBACK_TYPE.UPDATE:\n        return gesture.onUpdate;\n      case CALLBACK_TYPE.CHANGE:\n        return gesture.onChange;\n      case CALLBACK_TYPE.END:\n        return gesture.onEnd;\n      case CALLBACK_TYPE.FINALIZE:\n        return gesture.onFinalize;\n      case CALLBACK_TYPE.TOUCHES_DOWN:\n        return gesture.onTouchesDown;\n      case CALLBACK_TYPE.TOUCHES_MOVE:\n        return gesture.onTouchesMove;\n      case CALLBACK_TYPE.TOUCHES_UP:\n        return gesture.onTouchesUp;\n      case CALLBACK_TYPE.TOUCHES_CANCELLED:\n        return gesture.onTouchesCancelled;\n    }\n  }\n\n  function touchEventTypeToCallbackType(eventType: EventType): CALLBACK_TYPE {\n    'worklet';\n    switch (eventType) {\n      case EventType.TOUCHES_DOWN:\n        return CALLBACK_TYPE.TOUCHES_DOWN;\n      case EventType.TOUCHES_MOVE:\n        return CALLBACK_TYPE.TOUCHES_MOVE;\n      case EventType.TOUCHES_UP:\n        return CALLBACK_TYPE.TOUCHES_UP;\n      case EventType.TOUCHES_CANCELLED:\n        return CALLBACK_TYPE.TOUCHES_CANCELLED;\n    }\n    return CALLBACK_TYPE.UNDEFINED;\n  }\n\n  function runWorklet(\n    type: CALLBACK_TYPE,\n    gesture: HandlerCallbacks<Record<string, unknown>>,\n    event: GestureStateChangeEvent | GestureUpdateEvent | GestureTouchEvent,\n    ...args: any[]\n  ) {\n    'worklet';\n    const handler = getHandler(type, gesture);\n    if (gesture.isWorklet[type]) {\n      // @ts-ignore Logic below makes sure the correct event is send to the\n      // correct handler.\n      handler?.(event, ...args);\n    } else if (handler) {\n      console.warn('Animated gesture callback must be a worklet');\n    }\n  }\n\n  // Hooks are called conditionally, but the condition is whether the\n  // react-native-reanimated is installed, which shouldn't change while running\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const sharedHandlersCallbacks = Reanimated.useSharedValue<\n    HandlerCallbacks<Record<string, unknown>>[] | null\n  >(null);\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const lastUpdateEvent = Reanimated.useSharedValue<\n    (GestureUpdateEvent | undefined)[]\n  >([]);\n\n  // not every gesture needs a state controller, init them lazily\n  const stateControllers: GestureStateManagerType[] = [];\n\n  const callback = (\n    event: GestureStateChangeEvent | GestureUpdateEvent | GestureTouchEvent\n  ) => {\n    'worklet';\n\n    const currentCallback = sharedHandlersCallbacks.value;\n    if (!currentCallback) {\n      return;\n    }\n\n    for (let i = 0; i < currentCallback.length; i++) {\n      const gesture = currentCallback[i];\n\n      if (event.handlerTag === gesture.handlerTag) {\n        if (isStateChangeEvent(event)) {\n          if (\n            event.oldState === State.UNDETERMINED &&\n            event.state === State.BEGAN\n          ) {\n            runWorklet(CALLBACK_TYPE.BEGAN, gesture, event);\n          } else if (\n            (event.oldState === State.BEGAN ||\n              event.oldState === State.UNDETERMINED) &&\n            event.state === State.ACTIVE\n          ) {\n            runWorklet(CALLBACK_TYPE.START, gesture, event);\n            lastUpdateEvent.value[gesture.handlerTag] = undefined;\n          } else if (\n            event.oldState !== event.state &&\n            event.state === State.END\n          ) {\n            if (event.oldState === State.ACTIVE) {\n              runWorklet(CALLBACK_TYPE.END, gesture, event, true);\n            }\n            runWorklet(CALLBACK_TYPE.FINALIZE, gesture, event, true);\n          } else if (\n            (event.state === State.FAILED || event.state === State.CANCELLED) &&\n            event.state !== event.oldState\n          ) {\n            if (event.oldState === State.ACTIVE) {\n              runWorklet(CALLBACK_TYPE.END, gesture, event, false);\n            }\n            runWorklet(CALLBACK_TYPE.FINALIZE, gesture, event, false);\n          }\n        } else if (isTouchEvent(event)) {\n          if (!stateControllers[i]) {\n            stateControllers[i] = GestureStateManager.create(event.handlerTag);\n          }\n\n          if (event.eventType !== EventType.UNDETERMINED) {\n            runWorklet(\n              touchEventTypeToCallbackType(event.eventType),\n              gesture,\n              event,\n              stateControllers[i]\n            );\n          }\n        } else {\n          runWorklet(CALLBACK_TYPE.UPDATE, gesture, event);\n\n          if (gesture.onChange && gesture.changeEventCalculator) {\n            runWorklet(\n              CALLBACK_TYPE.CHANGE,\n              gesture,\n              gesture.changeEventCalculator?.(\n                event,\n                lastUpdateEvent.value[gesture.handlerTag]\n              )\n            );\n\n            lastUpdateEvent.value[gesture.handlerTag] = event;\n          }\n        }\n      }\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const event = Reanimated.useEvent(\n    callback,\n    ['onGestureHandlerStateChange', 'onGestureHandlerEvent'],\n    true\n  );\n\n  preparedGesture.animatedEventHandler = event;\n  preparedGesture.animatedHandlers = sharedHandlersCallbacks;\n}\n\ninterface GestureDetectorProps {\n  gesture?: ComposedGesture | GestureType;\n}\nexport const GestureDetector: React.FunctionComponent<GestureDetectorProps> = (\n  props\n) => {\n  const gestureConfig = props.gesture;\n  const gesture = gestureConfig?.toGestureArray?.() ?? [];\n  const useAnimated =\n    gesture.find((gesture) =>\n      gesture.handlers.isWorklet.reduce((prev, current) => prev || current)\n    ) != null;\n  const viewRef = useRef(null);\n  const firstRenderRef = useRef(true);\n\n  const preparedGesture = React.useRef<GestureConfigReference>({\n    config: gesture,\n    animatedEventHandler: null,\n    animatedHandlers: null,\n    firstExecution: true,\n    useAnimated: useAnimated,\n  }).current;\n\n  if (useAnimated !== preparedGesture.useAnimated) {\n    throw new Error(\n      'You cannot change whether you are using gesture or animatedGesture while the app is running'\n    );\n  }\n\n  if (preparedGesture.firstExecution) {\n    gestureConfig?.initialize?.();\n  }\n\n  if (useAnimated) {\n    // Whether animatedGesture or gesture is used shouldn't change\n    // during while an app is running\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useAnimatedGesture(preparedGesture);\n  }\n\n  useEffect(() => {\n    firstRenderRef.current = true;\n    const viewTag = findNodeHandle(viewRef.current) as number;\n    attachHandlers({\n      preparedGesture,\n      gestureConfig,\n      gesture,\n      viewTag,\n      useAnimated,\n    });\n\n    return () => {\n      dropHandlers(preparedGesture);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!firstRenderRef.current) {\n      const viewTag = findNodeHandle(viewRef.current) as number;\n\n      if (needsToReattach(preparedGesture, gesture)) {\n        dropHandlers(preparedGesture);\n        attachHandlers({\n          preparedGesture,\n          gestureConfig,\n          gesture,\n          viewTag,\n          useAnimated,\n        });\n      } else {\n        updateHandlers(preparedGesture, gestureConfig, gesture);\n      }\n    } else {\n      firstRenderRef.current = false;\n    }\n  }, [props]);\n\n  if (useAnimated) {\n    return (\n      <AnimatedWrap\n        ref={viewRef}\n        onGestureHandlerEvent={preparedGesture.animatedEventHandler}>\n        {props.children}\n      </AnimatedWrap>\n    );\n  } else {\n    return <Wrap ref={viewRef}>{props.children}</Wrap>;\n  }\n};\n\nclass Wrap extends React.Component<{ onGestureHandlerEvent?: unknown }> {\n  render() {\n    // I don't think that fighting with types over such a simple function is worth it\n    // The only thing it does is add 'collapsable: false' to the child component\n    // to make sure it is in the native view hierarchy so the detector can find\n    // correct viewTag to attach to.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const child: any = React.Children.only(this.props.children);\n\n    return React.cloneElement(\n      child,\n      { collapsable: false },\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      child.props.children\n    );\n  }\n}\n\nconst AnimatedWrap = Reanimated?.default?.createAnimatedComponent(Wrap) ?? Wrap;\n"]},"metadata":{},"sourceType":"module"}