{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"isHovered\",\"isFocused\",\"onKeyPress\"],_excluded2=[\"ariaLabel\",\"accessibilityLabel\",\"type\",\"isFullWidth\",\"isDisabled\",\"isReadOnly\",\"fontFamily\",\"fontWeight\",\"fontStyle\",\"placeholderTextColor\",\"selectionColor\",\"underlineColorAndroid\",\"InputLeftElement\",\"InputRightElement\",\"leftElement\",\"rightElement\",\"onFocus\",\"onBlur\",\"wrapperRef\",\"_stack\",\"_input\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{memo,forwardRef}from'react';import TextInput from\"react-native-web/dist/exports/TextInput\";import{useToken}from\"../../../hooks\";import{useFormControl}from\"../../composites/FormControl\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";import{useHover}from'@react-native-aria/interactions';import{extractInObject,stylingProps}from\"../../../theme/tools/utils\";import{usePropsResolution}from\"../../../hooks/useThemeProps\";import{mergeRefs}from\"../../../utils\";import{Stack}from\"../Stack\";import{makeStyledComponent}from\"../../../utils/styled\";import{useResolvedFontFamily}from\"../../../hooks/useResolvedFontFamily\";var StyledInput=makeStyledComponent(TextInput);var Input=function Input(_ref2,ref){var isHoveredProp=_ref2.isHovered,isFocusedProp=_ref2.isFocused,_onKeyPress=_ref2.onKeyPress,props=_objectWithoutProperties(_ref2,_excluded);var inputProps=useFormControl({isDisabled:props.isDisabled,isInvalid:props.isInvalid,isReadOnly:props.isReadOnly,isRequired:props.isRequired,nativeID:props.nativeID});var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isFocused=_React$useState2[0],setIsFocused=_React$useState2[1];var handleFocus=function handleFocus(focusState,callback){setIsFocused(focusState);callback();};props.focusOutlineColor=useToken('colors',props.focusOutlineColor);props.inValidOutlineColor=useToken('colors',props.inValidOutlineColor);var _ref=React.useRef(null);var _useHover=useHover({},_ref),isHovered=_useHover.isHovered;var inputThemeProps={isDisabled:inputProps.disabled,isInvalid:inputProps.accessibilityInvalid,isReadOnly:inputProps.accessibilityReadOnly,isRequired:inputProps.required};var _usePropsResolution=usePropsResolution('Input',_objectSpread(_objectSpread({},inputThemeProps),props),{isDisabled:inputThemeProps.isDisabled,isHovered:isHoveredProp||isHovered,isFocused:isFocusedProp||isFocused,isInvalid:inputThemeProps.isInvalid,isReadOnly:inputThemeProps.isReadOnly}),ariaLabel=_usePropsResolution.ariaLabel,accessibilityLabel=_usePropsResolution.accessibilityLabel,type=_usePropsResolution.type,isFullWidth=_usePropsResolution.isFullWidth,isDisabled=_usePropsResolution.isDisabled,isReadOnly=_usePropsResolution.isReadOnly,fontFamily=_usePropsResolution.fontFamily,fontWeight=_usePropsResolution.fontWeight,fontStyle=_usePropsResolution.fontStyle,placeholderTextColor=_usePropsResolution.placeholderTextColor,selectionColor=_usePropsResolution.selectionColor,underlineColorAndroid=_usePropsResolution.underlineColorAndroid,InputLeftElement=_usePropsResolution.InputLeftElement,InputRightElement=_usePropsResolution.InputRightElement,leftElement=_usePropsResolution.leftElement,rightElement=_usePropsResolution.rightElement,_onFocus=_usePropsResolution.onFocus,_onBlur=_usePropsResolution.onBlur,wrapperRef=_usePropsResolution.wrapperRef,_stack=_usePropsResolution._stack,_input=_usePropsResolution._input,resolvedProps=_objectWithoutProperties(_usePropsResolution,_excluded2);var _extractInObject=extractInObject(resolvedProps,[].concat(_toConsumableArray(stylingProps.margin),_toConsumableArray(stylingProps.border),_toConsumableArray(stylingProps.layout),_toConsumableArray(stylingProps.flexbox),_toConsumableArray(stylingProps.position),_toConsumableArray(stylingProps.background),['shadow','opacity'])),_extractInObject2=_slicedToArray(_extractInObject,2),layoutProps=_extractInObject2[0],nonLayoutProps=_extractInObject2[1];var resolvedFontFamily=useResolvedFontFamily({fontFamily:fontFamily,fontWeight:fontWeight!==null&&fontWeight!==void 0?fontWeight:400,fontStyle:fontStyle!==null&&fontStyle!==void 0?fontStyle:'normal'});var resolvedPlaceholderTextColor=useToken('colors',placeholderTextColor);var resolvedSelectionColor=useToken('colors',selectionColor);var resolvedUnderlineColorAndroid=useToken('colors',underlineColorAndroid);if(useHasResponsiveProps(props)){return null;}return React.createElement(Stack,_extends({},_stack,layoutProps,{ref:mergeRefs([_ref,wrapperRef]),isFocused:isFocused}),InputLeftElement||leftElement?InputLeftElement||leftElement:null,React.createElement(StyledInput,_extends({},inputProps,{secureTextEntry:type==='password',accessible:true,accessibilityLabel:ariaLabel||accessibilityLabel,editable:isDisabled||isReadOnly?false:true,w:isFullWidth?'100%':undefined},nonLayoutProps,resolvedFontFamily,{placeholderTextColor:resolvedPlaceholderTextColor,selectionColor:resolvedSelectionColor,underlineColorAndroid:resolvedUnderlineColorAndroid,onKeyPress:function onKeyPress(e){e.persist();_onKeyPress&&_onKeyPress(e);},onFocus:function onFocus(e){handleFocus(true,_onFocus?function(){return _onFocus(e);}:function(){});},onBlur:function onBlur(e){handleFocus(false,_onBlur?function(){return _onBlur(e);}:function(){});}},_input,{ref:mergeRefs([ref,_ref,wrapperRef])})),InputRightElement||rightElement?InputRightElement||rightElement:null);};export default memo(forwardRef(Input));","map":{"version":3,"mappings":"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","names":["React","memo","forwardRef","useToken","useFormControl","useHasResponsiveProps","useHover","extractInObject","stylingProps","usePropsResolution","mergeRefs","Stack","makeStyledComponent","useResolvedFontFamily","StyledInput","TextInput","Input","ref","isHoveredProp","isHovered","isFocusedProp","isFocused","onKeyPress","props","inputProps","isDisabled","isInvalid","isReadOnly","isRequired","nativeID","useState","setIsFocused","handleFocus","focusState","callback","focusOutlineColor","inValidOutlineColor","_ref","useRef","inputThemeProps","disabled","accessibilityInvalid","accessibilityReadOnly","required","ariaLabel","accessibilityLabel","type","isFullWidth","fontFamily","fontWeight","fontStyle","placeholderTextColor","selectionColor","underlineColorAndroid","InputLeftElement","InputRightElement","leftElement","rightElement","onFocus","onBlur","wrapperRef","_stack","_input","resolvedProps","margin","border","layout","flexbox","position","background","layoutProps","nonLayoutProps","resolvedFontFamily","resolvedPlaceholderTextColor","resolvedSelectionColor","resolvedUnderlineColorAndroid","secureTextEntry","accessible","editable","w","undefined","e","persist"],"sources":["Input.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport type { IInputProps } from './types';\nimport { TextInput } from 'react-native';\nimport { useToken } from '../../../hooks';\nimport { useFormControl } from '../../composites/FormControl';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useHover } from '@react-native-aria/interactions';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { mergeRefs } from '../../../utils';\nimport { Stack } from '../Stack';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { useResolvedFontFamily } from '../../../hooks/useResolvedFontFamily';\n\nconst StyledInput = makeStyledComponent(TextInput);\n\nconst Input = (\n  {\n    isHovered: isHoveredProp,\n    isFocused: isFocusedProp,\n    onKeyPress,\n    ...props\n  }: IInputProps,\n  ref: any\n) => {\n  const inputProps = useFormControl({\n    isDisabled: props.isDisabled,\n    isInvalid: props.isInvalid,\n    isReadOnly: props.isReadOnly,\n    isRequired: props.isRequired,\n    nativeID: props.nativeID,\n  });\n  const [isFocused, setIsFocused] = React.useState(false);\n  const handleFocus = (focusState: boolean, callback: any) => {\n    setIsFocused(focusState);\n    callback();\n  };\n\n  /**Converting into Hash Color Code */\n  //@ts-ignore\n  props.focusOutlineColor = useToken('colors', props.focusOutlineColor);\n  //@ts-ignore\n  props.inValidOutlineColor = useToken('colors', props.inValidOutlineColor);\n\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n\n  const inputThemeProps = {\n    isDisabled: inputProps.disabled,\n    isInvalid: inputProps.accessibilityInvalid,\n    isReadOnly: inputProps.accessibilityReadOnly,\n    isRequired: inputProps.required,\n  };\n\n  const {\n    ariaLabel,\n    accessibilityLabel,\n    type,\n    isFullWidth,\n    isDisabled,\n    isReadOnly,\n    fontFamily,\n    fontWeight,\n    fontStyle,\n    placeholderTextColor,\n    selectionColor,\n    underlineColorAndroid,\n    InputLeftElement,\n    InputRightElement,\n    leftElement,\n    rightElement,\n    onFocus,\n    onBlur,\n    wrapperRef,\n    _stack,\n    _input,\n\n    ...resolvedProps\n  } = usePropsResolution(\n    'Input',\n    {\n      ...inputThemeProps,\n      ...props,\n    },\n    {\n      isDisabled: inputThemeProps.isDisabled,\n      isHovered: isHoveredProp || isHovered,\n      isFocused: isFocusedProp || isFocused,\n      isInvalid: inputThemeProps.isInvalid,\n      isReadOnly: inputThemeProps.isReadOnly,\n    }\n  );\n\n  const [layoutProps, nonLayoutProps] = extractInObject(resolvedProps, [\n    ...stylingProps.margin,\n    ...stylingProps.border,\n    ...stylingProps.layout,\n    ...stylingProps.flexbox,\n    ...stylingProps.position,\n    ...stylingProps.background,\n    'shadow',\n    'opacity',\n  ]);\n\n  const resolvedFontFamily = useResolvedFontFamily({\n    fontFamily,\n    fontWeight: fontWeight ?? 400,\n    fontStyle: fontStyle ?? 'normal',\n  });\n  const resolvedPlaceholderTextColor = useToken('colors', placeholderTextColor);\n  const resolvedSelectionColor = useToken('colors', selectionColor);\n  const resolvedUnderlineColorAndroid = useToken(\n    'colors',\n    underlineColorAndroid\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Stack\n      {..._stack}\n      {...layoutProps}\n      ref={mergeRefs([_ref, wrapperRef])}\n      isFocused={isFocused}\n    >\n      {InputLeftElement || leftElement ? InputLeftElement || leftElement : null}\n      <StyledInput\n        {...inputProps}\n        secureTextEntry={type === 'password'}\n        accessible\n        accessibilityLabel={ariaLabel || accessibilityLabel}\n        editable={isDisabled || isReadOnly ? false : true}\n        w={isFullWidth ? '100%' : undefined}\n        {...nonLayoutProps}\n        {...resolvedFontFamily}\n        placeholderTextColor={resolvedPlaceholderTextColor}\n        selectionColor={resolvedSelectionColor}\n        underlineColorAndroid={resolvedUnderlineColorAndroid}\n        onKeyPress={(e: any) => {\n          e.persist();\n          onKeyPress && onKeyPress(e);\n        }}\n        onFocus={(e: any) => {\n          handleFocus(true, onFocus ? () => onFocus(e) : () => {});\n        }}\n        onBlur={(e: any) => {\n          handleFocus(false, onBlur ? () => onBlur(e) : () => {});\n        }}\n        {..._input}\n        ref={mergeRefs([ref, _ref, wrapperRef])}\n      />\n      {InputRightElement || rightElement\n        ? InputRightElement || rightElement\n        : null}\n    </Stack>\n  );\n};\n\nexport default memo(forwardRef(Input));\n"]},"metadata":{},"sourceType":"module"}