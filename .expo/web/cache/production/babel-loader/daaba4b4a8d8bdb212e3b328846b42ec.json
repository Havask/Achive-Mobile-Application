{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";var _excluded=[\"type\"],_excluded2=[\"style\"],_excluded3=[\"parse\",\"childrenProps\"];function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import React from'react';import Text from\"react-native-web/dist/exports/Text\";import PropTypes from'prop-types';import TextExtraction from\"./lib/TextExtraction\";import{jsx as _jsx}from\"react/jsx-runtime\";export var PATTERNS={url:/(https?:\\/\\/|www\\.)[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.(xn--)?[a-z0-9-]{2,20}\\b([-a-zA-Z0-9@:%_\\+\\[\\],.~#?&\\/=]*[-a-zA-Z0-9@:%_\\+\\]~#?&\\/=])*/i,phone:/[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,7}/,email:/\\S+@\\S+\\.\\S+/};var defaultParseShape=PropTypes.shape(_objectSpread(_objectSpread({},Text.propTypes),{},{type:PropTypes.oneOf(Object.keys(PATTERNS)).isRequired,nonExhaustiveMaxMatchCount:PropTypes.number}));var customParseShape=PropTypes.shape(_objectSpread(_objectSpread({},Text.propTypes),{},{pattern:PropTypes.oneOfType([PropTypes.string,PropTypes.instanceOf(RegExp)]).isRequired,nonExhaustiveMaxMatchCount:PropTypes.number}));var ParsedText=function(_React$Component){_inherits(ParsedText,_React$Component);var _super=_createSuper(ParsedText);function ParsedText(){_classCallCheck(this,ParsedText);return _super.apply(this,arguments);}_createClass(ParsedText,[{key:\"setNativeProps\",value:function setNativeProps(nativeProps){this._root.setNativeProps(nativeProps);}},{key:\"getPatterns\",value:function getPatterns(){return this.props.parse.map(function(option){var type=option.type,patternOption=_objectWithoutProperties(option,_excluded);if(type){if(!PATTERNS[type]){throw new Error(option.type+\" is not a supported type\");}patternOption.pattern=PATTERNS[type];}return patternOption;});}},{key:\"getParsedText\",value:function getParsedText(){var _this=this;if(!this.props.parse){return this.props.children;}if(typeof this.props.children!=='string'){return this.props.children;}var textExtraction=new TextExtraction(this.props.children,this.getPatterns());return textExtraction.parse().map(function(props,index){var parentStyle=_this.props.style;var style=props.style,remainder=_objectWithoutProperties(props,_excluded2);return _jsx(Text,_objectSpread(_objectSpread({style:[parentStyle,style]},_this.props.childrenProps),remainder),\"parsedText-\"+index);});}},{key:\"render\",value:function render(){var _this2=this;var _this$props=_objectSpread({},this.props),parse=_this$props.parse,childrenProps=_this$props.childrenProps,remainder=_objectWithoutProperties(_this$props,_excluded3);return _jsx(Text,_objectSpread(_objectSpread({ref:function ref(_ref){return _this2._root=_ref;}},remainder),{},{children:this.getParsedText()}));}}]);return ParsedText;}(React.Component);ParsedText.displayName='ParsedText';ParsedText.propTypes=_objectSpread(_objectSpread({},Text.propTypes),{},{parse:PropTypes.arrayOf(PropTypes.oneOfType([defaultParseShape,customParseShape])),childrenProps:PropTypes.shape(Text.propTypes)});ParsedText.defaultProps={parse:null,childrenProps:{}};export default ParsedText;","map":{"version":3,"names":["React","PropTypes","TextExtraction","PATTERNS","url","phone","email","defaultParseShape","shape","Text","propTypes","type","oneOf","Object","keys","isRequired","nonExhaustiveMaxMatchCount","number","customParseShape","pattern","oneOfType","string","instanceOf","RegExp","ParsedText","nativeProps","_root","setNativeProps","props","parse","map","option","patternOption","Error","children","textExtraction","getPatterns","index","parentStyle","style","remainder","childrenProps","ref","getParsedText","Component","displayName","arrayOf","defaultProps"],"sources":["/Users/havardskjaerstein/Desktop/Achive/node_modules/react-native-parsed-text/src/ParsedText.js"],"sourcesContent":["import React from 'react';\nimport { Text } from 'react-native';\nimport PropTypes from 'prop-types';\n\nimport TextExtraction from './lib/TextExtraction';\n\n/**\n * This is a list of the known patterns that are provided by this library\n * @typedef {('url'|'phone'|'email')} KnownParsePattern\n */\n/**\n * @type {Object.<string, RegExp>}\n * // The keys really should be KnownParsePattern -- but this is unsupported in jsdoc, sadly\n */\nexport const PATTERNS = {\n  /**\n   * Segments/Features:\n   *  - http/https support https?\n   *  - auto-detecting loose domains if preceded by `www.`\n   *  - Localized & Long top-level domains \\.(xn--)?[a-z0-9-]{2,20}\\b\n   *  - Allowed query parameters & values, it's two blocks of matchers\n   *    ([-a-zA-Z0-9@:%_\\+,.~#?&\\/=]*[-a-zA-Z0-9@:%_\\+~#?&\\/=])*\n   *    - First block is [-a-zA-Z0-9@:%_\\+\\[\\],.~#?&\\/=]* -- this matches parameter names & values (including commas, dots, opening & closing brackets)\n   *    - The first block must be followed by a closing block [-a-zA-Z0-9@:%_\\+\\]~#?&\\/=] -- this doesn't match commas, dots, and opening brackets\n   */\n  url: /(https?:\\/\\/|www\\.)[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.(xn--)?[a-z0-9-]{2,20}\\b([-a-zA-Z0-9@:%_\\+\\[\\],.~#?&\\/=]*[-a-zA-Z0-9@:%_\\+\\]~#?&\\/=])*/i,\n  phone: /[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,7}/,\n  email: /\\S+@\\S+\\.\\S+/,\n};\n\n/**\n * This is for built-in-patterns already supported by this library\n * Note: any additional keys/props are permitted, and will be passed along as props to the <Text> component!\n * @typedef {Object} DefaultParseShape\n * @property {KnownParsePattern} [type] key of the known pattern you'd like to configure\n * @property {number} [nonExhaustiveModeMaxMatchCount] Enables \"non-exhaustive mode\", where you can limit how many matches are found. -- Must be a positive integer or Infinity matches are permitted\n * @property {Function} [renderText] arbitrary function to rewrite the matched string into something else\n * @property {Function} [onPress]\n * @property {Function} [onLongPress]\n */\nconst defaultParseShape = PropTypes.shape({\n  ...Text.propTypes,\n  type: PropTypes.oneOf(Object.keys(PATTERNS)).isRequired,\n  nonExhaustiveMaxMatchCount: PropTypes.number,\n});\n\nconst customParseShape = PropTypes.shape({\n  ...Text.propTypes,\n  pattern: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(RegExp)])\n    .isRequired,\n  nonExhaustiveMaxMatchCount: PropTypes.number,\n});\n\n/**\n * The props added by this component\n * @typedef {DefaultParseShape|import('./lib/TextExtraction').CustomParseShape} ParsedTextAddedProps\n * @property {ParseShape[]} parse\n * @property {import('react-native').TextProps} childrenProps -- the props set on each child Text component\n */\n/** @typedef {ParsedTextAddedProps & import('react-native').TextProps} ParsedTextProps */\n\n/** @type {import('react').ComponentClass<ParsedTextProps>} */\nclass ParsedText extends React.Component {\n  static displayName = 'ParsedText';\n\n  static propTypes = {\n    ...Text.propTypes,\n    parse: PropTypes.arrayOf(\n      PropTypes.oneOfType([defaultParseShape, customParseShape]),\n    ),\n    childrenProps: PropTypes.shape(Text.propTypes),\n  };\n\n  static defaultProps = {\n    parse: null,\n    childrenProps: {},\n  };\n\n  setNativeProps(nativeProps) {\n    this._root.setNativeProps(nativeProps);\n  }\n  /** @returns {import('./lib/TextExtraction').CustomParseShape[]} */\n  getPatterns() {\n    return this.props.parse.map((option) => {\n      const { type, ...patternOption } = option;\n      if (type) {\n        if (!PATTERNS[type]) {\n          throw new Error(`${option.type} is not a supported type`);\n        }\n        patternOption.pattern = PATTERNS[type];\n      }\n\n      return patternOption;\n    });\n  }\n\n  getParsedText() {\n    if (!this.props.parse) {\n      return this.props.children;\n    }\n    if (typeof this.props.children !== 'string') {\n      return this.props.children;\n    }\n\n    const textExtraction = new TextExtraction(\n      this.props.children,\n      this.getPatterns(),\n    );\n\n    return textExtraction.parse().map((props, index) => {\n      const { style: parentStyle } = this.props;\n      const { style, ...remainder } = props;\n      return (\n        <Text\n          key={`parsedText-${index}`}\n          style={[parentStyle, style]}\n          {...this.props.childrenProps}\n          {...remainder}\n        />\n      );\n    });\n  }\n\n  render() {\n    // Discard custom props before passing remainder to Text\n    const { parse, childrenProps, ...remainder } = { ...this.props };\n\n    return (\n      <Text ref={(ref) => (this._root = ref)} {...remainder}>\n        {this.getParsedText()}\n      </Text>\n    );\n  }\n}\n\nexport default ParsedText;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}