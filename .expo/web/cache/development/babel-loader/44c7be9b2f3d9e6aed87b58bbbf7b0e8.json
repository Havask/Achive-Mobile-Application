{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useCallback } from 'react';\nimport { triggerHaptic } from \"../utils/hapticEngine\";\nexport function useHaptic() {\n  var trigger = useCallback(function _callee(type) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(triggerHaptic(type).catch(function (err) {\n              return console.error('Error while triggering haptic', err);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  return {\n    trigger: trigger\n  };\n}","map":{"version":3,"mappings":";AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,SAASC,aAAT;AAMA,OAAO,SAASC,SAAT,GAAqB;EAC1B,IAAMC,OAAO,GAAGH,WAAW,CAAC,iBAAOI,IAAP;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCACpBH,aAAa,CAACG,IAAD,CAAbH,CAAoBI,KAApBJ,CAA2BK,aAAD;cAAA,OAC9BC,OAAO,CAACC,KAARD,CAAc,+BAAdA,EAA+CD,GAA/CC,CAD8B;YAAA,CAA1BN,CADoB;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAD,EAIxB,EAJwB,CAA3B;EAMA,OAAO;IAAEE;EAAF,CAAP;AACD","names":["useCallback","triggerHaptic","useHaptic","trigger","type","catch","err","console","error"],"sources":["useHaptic.ts"],"sourcesContent":["import { useCallback } from 'react';\nimport type { HapticType } from '../types/Chatty.types';\nimport { triggerHaptic } from '../utils/hapticEngine';\n\n/**\n * `useHaptic` returns a `trigger` function that triggers haptic feedback\n * @returns A function that triggers haptic feedback.\n */\nexport function useHaptic() {\n  const trigger = useCallback(async (type: HapticType) => {\n    await triggerHaptic(type).catch((err) =>\n      console.error('Error while triggering haptic', err)\n    );\n  }, []);\n\n  return { trigger };\n}\n"]},"metadata":{},"sourceType":"module"}