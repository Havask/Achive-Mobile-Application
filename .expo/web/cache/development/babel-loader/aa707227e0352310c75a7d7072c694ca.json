{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport styled from \"styled-components/native\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { FirebaseContext } from \"../../context/FirebaseContext\";\nimport { UserContext } from \"../../context/UserContext\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport { Box, Text, Pressable, Heading, IconButton, Icon, HStack, Avatar, VStack, Spacer, Center, Image, Divider, Stack, Button, FormControl, Input, Link, WarningOutlineIcon } from \"native-base\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default LogInScreen = function LogInScreen(_ref) {\n  var navigation = _ref.navigation;\n  var firebase = useContext(FirebaseContext);\n\n  var _useContext = useContext(UserContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      User = _useContext2[0],\n      setUser = _useContext2[1];\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      Isloggedin = _useState8[0],\n      setIsloggedin = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      RememberMe = _useState10[0],\n      setRememberMe = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      Valid = _useState12[0],\n      setValid = _useState12[1];\n\n  var handleLogin = function handleLogin() {\n    var uid, userInfo, _uid, _userInfo;\n\n    return _regeneratorRuntime.async(function handleLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(RememberMe === true)) {\n              _context.next = 19;\n              break;\n            }\n\n            if (!(email && password)) {\n              _context.next = 17;\n              break;\n            }\n\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(firebase.SignInUser(email, password));\n\n          case 5:\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(firebase.getCurrentUser().uid);\n\n          case 7:\n            uid = _context.sent;\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(firebase.getUserInfo(uid));\n\n          case 10:\n            userInfo = _context.sent;\n            setUser({\n              username: userInfo.username,\n              email: email,\n              password: password,\n              uid: uid,\n              groups: userInfo.groups,\n              profilePhotoUrl: userInfo.profilePhotoUrl,\n              isLoggedIn: true\n            });\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](2);\n            setValid(true);\n\n          case 17:\n            _context.next = 34;\n            break;\n\n          case 19:\n            _context.prev = 19;\n            _context.next = 22;\n            return _regeneratorRuntime.awrap(firebase.SignInUser(email, password));\n\n          case 22:\n            _context.next = 24;\n            return _regeneratorRuntime.awrap(firebase.getCurrentUser().uid);\n\n          case 24:\n            _uid = _context.sent;\n            _context.next = 27;\n            return _regeneratorRuntime.awrap(firebase.getUserInfo(_uid));\n\n          case 27:\n            _userInfo = _context.sent;\n            setUser({\n              username: _userInfo.username,\n              email: _userInfo.email,\n              password: _userInfo.password,\n              uid: _uid,\n              groups: _userInfo.groups,\n              profilePhotoUrl: _userInfo.profilePhotoUrl,\n              isLoggedIn: true\n            });\n            _context.next = 34;\n            break;\n\n          case 31:\n            _context.prev = 31;\n            _context.t1 = _context[\"catch\"](19);\n            setValid(true);\n\n          case 34:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 14], [19, 31]], Promise);\n  };\n\n  var toggleSwitch = function toggleSwitch() {\n    return setRememberMe(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  return _jsx(Box, {\n    children: _jsxs(Box, {\n      pt: \"150\",\n      p: \"7\",\n      children: [_jsx(Box, {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: _jsx(Image, {\n          h: \"100\",\n          w: \"200\",\n          source: require(\"../../assets/logo.png\"),\n          alt: \"Logo\"\n        })\n      }), _jsxs(VStack, {\n        space: 3,\n        mt: \"5\",\n        pt: \"12\",\n        children: [_jsxs(FormControl, {\n          isInvalid: Valid,\n          children: [_jsx(FormControl.Label, {\n            children: \"Email\"\n          }), _jsx(Input, {\n            autoCapitalize: \"none\",\n            autoCompleteType: \"email\",\n            autocorrect: false,\n            keyboardType: \"email-address\",\n            value: email,\n            onChangeText: function onChangeText(email) {\n              return setEmail(email.trim());\n            }\n          }), _jsx(FormControl.Label, {\n            children: \"Password\"\n          }), _jsx(Input, {\n            type: \"password\",\n            autoCapitalize: \"none\",\n            autoCompleteType: \"password\",\n            autocorrect: false,\n            secureTextEntry: true,\n            value: password,\n            onChangeText: function onChangeText(password) {\n              return setPassword(password.trim());\n            }\n          }), _jsx(FormControl.ErrorMessage, {\n            leftIcon: _jsx(WarningOutlineIcon, {\n              size: \"xs\"\n            }),\n            children: \"Wrong password or email.\"\n          })]\n        }), _jsx(Link, {\n          _text: {\n            fontSize: \"xs\",\n            fontWeight: \"500\",\n            color: \"#88d498\"\n          },\n          alignSelf: \"flex-end\",\n          mt: \"1\",\n          children: \"Forgot Password?\"\n        }), _jsxs(HStack, {\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          space: 4,\n          children: [_jsx(Text, {\n            children: \"Keep me logged in\"\n          }), _jsx(Switch, {\n            size: \"sm\",\n            onValueChange: toggleSwitch,\n            value: RememberMe\n          })]\n        }), _jsx(Button, {\n          mt: \"3\",\n          onPress: handleLogin,\n          children: \"Sign in\"\n        }), _jsxs(HStack, {\n          mt: \"6\",\n          justifyContent: \"center\",\n          children: [_jsxs(Text, {\n            fontSize: \"sm\",\n            children: [\"I'm a new user.\", \" \"]\n          }), _jsx(Link, {\n            onPress: function onPress() {\n              return navigation.push(\"SignUpScreen\");\n            },\n            _text: {\n              color: \"#88d498\",\n              fontWeight: \"medium\",\n              fontSize: \"sm\"\n            },\n            href: \"#\",\n            children: \"Sign Up\"\n          })]\n        })]\n      })]\n    })\n  });\n};","map":{"version":3,"names":["React","useState","useContext","useEffect","styled","FirebaseContext","UserContext","Box","Text","Pressable","Heading","IconButton","Icon","HStack","Avatar","VStack","Spacer","Center","Image","Divider","Stack","Button","FormControl","Input","Link","WarningOutlineIcon","LogInScreen","navigation","firebase","User","setUser","email","setEmail","password","setPassword","loading","setLoading","Isloggedin","setIsloggedin","RememberMe","setRememberMe","Valid","setValid","handleLogin","SignInUser","getCurrentUser","uid","getUserInfo","userInfo","username","groups","profilePhotoUrl","isLoggedIn","toggleSwitch","previousState","require","trim","fontSize","fontWeight","color","push"],"sources":["/Users/havardskjaerstein/Desktop/Achive/screens/AuthScreen/logInScreen.js"],"sourcesContent":["import React, {useState, useContext, useEffect} from \"react\";\nimport styled from \"styled-components/native\"; \nimport { KeyboardAvoidingView, ScrollView, Alert} from \"react-native\";\nimport {FirebaseContext} from \"../../context/FirebaseContext\";\nimport {UserContext} from \"../../context/UserContext\";\nimport {Switch} from \"react-native\";\nimport {Box, Text, Pressable, Heading, IconButton, Icon, HStack, Avatar, \n  VStack, Spacer, Center, Image,Divider,Stack, Button, FormControl, Input, Link, WarningOutlineIcon} from \"native-base\";\n\nexport default LogInScreen = ({navigation}) => {\n\n  const firebase = useContext(FirebaseContext); \n  const [User, setUser] = useContext(UserContext); \n  const [email, setEmail] = useState(\"\"); \n  const [password, setPassword] = useState(\"\"); \n  const [loading, setLoading] = useState(false); \n  const [Isloggedin, setIsloggedin] = useState(\"\"); \n  const [RememberMe, setRememberMe] = useState(true);  \n  const [Valid, setValid] = useState(false);  \n\n  const handleLogin = async () => {\n\n    if(RememberMe === true){\n      if (email && password) {\n   \n        try{\n          await firebase.SignInUser(email, password);\n          \n          const uid = await firebase.getCurrentUser().uid; \n          const userInfo = await firebase.getUserInfo(uid)\n\n          setUser({\n            username: userInfo.username,\n            email: email, \n            password: password,\n            uid: uid, \n            groups: userInfo.groups, \n            profilePhotoUrl: userInfo.profilePhotoUrl,\n            isLoggedIn: true, \n          })\n\n        }catch{\n          setValid(true)\n        }\n      } \n    }\n    else{\n      try{\n        await firebase.SignInUser(email, password);\n        const uid =  await firebase.getCurrentUser().uid; \n        const userInfo =  await firebase.getUserInfo(uid)\n    \n        setUser({\n          username: userInfo.username,\n          email: userInfo.email, \n          password: userInfo.password,\n          uid: uid, \n          groups: userInfo.groups, \n          profilePhotoUrl: userInfo.profilePhotoUrl,\n          isLoggedIn: true, \n        })\n      }catch{\n        setValid(true)\n    }}\n    }\n \n\n  const toggleSwitch = () => setRememberMe(previousState => !previousState);\n\n  return(\n    <Box>\n        <Box pt=\"150\" p=\"7\">\n          <Box justifyContent=\"center\" alignItems=\"center\">\n            <Image h=\"100\" w=\"200\" source={require(\"../../assets/logo.png\")} alt=\"Logo\"/>\n          </Box>\n\n          <VStack space={3} mt=\"5\" pt=\"12\">\n        \n              <FormControl isInvalid={Valid}>\n              <FormControl.Label>Email</FormControl.Label>\n              <Input \n                autoCapitalize=\"none\" \n                autoCompleteType=\"email\" \n                autocorrect={false} \n            \n                keyboardType=\"email-address\"\n                value={email}\n                onChangeText={email => setEmail(email.trim())}/>\n\n          <FormControl.Label>Password</FormControl.Label>\n              <Input \n               type=\"password\" \n               autoCapitalize=\"none\" \n               autoCompleteType=\"password\" \n               autocorrect={false} \n             \n               secureTextEntry={true}\n               value={password}\n               onChangeText={password => setPassword(password.trim())}/>\n\n              <FormControl.ErrorMessage leftIcon={<WarningOutlineIcon size=\"xs\" />}>\n                Wrong password or email.\n              </FormControl.ErrorMessage>\n\n            </FormControl>\n\n              <Link _text={{\n                fontSize: \"xs\",\n                fontWeight: \"500\",\n                color: \"#88d498\"\n            }} alignSelf=\"flex-end\" mt=\"1\">\n                Forgot Password?\n              </Link>\n\n          <HStack alignItems=\"center\" justifyContent=\"center\" space={4}>\n            <Text>Keep me logged in</Text>\n            <Switch \n              size=\"sm\" \n              onValueChange={toggleSwitch}\n              value={RememberMe}\n              />\n          </HStack>\n\n          <Button  mt=\"3\"  onPress={handleLogin}>\n            Sign in\n          </Button>\n\n          <HStack mt=\"6\" justifyContent=\"center\" >\n            <Text fontSize=\"sm\"  >\n              I'm a new user.{\" \"}\n            </Text>\n            <Link onPress={() => navigation.push(\"SignUpScreen\")} _text={{\n              color: \"#88d498\",\n              fontWeight: \"medium\",\n              fontSize: \"sm\"\n            }} href=\"#\">\n              Sign Up\n            </Link>\n          </HStack>\n        </VStack>\n      </Box>\n    </Box>\n  );\n}\n\n/*\n<Box>\n            <AuthContainer>\n              <AuthTitle>Email address</AuthTitle>\n              <AuthField \n                autoCapitalize=\"none\" \n                autoCompleteType=\"email\" \n                autocorrect={false} \n            \n                keyboardType=\"email-address\"\n                value={email}\n                onChangeText={email => setEmail(email.trim())}\n              />\n            </AuthContainer>\n\n            <AuthContainer>\n              <AuthTitle>password</AuthTitle>\n              <AuthField \n                autoCapitalize=\"none\" \n                autoCompleteType=\"password\" \n                autocorrect={false} \n              \n                secureTextEntry={true}\n                value={password}\n                onChangeText={password => setPassword(password.trim())}\n              />\n            </AuthContainer>\n          </Box>\n\n        <StayLoggedIn>\n            <Text small> \n                Keep me logged in </Text>\n          <SwitchView>\n            <Switch \n              trackColor={{ false: \"#767577\", true: \"#88d498\"}}\n              thumbColor={Isloggedin ? \"#88d498\" : \"#cccccc\"}\n              ios_backgroundColor=\"#3e3e3e\"\n              onValueChange={toggleSwitch}\n              value={RememberMe}\n            />\n          </SwitchView>\n        </StayLoggedIn>\n\n          <SignInContainer onPress={handleLogin} disable={loading}>\n            {loading ? (<Loading/>) : (\n            <Text bold center color=\"#ffffff\">\n              Sign In</Text>\n            )}\n          </SignInContainer>\n\n          <SignUp onPress={() => navigation.push(\"SignUpScreen\")}>\n            <Text small center> \n                New to Achive? <Text bold color=\"#88d498\">Sign Up</Text></Text>\n          </SignUp>\n\n      </Box>\n      */\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}