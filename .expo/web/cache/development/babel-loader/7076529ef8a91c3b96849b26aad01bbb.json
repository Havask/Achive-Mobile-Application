{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport dayjs from \"dayjs\";\nimport * as React from \"react\";\nimport { useEffect, useRef, useState, useContext, useCallback } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ChatEmitter, Chatty } from \"react-native-chatty\";\nimport { GestureHandlerRootView } from \"react-native-gesture-handler\";\nimport { initialWindowMetrics, SafeAreaProvider } from \"react-native-safe-area-context\";\nimport ContextMenu from \"react-native-context-menu-view\";\nimport { GroupContext } from \"../../../context/GroupContext\";\nimport { FirebaseContext } from \"../../../context/FirebaseContext\";\nimport { UserContext } from \"../../../context/UserContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default ChatScreen = function ChatScreen(_ref) {\n  var navigation = _ref.navigation;\n  var firebase = useContext(FirebaseContext);\n\n  var _useContext = useContext(UserContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      user = _useContext2[0],\n      setUser = _useContext2[1];\n\n  var _useContext3 = useContext(GroupContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      group = _useContext4[0],\n      setGroup = _useContext4[1];\n\n  var listRef = useRef(null);\n  var message = useRef();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      replying = _useState2[0],\n      setReplying = _useState2[1];\n\n  var _useState3 = useState([{\n    id: 1,\n    text: \"Hello!\",\n    me: true,\n    createdAt: new Date(),\n    user: {\n      id: 1,\n      username: \"John Doe\",\n      avatar: {\n        uri: \"https://i.pravatar.cc/300\"\n      }\n    }\n  }, {\n    id: 2,\n    text: \"Hello john! how are you?\",\n    me: false,\n    createdAt: new Date(),\n    user: {\n      id: 2,\n      username: \"Jane Doe\",\n      avatar: {\n        uri: \"https://i.pravatar.cc/300\"\n      }\n    },\n    repliedTo: {\n      id: 1,\n      text: \"Hello!\",\n      me: true,\n      createdAt: new Date(),\n      user: {\n        id: 1,\n        username: \"John Doe\",\n        avatar: {\n          uri: \"https://i.pravatar.cc/300\"\n        }\n      }\n    }\n  }, {\n    id: 8,\n    text: \"I'm fine thanks! What about you?\",\n    me: true,\n    createdAt: new Date(),\n    user: {\n      id: 2,\n      username: \"Jane Doe\",\n      avatar: {\n        uri: \"https://i.pravatar.cc/300\"\n      }\n    }\n  }]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messages = _useState4[0],\n      setMessages = _useState4[1];\n\n  useEffect(function () {\n    ChatEmitter == null ? void 0 : ChatEmitter.addListener(\"patternPressed\", function (pattern) {\n      Alert.alert(\"Pattern pressed\", pattern);\n    });\n    var _messages = [];\n    setMessages([].concat(_toConsumableArray(messages), _messages));\n    return function () {\n      ChatEmitter.removeAllListeners();\n    };\n  }, []);\n\n  var onLoadEarlier = function onLoadEarlier() {\n    return new Promise(function (resolve) {\n      setMessages(function (prev) {\n        return [{\n          id: 1203,\n          text: \"I'm loaded!\",\n          me: true,\n          createdAt: dayjs().add(-5, \"day\").toDate(),\n          user: {\n            id: 1,\n            username: group.groupname,\n            avatar: {\n              uri: \"https://i.pravatar.cc/300\"\n            }\n          }\n        }].concat(_toConsumableArray(prev));\n      });\n      setTimeout(function () {\n        resolve(true);\n      }, 300);\n    });\n  };\n\n  var onPressSend = useCallback(function (_ref2) {\n    var text = _ref2.text,\n        repliedTo = _ref2.repliedTo;\n    listRef.current.appendMessage({\n      id: messages.length + 1,\n      text: text,\n      me: Math.floor(Math.random() * 2) === 0,\n      createdAt: new Date(),\n      user: {\n        id: messages.length + 1,\n        name: user.username,\n        avatar: {\n          uri: \"https://i.pravatar.cc/300\"\n        }\n      },\n      repliedTo: repliedTo\n    });\n    listRef.current.setIsTyping(false);\n    setReplying(null);\n  }, [messages]);\n  var onChangeText = useCallback(function (text) {\n    message.current = text;\n    listRef.current.setIsTyping(text.length > 0);\n  }, []);\n  if (messages.length < 1) return _jsx(ActivityIndicator, {});\n  return _jsx(SafeAreaProvider, {\n    initialMetrics: initialWindowMetrics,\n    children: _jsx(GestureHandlerRootView, {\n      children: _jsx(Chatty, {\n        enableHapticFeedback: true,\n        messages: messages,\n        ref: listRef,\n        enablePatterns: true,\n        patternProps: {\n          allowPatterns: [\"mention\"]\n        },\n        showScrollToBottomButton: true,\n        bubbleProps: {\n          replyDragElement: _jsx(Image, {\n            source: {\n              uri: \"https://icon-library.com/images/reply-icon-png/reply-icon-png-16.jpg\"\n            },\n            style: {\n              width: 30,\n              height: 30\n            }\n          })\n        },\n        footerProps: {\n          onPressSend: onPressSend,\n          onPressCancelReply: function onPressCancelReply() {\n            return setReplying(null);\n          },\n          onChangeText: onChangeText\n        },\n        loadEarlierProps: {\n          onLoadEarlier: onLoadEarlier,\n          show: messages.length === 10 ? false : true\n        },\n        onReply: function onReply(_message) {\n          setReplying(_message);\n        },\n        renderTypingBubble: function renderTypingBubble() {\n          return _jsx(Text, {\n            children: \"Custom View (Typing...)\"\n          });\n        },\n        replyingTo: replying != null ? replying : undefined,\n        headerProps: {\n          user: {\n            id: 0,\n            username: user.username,\n            avatar: {\n              uri: user.profilePhotoUrl\n            }\n          }\n        }\n      })\n    })\n  });\n};","map":{"version":3,"names":["dayjs","React","useEffect","useRef","useState","useContext","useCallback","ChatEmitter","Chatty","GestureHandlerRootView","initialWindowMetrics","SafeAreaProvider","ContextMenu","GroupContext","FirebaseContext","UserContext","ChatScreen","navigation","firebase","user","setUser","group","setGroup","listRef","message","replying","setReplying","id","text","me","createdAt","Date","username","avatar","uri","repliedTo","messages","setMessages","addListener","pattern","Alert","alert","_messages","removeAllListeners","onLoadEarlier","Promise","resolve","prev","add","toDate","groupname","setTimeout","onPressSend","current","appendMessage","length","Math","floor","random","name","setIsTyping","onChangeText","allowPatterns","replyDragElement","width","height","onPressCancelReply","show","_message","undefined","profilePhotoUrl"],"sources":["/Users/havardskjaerstein/Desktop/Achive/screens/GroupTab/GroupScreens/ChatScreen.js"],"sourcesContent":["import dayjs from \"dayjs\";\nimport * as React from \"react\";\nimport { useEffect, useRef, useState, useContext, useCallback} from \"react\";\nimport {\n  ActivityIndicator,\n  Alert,\n  AppRegistry,\n  Image,\n  Platform,\n  TouchableOpacity,\n  Text, \n} from \"react-native\";\nimport { ChatEmitter, Chatty } from \"react-native-chatty\";\nimport { GestureHandlerRootView } from \"react-native-gesture-handler\";\nimport {\n  initialWindowMetrics,\n  SafeAreaProvider,\n} from \"react-native-safe-area-context\";\nimport ContextMenu from \"react-native-context-menu-view\";\n\nimport {GroupContext} from \"../../../context/GroupContext\";\nimport {FirebaseContext} from \"../../../context/FirebaseContext\";\nimport {UserContext} from \"../../../context/UserContext\";\n\n/*\nhttps://snack.expo.dev/@muhammedkpln/react-native-chatty-example\nhttps://css-tricks.com/building-a-real-time-chat-app-with-react-and-firebase/\n*/ \nexport default ChatScreen = ({navigation}) => {\n\n  const firebase = useContext(FirebaseContext); \n  const [user, setUser] = useContext(UserContext); \n  const [group, setGroup] = useContext(GroupContext); \n\n  const listRef = useRef(null);\n  const message = useRef();\n  const [replying, setReplying] = useState(null);\n\n\n  const [messages, setMessages] = useState([\n    {\n      id: 1,\n      text: \"Hello!\",\n      me: true,\n      createdAt: new Date(),\n      user: {\n        id: 1,\n        username: \"John Doe\",\n        avatar: { uri: \"https://i.pravatar.cc/300\" },\n      },\n    },\n    {\n      id: 2,\n      text: \"Hello john! how are you?\",\n      me: false,\n      createdAt: new Date(),\n      user: {\n        id: 2,\n        username: \"Jane Doe\",\n        avatar: { uri: \"https://i.pravatar.cc/300\" },\n      },\n      repliedTo: {\n        id: 1,\n        text: \"Hello!\",\n        me: true,\n        createdAt: new Date(),\n        user: {\n          id: 1,\n          username: \"John Doe\",\n          avatar: { uri: \"https://i.pravatar.cc/300\" },\n        },\n      },\n    },\n    {\n      id: 8,\n      text: \"I'm fine thanks! What about you?\",\n      me: true,\n      createdAt: new Date(),\n      user: {\n        id: 2,\n        username: \"Jane Doe\",\n        avatar: { uri: \"https://i.pravatar.cc/300\" },\n      },\n    },\n  ]);\n\n  useEffect(() => {\n    ChatEmitter?.addListener(\"patternPressed\", (pattern) => {\n      Alert.alert(\"Pattern pressed\", pattern);\n    });\n\n    const _messages = [];\n\n    setMessages([...messages, ..._messages]);\n\n    return () => {\n      ChatEmitter.removeAllListeners();\n    };\n  }, []);\n\n  const onLoadEarlier = () => {\n    return new Promise((resolve) => {\n      setMessages((prev) => [\n        ...[\n          {\n            id: 1203,\n            text: \"I'm loaded!\",\n            me: true,\n            createdAt: dayjs().add(-5, \"day\").toDate(),\n            user: {\n              id: 1,\n              username: group.groupname,\n              avatar: { uri: \"https://i.pravatar.cc/300\" },\n            },\n          },\n        ],\n        ...prev,\n      ]);\n\n      setTimeout(() => {\n        resolve(true);\n      }, 300);\n    });\n  };\n\n  const onPressSend = useCallback(\n    ({ text, repliedTo }) => {\n      listRef.current.appendMessage({\n        id: messages.length + 1,\n        text,\n        me: Math.floor(Math.random() * 2) === 0,\n        createdAt: new Date(),\n        user: {\n          id: messages.length + 1,\n          name: user.username, \n          avatar: { uri: \"https://i.pravatar.cc/300\" },\n        },\n        repliedTo,\n      });\n\n      listRef.current.setIsTyping(false);\n      setReplying(null);\n    },\n    [messages],\n  );\n\n  const onChangeText = useCallback((text) => {\n    message.current = text;\n    //@ts-ignore\n    listRef.current.setIsTyping(text.length > 0);\n  }, []);\n\n  if (messages.length < 1) return <ActivityIndicator />;\n\n  return (\n    <SafeAreaProvider initialMetrics={initialWindowMetrics}>\n      <GestureHandlerRootView>\n        <Chatty\n          enableHapticFeedback\n          messages={messages}\n          ref={listRef}\n          enablePatterns\n          patternProps={{\n            allowPatterns: [\"mention\"],\n          }}\n          showScrollToBottomButton\n          bubbleProps={{\n            replyDragElement: (\n              <Image\n                source={{\n                  uri: \"https://icon-library.com/images/reply-icon-png/reply-icon-png-16.jpg\",\n                }}\n                style={{ width: 30, height: 30 }}\n              />\n            ),\n          }}\n          footerProps={{\n            onPressSend: onPressSend,\n            onPressCancelReply: () => setReplying(null),\n            onChangeText: onChangeText,\n          }}\n          loadEarlierProps={{\n            onLoadEarlier: onLoadEarlier,\n            show: messages.length === 10 ? false : true,\n          }}\n          onReply={(_message) => {\n            setReplying(_message);\n          }}\n          renderTypingBubble={() => <Text>Custom View (Typing...)</Text>}\n          replyingTo={replying ?? undefined}\n          headerProps={{\n            user: {\n              id: 0,\n              username: user.username,\n              avatar:  { uri: user.profilePhotoUrl}\n            },\n          }}\n        />\n      </GestureHandlerRootView>\n    </SafeAreaProvider>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}