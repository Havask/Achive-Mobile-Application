{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nexport var videoRef = React.createRef();\nexport var videoRendererExpo;\nexport var videoRenderer;\n\ntry {\n  videoRendererExpo = require('expo-av');\n} catch (_unused) {\n  try {\n    videoRenderer = require('react-native-video');\n  } catch (_unused2) {\n    console.warn('expo-image-picker or react-native-image-picker not found. Please install it to use this feature.');\n  }\n}\n\nexport var RenderVideo = React.forwardRef(function (props, _ref) {\n  if (videoRenderer) {\n    return React.createElement(videoRenderer.default, _extends({}, props, {\n      ref: videoRef\n    }));\n  }\n\n  return null;\n});\nexport var RenderVideoExpo = React.forwardRef(function (props, _ref) {\n  if (videoRenderer) {\n    return React.createElement(videoRendererExpo.Video, _extends({}, props, {\n      ref: videoRef\n    }));\n  }\n\n  return null;\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,IAAMC,QAAQ,GAAGD,KAAK,CAACE,SAANF,EAAjB;AAEP,OAAO,IAAIG,iBAAJ;AACP,OAAO,IAAIC,aAAJ;;AACP,IAAI;EACFD,iBAAiB,GAAGE,OAAO,CAAC,SAAD,CAA3BF;AADF,EAEE,gBAAM;EACN,IAAI;IACFC,aAAa,GAAGC,OAAO,CAAC,oBAAD,CAAvBD;EADF,EAEE,iBAAM;IACNE,OAAO,CAACC,IAARD,CACE,kGADFA;EAGD;AACF;;AAED,OAAO,IAAME,WAAW,GAAGR,KAAK,CAACS,UAANT,CAAiB,UAACU,KAAD,EAAyBC,IAAzB,EAAkC;EAC5E,IAAIP,aAAJ,EAAmB;IACjB,OAAOJ,oBAACI,aAAD,CAAeQ,OAAf,eAA2BF,KAA3B;MAAkCG,GAAG,EAAEZ;IAAvC,GAAP;EACD;;EAED,OAAO,IAAP;AALyB,EAApB;AAQP,OAAO,IAAMa,eAAe,GAAGd,KAAK,CAACS,UAANT,CAAiB,UAACU,KAAD,EAAoBC,IAApB,EAA6B;EAC3E,IAAIP,aAAJ,EAAmB;IACjB,OAAOJ,oBAACG,iBAAD,CAAmBY,KAAnB,eAA6BL,KAA7B;MAAoCG,GAAG,EAAEZ;IAAzC,GAAP;EACD;;EAED,OAAO,IAAP;AAL6B,EAAxB","names":["React","videoRef","createRef","videoRendererExpo","videoRenderer","require","console","warn","RenderVideo","forwardRef","props","_ref","default","ref","RenderVideoExpo","Video"],"sources":["videoRenderer.tsx"],"sourcesContent":["import type { Video, VideoProps } from 'expo-av';\nimport React from 'react';\nimport type { VideoProperties } from 'react-native-video';\n\nexport const videoRef = React.createRef<Video>();\n\nexport let videoRendererExpo: any;\nexport let videoRenderer: any;\ntry {\n  videoRendererExpo = require('expo-av');\n} catch {\n  try {\n    videoRenderer = require('react-native-video');\n  } catch {\n    console.warn(\n      'expo-image-picker or react-native-image-picker not found. Please install it to use this feature.'\n    );\n  }\n}\n\nexport const RenderVideo = React.forwardRef((props: VideoProperties, _ref) => {\n  if (videoRenderer) {\n    return <videoRenderer.default {...props} ref={videoRef} />;\n  }\n\n  return null;\n});\n\nexport const RenderVideoExpo = React.forwardRef((props: VideoProps, _ref) => {\n  if (videoRenderer) {\n    return <videoRendererExpo.Video {...props} ref={videoRef} />;\n  }\n\n  return null;\n});\n"]},"metadata":{},"sourceType":"module"}