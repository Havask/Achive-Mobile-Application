{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport dayjs from \"dayjs\";\nimport * as React from \"react\";\nimport { useEffect, useRef, useState, useContext, useCallback } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ChatEmitter, Chatty } from \"react-native-chatty\";\nimport { GestureHandlerRootView } from \"react-native-gesture-handler\";\nimport { initialWindowMetrics, SafeAreaProvider } from \"react-native-safe-area-context\";\nimport ContextMenu from \"react-native-context-menu-view\";\nimport { GroupContext } from \"../../../context/GroupContext\";\nimport { FirebaseContext } from \"../../../context/FirebaseContext\";\nimport { UserContext } from \"../../../context/UserContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default ChatScreen = function ChatScreen(_ref) {\n  var navigation = _ref.navigation;\n  var firebase = useContext(FirebaseContext);\n\n  var _useContext = useContext(UserContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      user = _useContext2[0],\n      setUser = _useContext2[1];\n\n  var _useContext3 = useContext(GroupContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      group = _useContext4[0],\n      setGroup = _useContext4[1];\n\n  var listRef = useRef(null);\n  var message = useRef();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      replying = _useState2[0],\n      setReplying = _useState2[1];\n\n  var _useState3 = useState([{\n    id: 1,\n    text: \"Hello!\",\n    me: true,\n    createdAt: new Date(),\n    user: {\n      id: 1,\n      username: \"John Doe\",\n      avatar: {\n        uri: \"https://i.pravatar.cc/300\"\n      }\n    }\n  }, {\n    id: 2,\n    text: \"Hello john! how are you?\",\n    me: false,\n    createdAt: new Date(),\n    user: {\n      id: 2,\n      username: \"Jane Doe\",\n      avatar: {\n        uri: \"https://i.pravatar.cc/300\"\n      }\n    },\n    repliedTo: {\n      id: 1,\n      text: \"Hello!\",\n      me: true,\n      createdAt: new Date(),\n      user: {\n        id: 1,\n        username: \"John Doe\",\n        avatar: {\n          uri: \"https://i.pravatar.cc/300\"\n        }\n      }\n    }\n  }, {\n    id: 8,\n    text: \"I'm fine thanks! What about you?\",\n    me: true,\n    createdAt: new Date(),\n    user: {\n      id: 2,\n      username: \"Jane Doe\",\n      avatar: {\n        uri: \"https://i.pravatar.cc/300\"\n      }\n    }\n  }]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messages = _useState4[0],\n      setMessages = _useState4[1];\n\n  useEffect(function () {\n    ChatEmitter == null ? void 0 : ChatEmitter.addListener(\"patternPressed\", function (pattern) {\n      Alert.alert(\"Pattern pressed\", pattern);\n    });\n    var _messages = [];\n    setMessages([].concat(_toConsumableArray(messages), _messages));\n    return function () {\n      ChatEmitter.removeAllListeners();\n    };\n  }, []);\n\n  var onLoadEarlier = function onLoadEarlier() {\n    return new Promise(function (resolve) {\n      setMessages(function (prev) {\n        return [{\n          id: 1203,\n          text: \"I'm loaded!\",\n          me: true,\n          createdAt: dayjs().add(-5, \"day\").toDate(),\n          user: {\n            id: 1,\n            username: group.groupname,\n            avatar: {\n              uri: \"https://i.pravatar.cc/300\"\n            }\n          }\n        }].concat(_toConsumableArray(prev));\n      });\n      setTimeout(function () {\n        resolve(true);\n      }, 300);\n    });\n  };\n\n  var onPressSend = useCallback(function (_ref2) {\n    var text = _ref2.text,\n        repliedTo = _ref2.repliedTo;\n    listRef.current.appendMessage({\n      id: messages.length + 1,\n      text: text,\n      me: Math.floor(Math.random() * 2) === 0,\n      createdAt: new Date(),\n      user: {\n        id: messages.length + 1,\n        name: user.username,\n        avatar: {\n          uri: \"https://i.pravatar.cc/300\"\n        }\n      },\n      repliedTo: repliedTo\n    });\n    listRef.current.setIsTyping(false);\n    setReplying(null);\n  }, [messages]);\n  var onChangeText = useCallback(function (text) {\n    message.current = text;\n    listRef.current.setIsTyping(text.length > 0);\n  }, []);\n  if (messages.length < 1) return _jsx(ActivityIndicator, {});\n  return _jsx(SafeAreaProvider, {\n    initialMetrics: initialWindowMetrics,\n    children: _jsx(GestureHandlerRootView, {\n      children: _jsx(Chatty, {\n        enableHapticFeedback: true,\n        messages: messages,\n        ref: listRef,\n        enablePatterns: true,\n        patternProps: {\n          allowPatterns: [\"mention\"]\n        },\n        showScrollToBottomButton: true,\n        bubbleProps: {\n          replyDragElement: _jsx(Image, {\n            source: {\n              uri: \"https://icon-library.com/images/reply-icon-png/reply-icon-png-16.jpg\"\n            },\n            style: {\n              width: 30,\n              height: 30\n            }\n          })\n        },\n        footerProps: {\n          onPressSend: onPressSend,\n          onPressCancelReply: function onPressCancelReply() {\n            return setReplying(null);\n          },\n          onChangeText: onChangeText\n        },\n        loadEarlierProps: {\n          onLoadEarlier: onLoadEarlier,\n          show: messages.length === 10 ? false : true\n        },\n        onReply: function onReply(_message) {\n          setReplying(_message);\n        },\n        renderTypingBubble: function renderTypingBubble() {\n          return _jsx(Text, {\n            children: \"Custom View (Typing...)\"\n          });\n        },\n        replyingTo: replying != null ? replying : undefined,\n        headerProps: {\n          user: {\n            id: 0,\n            username: user.username,\n            avatar: {\n              uri: user.profilePhotoUrl\n            }\n          }\n        }\n      })\n    })\n  });\n};","map":{"version":3,"sources":["/Users/havardskjaerstein/Desktop/Achive/screens/GroupTab/GroupScreens/ChatScreen.js"],"names":["dayjs","React","useEffect","useRef","useState","useContext","useCallback","ChatEmitter","Chatty","GestureHandlerRootView","initialWindowMetrics","SafeAreaProvider","ContextMenu","GroupContext","FirebaseContext","UserContext","ChatScreen","navigation","firebase","user","setUser","group","setGroup","listRef","message","replying","setReplying","id","text","me","createdAt","Date","username","avatar","uri","repliedTo","messages","setMessages","addListener","pattern","Alert","alert","_messages","removeAllListeners","onLoadEarlier","Promise","resolve","prev","add","toDate","groupname","setTimeout","onPressSend","current","appendMessage","length","Math","floor","random","name","setIsTyping","onChangeText","allowPatterns","replyDragElement","width","height","onPressCancelReply","show","_message","undefined","profilePhotoUrl"],"mappings":"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","sourcesContent":["import dayjs from \"dayjs\";\nimport * as React from \"react\";\nimport { useEffect, useRef, useState, useContext, useCallback} from \"react\";\nimport {\n  ActivityIndicator,\n  Alert,\n  AppRegistry,\n  Image,\n  Platform,\n  TouchableOpacity,\n  Text, \n} from \"react-native\";\nimport { ChatEmitter, Chatty } from \"react-native-chatty\";\nimport { GestureHandlerRootView } from \"react-native-gesture-handler\";\nimport {\n  initialWindowMetrics,\n  SafeAreaProvider,\n} from \"react-native-safe-area-context\";\nimport ContextMenu from \"react-native-context-menu-view\";\n\nimport {GroupContext} from \"../../../context/GroupContext\";\nimport {FirebaseContext} from \"../../../context/FirebaseContext\";\nimport {UserContext} from \"../../../context/UserContext\";\n\n/*\nhttps://snack.expo.dev/@muhammedkpln/react-native-chatty-example\nhttps://css-tricks.com/building-a-real-time-chat-app-with-react-and-firebase/\n*/ \nexport default ChatScreen = ({navigation}) => {\n\n  const firebase = useContext(FirebaseContext); \n  const [user, setUser] = useContext(UserContext); \n  const [group, setGroup] = useContext(GroupContext); \n\n  const listRef = useRef(null);\n  const message = useRef();\n  const [replying, setReplying] = useState(null);\n\n\n  const [messages, setMessages] = useState([\n    {\n      id: 1,\n      text: \"Hello!\",\n      me: true,\n      createdAt: new Date(),\n      user: {\n        id: 1,\n        username: \"John Doe\",\n        avatar: { uri: \"https://i.pravatar.cc/300\" },\n      },\n    },\n    {\n      id: 2,\n      text: \"Hello john! how are you?\",\n      me: false,\n      createdAt: new Date(),\n      user: {\n        id: 2,\n        username: \"Jane Doe\",\n        avatar: { uri: \"https://i.pravatar.cc/300\" },\n      },\n      repliedTo: {\n        id: 1,\n        text: \"Hello!\",\n        me: true,\n        createdAt: new Date(),\n        user: {\n          id: 1,\n          username: \"John Doe\",\n          avatar: { uri: \"https://i.pravatar.cc/300\" },\n        },\n      },\n    },\n    {\n      id: 8,\n      text: \"I'm fine thanks! What about you?\",\n      me: true,\n      createdAt: new Date(),\n      user: {\n        id: 2,\n        username: \"Jane Doe\",\n        avatar: { uri: \"https://i.pravatar.cc/300\" },\n      },\n    },\n  ]);\n\n  useEffect(() => {\n    ChatEmitter?.addListener(\"patternPressed\", (pattern) => {\n      Alert.alert(\"Pattern pressed\", pattern);\n    });\n\n    const _messages = [];\n\n    setMessages([...messages, ..._messages]);\n\n    return () => {\n      ChatEmitter.removeAllListeners();\n    };\n  }, []);\n\n  const onLoadEarlier = () => {\n    return new Promise((resolve) => {\n      setMessages((prev) => [\n        ...[\n          {\n            id: 1203,\n            text: \"I'm loaded!\",\n            me: true,\n            createdAt: dayjs().add(-5, \"day\").toDate(),\n            user: {\n              id: 1,\n              username: group.groupname,\n              avatar: { uri: \"https://i.pravatar.cc/300\" },\n            },\n          },\n        ],\n        ...prev,\n      ]);\n\n      setTimeout(() => {\n        resolve(true);\n      }, 300);\n    });\n  };\n\n  const onPressSend = useCallback(\n    ({ text, repliedTo }) => {\n      listRef.current.appendMessage({\n        id: messages.length + 1,\n        text,\n        me: Math.floor(Math.random() * 2) === 0,\n        createdAt: new Date(),\n        user: {\n          id: messages.length + 1,\n          name: user.username, \n          avatar: { uri: \"https://i.pravatar.cc/300\" },\n        },\n        repliedTo,\n      });\n\n      listRef.current.setIsTyping(false);\n      setReplying(null);\n    },\n    [messages],\n  );\n\n  const onChangeText = useCallback((text) => {\n    message.current = text;\n    //@ts-ignore\n    listRef.current.setIsTyping(text.length > 0);\n  }, []);\n\n  if (messages.length < 1) return <ActivityIndicator />;\n\n  return (\n    <SafeAreaProvider initialMetrics={initialWindowMetrics}>\n      <GestureHandlerRootView>\n        <Chatty\n          enableHapticFeedback\n          messages={messages}\n          ref={listRef}\n          enablePatterns\n          patternProps={{\n            allowPatterns: [\"mention\"],\n          }}\n          showScrollToBottomButton\n          bubbleProps={{\n            replyDragElement: (\n              <Image\n                source={{\n                  uri: \"https://icon-library.com/images/reply-icon-png/reply-icon-png-16.jpg\",\n                }}\n                style={{ width: 30, height: 30 }}\n              />\n            ),\n          }}\n          footerProps={{\n            onPressSend: onPressSend,\n            onPressCancelReply: () => setReplying(null),\n            onChangeText: onChangeText,\n          }}\n          loadEarlierProps={{\n            onLoadEarlier: onLoadEarlier,\n            show: messages.length === 10 ? false : true,\n          }}\n          onReply={(_message) => {\n            setReplying(_message);\n          }}\n          renderTypingBubble={() => <Text>Custom View (Typing...)</Text>}\n          replyingTo={replying ?? undefined}\n          headerProps={{\n            user: {\n              id: 0,\n              username: user.username,\n              avatar:  { uri: user.profilePhotoUrl}\n            },\n          }}\n        />\n      </GestureHandlerRootView>\n    </SafeAreaProvider>\n  );\n}"]},"metadata":{},"sourceType":"module"}