{"ast":null,"code":"import { useEffect, useRef } from 'react';\nexport function usePrevious(value) {\n  var ref = useRef();\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}","map":{"version":3,"sources":["usePrevious.ts"],"names":["ref","useRef","useEffect"],"mappings":"AAAA,SAAA,SAAA,EAAA,MAAA,QAAA,OAAA;AAOA,OAAO,SAAA,WAAA,CAAA,KAAA,EAAmD;AACxD,MAAMA,GAAG,GAAGC,MAAZ,EAAA;AACAC,EAAAA,SAAS,CAAC,YAAM;AACdF,IAAAA,GAAG,CAAHA,OAAAA,GAAAA,KAAAA;AADO,GAAA,EAEN,CAFHE,KAEG,CAFM,CAATA;AAGA,SAAOF,GAAG,CAAV,OAAA;AACD","sourcesContent":["import { useEffect, useRef } from 'react';\n\n/**\n * UsePrevious returns the previous value of a given value.\n * @param {any} value - any\n * @returns The previous value of the input value.\n */\nexport function usePrevious<T>(value: any): T | undefined {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n"]},"metadata":{},"sourceType":"module"}