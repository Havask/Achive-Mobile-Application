{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport styled from \"styled-components/native\";\nimport Text from \"../../../components/Text.js\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { FirebaseContext } from \"../../../context/FirebaseContext\";\nimport { UserContext } from \"../../../context/UserContext\";\nimport { GroupContext } from \"../../../context/GroupContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default AddTaskScreen = function AddTaskScreen(_ref) {\n  var navigation = _ref.navigation;\n  var firebase = useContext(FirebaseContext);\n\n  var _useContext = useContext(UserContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      _ = _useContext2[0],\n      setUser = _useContext2[1];\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      Groupname = _useState2[0],\n      setGroupName = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Task = _useState4[0],\n      setTask = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useContext3 = useContext(GroupContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      Group = _useContext4[0],\n      setGroup = _useContext4[1];\n\n  var AddtaskHandler = function AddtaskHandler(enteredText) {};\n\n  var CreateNewGroup = function CreateNewGroup() {\n    return _regeneratorRuntime.async(function CreateNewGroup$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(firebase.CreateGroup(Groupname, Members));\n\n          case 2:\n            navigation.push(\"Group\");\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(Container, {\n    children: _jsx(ScrollView, {\n      children: _jsxs(KeyboardAvoidingView, {\n        children: [_jsx(Main, {\n          children: _jsx(Text, {\n            title: true,\n            semi: true,\n            center: true,\n            color: Group.color,\n            children: \"Add Task:\"\n          })\n        }), _jsx(Auth, {\n          children: _jsxs(AuthContainer, {\n            children: [_jsx(AuthTitle, {\n              children: \"Task Name\"\n            }), _jsx(AuthField, {\n              autocorrect: false,\n              onChangeText: AddtaskHandler,\n              value: Task\n            })]\n          })\n        }), _jsx(SignUpContainer, {\n          onPress: CreateNewGroup,\n          disable: loading,\n          color: Group.color,\n          children: loading ? _jsx(Loading, {}) : _jsx(Text, {\n            bold: true,\n            center: true,\n            color: \"#ffffff\",\n            children: \"Create Group\"\n          })\n        })]\n      })\n    })\n  });\n};\nvar Container = styled.KeyboardAvoidingView(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n    flex: 1; \\n\"])));\nvar Main = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  margin-top: 80px; \\n  margin-bottom: 50px; \\n\"])));\nvar Auth = styled.View(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  margin: 16px 32px 32px; \\n\"])));\nvar AuthContainer = styled.View(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 32px;\\n\"])));\nvar AuthTitle = styled(Text)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n  color: #8e93a1;\\n  font-size: 12px; \\n  text-transform: uppercase; \\n  font-weight: 300; \\n\"])));\nvar AuthField = styled.TextInput(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n  border-bottom-color: #8e93a1; \\n  border-bottom-width: 1px;\\n  height: 48px; \\n\"])));\nvar SignUpContainer = styled.TouchableOpacity(_templateObject7 || (_templateObject7 = _taggedTemplateLiteralLoose([\"\\n  margin: 0 32px; \\n  height: 48px; \\n  align-items: center; \\n  justify-content: center; \\n  background-color: \", \";\\n  border-radius: 6px;\\n\"])), function (props) {\n  return props.color;\n});\nvar Loading = styled.ActivityIndicator.attrs(function (props) {\n  return {\n    color: \"#fffffff\",\n    size: \"small\"\n  };\n})(_templateObject8 || (_templateObject8 = _taggedTemplateLiteralLoose([\"\"])));","map":{"version":3,"sources":["/Users/havardskjaerstein/Desktop/Achive/screens/GroupTab/GroupScreens/AddTaskScreen.js"],"names":["React","useState","useContext","useEffect","styled","Text","FirebaseContext","UserContext","GroupContext","AddTaskScreen","navigation","firebase","_","setUser","Groupname","setGroupName","Task","setTask","loading","setLoading","Group","setGroup","AddtaskHandler","enteredText","CreateNewGroup","CreateGroup","Members","push","color","Container","KeyboardAvoidingView","Main","View","Auth","AuthContainer","AuthTitle","AuthField","TextInput","SignUpContainer","TouchableOpacity","props","Loading","ActivityIndicator","attrs","size"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from \"react\";\nimport styled from \"styled-components/native\"; \nimport Text from \"../../../components/Text.js\";\nimport { KeyboardAvoidingView, ScrollView} from \"react-native\";\nimport {FirebaseContext} from \"../../../context/FirebaseContext\";\nimport {UserContext} from \"../../../context/UserContext\";\nimport {GroupContext} from \"../../../context/GroupContext\";\n\n\nexport default AddTaskScreen = ({navigation}) => {\n\n  const firebase = useContext(FirebaseContext); \n  const [_, setUser] = useContext(UserContext); \n  const [Groupname, setGroupName] = useState(\"\"); \n  const [Task, setTask] = useState([]); \n  const [loading, setLoading] = useState(false); \n  const [Group, setGroup] = useContext(GroupContext); \n\n  const AddtaskHandler = (enteredText) =>{\n\n  };\n\n  const CreateNewGroup = async () => {\n\n    await firebase.CreateGroup(Groupname, Members); \n    navigation.push(\"Group\"); \n  };\n\n  return(\n    <Container>\n      <ScrollView>\n      <KeyboardAvoidingView>\n       <Main>\n         <Text title semi center color={Group.color}>\n              Add Task:\n         </Text>\n        </Main>\n\n        <Auth>\n          <AuthContainer>\n            <AuthTitle>Task Name</AuthTitle>\n            <AuthField \n              autocorrect={false} \n              onChangeText={AddtaskHandler}\n              value={Task}\n            />\n          </AuthContainer>\n\n        </Auth>\n        \n        <SignUpContainer onPress={CreateNewGroup} disable={loading} color={Group.color}>\n          {loading ? (<Loading/>) : (\n          <Text bold center color=\"#ffffff\">\n            Create Group</Text>\n          )}\n        </SignUpContainer>\n\n        </KeyboardAvoidingView>\n      </ScrollView>\n     </Container>\n    );\n}\n\nconst Container = styled.KeyboardAvoidingView`\n    flex: 1; \n`;\n\nconst Main = styled.View`\n  margin-top: 80px; \n  margin-bottom: 50px; \n`;\n\nconst Auth = styled.View`\n  margin: 16px 32px 32px; \n`; \n\nconst AuthContainer = styled.View`\n  margin-bottom: 32px;\n`; \n\nconst AuthTitle = styled(Text)`\n  color: #8e93a1;\n  font-size: 12px; \n  text-transform: uppercase; \n  font-weight: 300; \n`; \n\nconst AuthField = styled.TextInput`\n  border-bottom-color: #8e93a1; \n  border-bottom-width: 1px;\n  height: 48px; \n`; \n\nconst SignUpContainer = styled.TouchableOpacity`\n  margin: 0 32px; \n  height: 48px; \n  align-items: center; \n  justify-content: center; \n  background-color: ${props => props.color};\n  border-radius: 6px;\n`;\n\n\nconst Loading = styled.ActivityIndicator.attrs(props => ({\n  color: \"#fffffff\",\n  size: \"small\", \n}))``; \n\n"]},"metadata":{},"sourceType":"module"}