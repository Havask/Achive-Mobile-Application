{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, createContext } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GroupContext = createContext([{}, function () {}]);\n\nvar GroupProvider = function GroupProvider(props) {\n  var _useState = useState({\n    groupname: \"\",\n    groupID: \"\",\n    color: \"\",\n    members: [],\n    GroupPhotoUrl: \"default\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  return _jsx(GroupContext.Provider, {\n    value: [state, setState],\n    children: props.children\n  });\n};\n\nexport { GroupContext, GroupProvider };","map":{"version":3,"sources":["/Users/havardskjaerstein/Desktop/Achive/context/GroupContext.js"],"names":["React","useState","createContext","GroupContext","GroupProvider","props","groupname","groupID","color","members","GroupPhotoUrl","state","setState","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,aAAzB,QAA6C,OAA7C;;AAEA,IAAMC,YAAY,GAAGD,aAAa,CAAC,CAAC,EAAD,EAAK,YAAM,CAAE,CAAb,CAAD,CAAlC;;AAEA,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC7B,kBAA0BJ,QAAQ,CAAC;AAC/BK,IAAAA,SAAS,EAAE,EADoB;AAE/BC,IAAAA,OAAO,EAAE,EAFsB;AAG/BC,IAAAA,KAAK,EAAE,EAHwB;AAI/BC,IAAAA,OAAO,EAAE,EAJsB;AAK/BC,IAAAA,aAAa,EAAE;AALgB,GAAD,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAQA,SAAO,KAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE,CAACD,KAAD,EAAQC,QAAR,CAA9B;AAAA,cAAkDP,KAAK,CAACQ;AAAxD,IAAP;AACH,CAVD;;AAYA,SAAQV,YAAR,EAAsBC,aAAtB","sourcesContent":["import React, {useState, createContext} from \"react\"; \n\nconst GroupContext = createContext([{}, () => {}]); \n\nconst GroupProvider = (props) => {\n    const [state, setState] = useState({\n        groupname: \"\", \n        groupID: \"\", \n        color: \"\", \n        members: [], \n        GroupPhotoUrl: \"default\"\n    })\n\n    return <GroupContext.Provider value={[state, setState]}>{props.children}</GroupContext.Provider>\n}\n\nexport {GroupContext, GroupProvider}\n"]},"metadata":{},"sourceType":"module"}