{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport dayjs from 'dayjs';\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { Footer } from \"./Footer\";\nimport { Header } from \"./Header\";\nimport { List } from \"./List\";\nexport var PropsContext = React.createContext({});\nexport var Chatty = React.forwardRef(function (props, ref) {\n  var listRef = useRef();\n  var messages = props.messages;\n  useEffect(function () {\n    var listener = Keyboard.addListener('keyboardDidShow', function () {\n      if (listRef.current) {\n        var _listRef$current;\n\n        (_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : _listRef$current.scrollToEnd(true);\n      } else if (ref) {\n        var _ref$current;\n\n        (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.scrollToEnd(true);\n      } else {\n        console.warn('No ref found');\n      }\n    });\n    return function () {\n      listener.remove();\n    };\n  }, [ref]);\n  useEffect(function () {\n    if (props !== null && props !== void 0 && props.setDateLocale) {\n      dayjs.locale(props.setDateLocale);\n    }\n  }, [props.setDateLocale]);\n  var renderLoading = useCallback(function () {\n    return React.createElement(View, {\n      style: [styles.loadingContainer]\n    }, React.createElement(ActivityIndicator, null));\n  }, []);\n  return React.createElement(SafeAreaView, null, React.createElement(PropsContext.Provider, {\n    value: props\n  }, props !== null && props !== void 0 && props.renderHeader ? props.renderHeader(props.headerProps) : React.createElement(Header, props.headerProps), React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.select({\n      android: 'position',\n      ios: 'position'\n    }),\n    keyboardVerticalOffset: Platform.select({\n      android: 20\n    })\n  }, props.messages.length < 1 ? renderLoading() : React.createElement(React.Fragment, null, React.createElement(List, _extends({\n    data: messages,\n    ref: ref !== null && ref !== void 0 ? ref : listRef,\n    rowRenderer: props !== null && props !== void 0 && props.renderBubble ? props.renderBubble : undefined\n  }, props.listProps)), props !== null && props !== void 0 && props.renderFooter ? props.renderFooter(props.footerProps) : React.createElement(Footer, _extends({}, props.footerProps, {\n    replyingTo: props.replyingTo\n  }))))));\n});\nexport var styles = StyleSheet.create({\n  loadingContainer: {\n    height: '90%',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["Chatty.tsx"],"names":["PropsContext","React","Chatty","listRef","useRef","messages","useEffect","listener","console","props","dayjs","renderLoading","useCallback","styles","android","ios","ref","undefined","replyingTo","loadingContainer","height","justifyContent","alignContent","alignItems"],"mappings":"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","sourcesContent":["import dayjs from 'dayjs';\nimport type { ForwardedRef } from 'react';\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport {\n  ActivityIndicator,\n  Keyboard,\n  KeyboardAvoidingView,\n  Platform,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { Footer } from './Footer';\nimport { Header } from './Header';\nimport { List } from './List';\nimport type { IChatty, ListRef } from './types/Chatty.types';\n\nexport const PropsContext = React.createContext<IChatty>({} as IChatty);\n\nexport const Chatty = React.forwardRef(\n  (props: IChatty, ref: ForwardedRef<ListRef>) => {\n    const listRef = useRef<ListRef>();\n    const { messages } = props;\n\n    /* This is a way to scroll to the end of the list when the keyboard is shown. */\n    useEffect(() => {\n      const listener = Keyboard.addListener('keyboardDidShow', () => {\n        if (listRef.current) {\n          listRef.current?.scrollToEnd(true);\n        } else if (ref) {\n          //@ts-ignore\n          ref.current?.scrollToEnd(true);\n        } else {\n          console.warn('No ref found');\n        }\n      });\n\n      return () => {\n        listener.remove();\n      };\n    }, [ref]);\n\n    useEffect(() => {\n      if (props?.setDateLocale) {\n        dayjs.locale(props.setDateLocale);\n      }\n    }, [props.setDateLocale]);\n\n    const renderLoading = useCallback(() => {\n      return (\n        <View style={[styles.loadingContainer]}>\n          <ActivityIndicator />\n        </View>\n      );\n    }, []);\n\n    return (\n      <SafeAreaView>\n        <PropsContext.Provider value={props}>\n          {props?.renderHeader ? (\n            props.renderHeader(props.headerProps)\n          ) : (\n            <Header {...props.headerProps} />\n          )}\n          <KeyboardAvoidingView\n            behavior={Platform.select({\n              android: 'position',\n              ios: 'position',\n            })}\n            keyboardVerticalOffset={Platform.select({\n              android: 20,\n            })}\n          >\n            {props.messages.length < 1 ? (\n              renderLoading()\n            ) : (\n              <>\n                <List\n                  data={messages}\n                  //@ts-ignore\n                  ref={ref ?? listRef}\n                  rowRenderer={\n                    props?.renderBubble ? props.renderBubble : undefined\n                  }\n                  {...props.listProps}\n                />\n                {props?.renderFooter ? (\n                  props.renderFooter(props.footerProps)\n                ) : (\n                  <Footer\n                    {...props.footerProps}\n                    replyingTo={props.replyingTo}\n                  />\n                )}\n              </>\n            )}\n          </KeyboardAvoidingView>\n        </PropsContext.Provider>\n      </SafeAreaView>\n    );\n  }\n);\n\nexport const styles = StyleSheet.create({\n  loadingContainer: {\n    height: '90%',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}