{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext } from \"react\";\nimport styled from \"styled-components/native\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"../../components/Text.js\";\nimport { FirebaseContext } from \"../../context/FirebaseContext\";\nimport { UserContext } from \"../../context/UserContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default LogInScreen = function LogInScreen(_ref) {\n  var navigation = _ref.navigation;\n  var firebase = useContext(FirebaseContext);\n\n  var _useContext = useContext(UserContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      _ = _useContext2[0],\n      setUser = _useContext2[1];\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var LogIn = function LogIn() {\n    var uid, userInfo;\n    return _regeneratorRuntime.async(function LogIn$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(firebase.SignInUser(email, password));\n\n          case 4:\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(firebase.getCurrentUser().uid);\n\n          case 6:\n            uid = _context.sent;\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(firebase.getUserInfo(uid));\n\n          case 9:\n            userInfo = _context.sent;\n            setUser({\n              username: userInfo.username,\n              email: userInfo.email,\n              uid: uid,\n              profilePhotoUrl: userInfo.profilePhotoUrl,\n              isLoggedIn: true\n            });\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](1);\n            alert(\"Unable to find this account\");\n\n          case 16:\n            _context.prev = 16;\n            setLoading(false);\n            return _context.finish(16);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 13, 16, 19]], Promise);\n  };\n\n  return _jsx(Container, {\n    children: _jsx(Main, {\n      children: _jsx(ScrollView, {\n        children: _jsxs(KeyboardAvoidingView, {\n          children: [_jsx(AchiveLogo, {\n            source: require(\"../../logo/logo.png\")\n          }), _jsxs(Auth, {\n            children: [_jsxs(AuthContainer, {\n              children: [_jsx(AuthTitle, {\n                children: \"Email address\"\n              }), _jsx(AuthField, {\n                autoCapitalize: \"none\",\n                autoCompleteType: \"email\",\n                autocorrect: false,\n                autoFocus: true,\n                keyboardType: \"email-address\",\n                value: email,\n                onChangeText: function onChangeText(email) {\n                  return setEmail(email.trim());\n                }\n              })]\n            }), _jsxs(AuthContainer, {\n              children: [_jsx(AuthTitle, {\n                children: \"password\"\n              }), _jsx(AuthField, {\n                autoCapitalize: \"none\",\n                autoCompleteType: \"password\",\n                autocorrect: false,\n                autoFocus: true,\n                secureTextEntry: true,\n                value: password,\n                onChangeText: function onChangeText(password) {\n                  return setPassword(password.trim());\n                }\n              })]\n            })]\n          }), _jsx(SignInContainer, {\n            onPress: LogIn,\n            disable: loading,\n            children: loading ? _jsx(Loading, {}) : _jsx(Text, {\n              bold: true,\n              center: true,\n              color: \"#ffffff\",\n              children: \"Sign In\"\n            })\n          }), _jsx(SignUp, {\n            onPress: function onPress() {\n              return navigation.push(\"SignUpScreen\");\n            },\n            children: _jsxs(Text, {\n              small: true,\n              center: true,\n              children: [\"New to Achive? \", _jsx(Text, {\n                bold: true,\n                color: \"#88d498\",\n                children: \"Sign Up\"\n              })]\n            })\n          })]\n        })\n      })\n    })\n  });\n};\nvar AchiveLogo = styled.Image(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n    align-items: center; \\n    justify-content: center; \\n    width: 200px;\\n    height: 100px;\\n    margin: 0px 90px 30px; \\n\"])));\nvar Container = styled.ScrollView(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n    flex: 1; \\n\"])));\nvar Main = styled.View(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  margin-top: 180px; \\n\"])));\nvar Auth = styled.View(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  margin: 50px 32px 32px; \\n\"])));\nvar AuthContainer = styled.View(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 32px;\\n\"])));\nvar AuthTitle = styled(Text)(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n  color: #8e93a1;\\n  font-size: 12px; \\n  text-transform: uppercase; \\n  font-weight: 300; \\n\"])));\nvar AuthField = styled.TextInput(_templateObject7 || (_templateObject7 = _taggedTemplateLiteralLoose([\"\\n  border-bottom-color: #8e93a1; \\n  border-bottom-width: 1px;\\n  height: 48px; \\n\"])));\nvar SignInContainer = styled.TouchableOpacity(_templateObject8 || (_templateObject8 = _taggedTemplateLiteralLoose([\"\\n  margin: 0 32px; \\n  height: 48px; \\n  align-items: center; \\n  justify-content: center; \\n  background-color: #88d498;\\n  border-radius: 6px;\\n\"])));\nvar SignUp = styled.TouchableOpacity(_templateObject9 || (_templateObject9 = _taggedTemplateLiteralLoose([\"\\n  margin-top: 16px; \\n\"])));\nvar Loading = styled.ActivityIndicator.attrs(function (props) {\n  return {\n    color: \"#fffffff\",\n    size: \"small\"\n  };\n})(_templateObject10 || (_templateObject10 = _taggedTemplateLiteralLoose([\"\"])));","map":{"version":3,"sources":["/home/havard/Desktop/Achive/screens/AuthScreen/logInScreen.js"],"names":["React","useState","useContext","styled","Text","FirebaseContext","UserContext","LogInScreen","navigation","firebase","_","setUser","email","setEmail","password","setPassword","loading","setLoading","LogIn","SignInUser","getCurrentUser","uid","getUserInfo","userInfo","username","profilePhotoUrl","isLoggedIn","alert","require","trim","push","AchiveLogo","Image","Container","ScrollView","Main","View","Auth","AuthContainer","AuthTitle","AuthField","TextInput","SignInContainer","TouchableOpacity","SignUp","Loading","ActivityIndicator","attrs","props","color","size"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from \"react\";\nimport styled from \"styled-components/native\"; \nimport { KeyboardAvoidingView, ScrollView} from \"react-native\";\nimport Text from \"../../components/Text.js\";\nimport {FirebaseContext} from \"../../context/FirebaseContext\";\nimport {UserContext} from \"../../context/UserContext\";\n\nexport default LogInScreen = ({navigation}) => {\n\n  const firebase = useContext(FirebaseContext); \n  const [_, setUser] = useContext(UserContext); \n\n  const [email, setEmail] = useState(); \n  const [password, setPassword] = useState(); \n  const [loading, setLoading] = useState(false); \n\n  const LogIn = async () => {\n    setLoading(true);\n\n    try{\n      await firebase.SignInUser(email, password);\n      const uid = await firebase.getCurrentUser().uid; \n      const userInfo = await firebase.getUserInfo(uid)\n\n      setUser({\n        username: userInfo.username,\n        email: userInfo.email, \n        uid, \n        profilePhotoUrl: userInfo.profilePhotoUrl,\n        isLoggedIn: true, \n      })\n    }catch(error){\n      alert(\"Unable to find this account\")\n    }finally{\n      setLoading(false)\n    }\n  };\n\n    return(\n      <Container>\n          <Main>\n        <ScrollView>\n        <KeyboardAvoidingView>\n            <AchiveLogo source={require(\"../../logo/logo.png\")} />\n\n            <Auth>\n              <AuthContainer>\n                <AuthTitle>Email address</AuthTitle>\n                <AuthField \n                  autoCapitalize=\"none\" \n                  autoCompleteType=\"email\" \n                  autocorrect={false} \n                  autoFocus={true} \n                  keyboardType=\"email-address\"\n                  value={email}\n                  onChangeText={email => setEmail(email.trim())}\n                />\n              </AuthContainer>\n\n              <AuthContainer>\n                <AuthTitle>password</AuthTitle>\n                <AuthField \n                  autoCapitalize=\"none\" \n                  autoCompleteType=\"password\" \n                  autocorrect={false} \n                  autoFocus={true} \n                  secureTextEntry={true}\n                  value={password}\n                  onChangeText={password => setPassword(password.trim())}\n                  />\n              </AuthContainer>\n            </Auth>\n\n            <SignInContainer onPress={LogIn} disable={loading}>\n              {loading ? (<Loading/>) : (\n              <Text bold center color=\"#ffffff\">\n                Sign In</Text>\n              )}\n            </SignInContainer>\n\n            <SignUp onPress={() => navigation.push(\"SignUpScreen\")}>\n              <Text small center> \n                  New to Achive? <Text bold color=\"#88d498\">Sign Up</Text></Text>\n            </SignUp>\n          </KeyboardAvoidingView>\n        </ScrollView>\n          </Main>\n      </Container>\n    );\n}\n\nconst AchiveLogo = styled.Image`\n    align-items: center; \n    justify-content: center; \n    width: 200px;\n    height: 100px;\n    margin: 0px 90px 30px; \n`;\n\nconst Container = styled.ScrollView`\n    flex: 1; \n`;\n\nconst Main = styled.View`\n  margin-top: 180px; \n`;\n\n\nconst Auth = styled.View`\n  margin: 50px 32px 32px; \n`; \n\nconst AuthContainer = styled.View`\n  margin-bottom: 32px;\n`; \n\nconst AuthTitle = styled(Text)`\n  color: #8e93a1;\n  font-size: 12px; \n  text-transform: uppercase; \n  font-weight: 300; \n`; \n\nconst AuthField = styled.TextInput`\n  border-bottom-color: #8e93a1; \n  border-bottom-width: 1px;\n  height: 48px; \n`; \n\nconst SignInContainer = styled.TouchableOpacity`\n  margin: 0 32px; \n  height: 48px; \n  align-items: center; \n  justify-content: center; \n  background-color: #88d498;\n  border-radius: 6px;\n`;\n\nconst SignUp = styled.TouchableOpacity`\n  margin-top: 16px; \n`; \n\nconst Loading = styled.ActivityIndicator.attrs(props => ({\n  color: \"#fffffff\",\n  size: \"small\", \n}))``; \n\n"]},"metadata":{},"sourceType":"module"}