{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useCallback, useContext, useMemo, useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler';\nimport Animated, { FadeInDown, FadeOutDown } from 'react-native-reanimated';\nimport { PropsContext } from \"./Chatty\";\nimport { MediaType } from \"./types/Chatty.types\";\nimport { selectImage } from \"./utils/imagePicker\";\n\nfunction _Footer(props) {\n  var _props$mentionStyles3, _props$mentionStyles4, _props$replyStyles, _props$replyStyles2, _props$replyStyles3, _props$value, _props$placeholder;\n\n  var propsContext = useContext(PropsContext);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var _useState3 = useState(['JohnDoe']),\n      _useState4 = _slicedToArray(_useState3, 1),\n      mentions = _useState4[0];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      foundedMentions = _useState6[0],\n      setFoundedMentions = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      image = _useState8[0],\n      setImage = _useState8[1];\n\n  var cuttedText = useMemo(function () {\n    if (props.replyingTo) {\n      return props.replyingTo.text.slice(0, 100) + '...';\n    }\n\n    return null;\n  }, [props === null || props === void 0 ? void 0 : props.replyingTo]);\n  var onChangeText = useCallback(function (text) {\n    var foundedMentions = [];\n    text.split(' ').forEach(function (word) {\n      foundedMentions.push.apply(foundedMentions, _toConsumableArray(mentions.filter(function (mention) {\n        console.log(text, mention.indexOf(word));\n        return mention.toLowerCase().indexOf(word.toLowerCase().replace('@', '')) != -1;\n      })));\n    });\n    setFoundedMentions(foundedMentions);\n    props.onChangeText(text);\n    setMessage(text);\n  }, [props, mentions]);\n  var onPressSend = useCallback(function () {\n    props.onPressSend({\n      text: message,\n      repliedTo: props.replyingTo,\n      media: image\n    });\n    setMessage('');\n    setImage([]);\n  }, [message, props, image]);\n\n  var onPressMention = function onPressMention(target) {\n    setMessage(function (prev) {\n      var messagesArray = prev.split(' ');\n      var lastMessageIndex = messagesArray.length - 1;\n      var lastMessage = messagesArray[lastMessageIndex];\n      prev = prev.replace(lastMessage, '@' + target);\n      return prev;\n    });\n    setFoundedMentions([]);\n  };\n\n  var renderMenu = useCallback(function () {\n    if (message && foundedMentions.length > 0) {\n      var splittedWords = message.split(' ');\n\n      if (splittedWords[splittedWords.length - 1].startsWith('@')) {\n        var _props$mentionStyles$, _props$mentionStyles;\n\n        return React.createElement(Animated.View, {\n          entering: FadeInDown,\n          exiting: FadeOutDown,\n          style: (_props$mentionStyles$ = (_props$mentionStyles = props.mentionStyles) === null || _props$mentionStyles === void 0 ? void 0 : _props$mentionStyles.containerStyle) !== null && _props$mentionStyles$ !== void 0 ? _props$mentionStyles$ : styles.mentionContainer\n        }, foundedMentions.map(function (mention) {\n          var _props$mentionStyles$2, _props$mentionStyles2;\n\n          return React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              return onPressMention(mention);\n            }\n          }, React.createElement(Text, {\n            style: (_props$mentionStyles$2 = (_props$mentionStyles2 = props.mentionStyles) === null || _props$mentionStyles2 === void 0 ? void 0 : _props$mentionStyles2.labelStyle) !== null && _props$mentionStyles$2 !== void 0 ? _props$mentionStyles$2 : styles.mentionLabel\n          }, \"@\", mention));\n        }));\n      }\n    }\n\n    return null;\n  }, [foundedMentions, message, (_props$mentionStyles3 = props.mentionStyles) === null || _props$mentionStyles3 === void 0 ? void 0 : _props$mentionStyles3.containerStyle, (_props$mentionStyles4 = props.mentionStyles) === null || _props$mentionStyles4 === void 0 ? void 0 : _props$mentionStyles4.labelStyle]);\n\n  var _onKeyPress = useCallback(function (key) {\n    if (key === ' ') {\n      setFoundedMentions([]);\n    }\n  }, []);\n\n  var onPressImage = useCallback(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            selectImage().then(function (r) {\n              var assets = {\n                type: MediaType.Image,\n                uri: r !== null && r !== void 0 && r.assets ? r.assets[0].uri : r.uri,\n                base64: r !== null && r !== void 0 && r.assets ? r.assets[0].base64 : r.base64\n              };\n\n              if (image) {\n                setImage([].concat(_toConsumableArray(image), [assets]));\n              } else {\n                setImage([assets]);\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [image]);\n  return React.createElement(View, {\n    style: image && image.length > 0 && {\n      position: 'absolute',\n      bottom: -70,\n      backgroundColor: '#fff'\n    }\n  }, props.replyingTo && React.createElement(Animated.View, {\n    entering: FadeInDown,\n    exiting: FadeOutDown,\n    style: [styles.reply, (_props$replyStyles = props.replyStyles) === null || _props$replyStyles === void 0 ? void 0 : _props$replyStyles.containerStyle]\n  }, React.createElement(View, {\n    style: styles.replyBody\n  }, React.createElement(Text, {\n    style: [styles.replyUsername, (_props$replyStyles2 = props.replyStyles) === null || _props$replyStyles2 === void 0 ? void 0 : _props$replyStyles2.usernameStyle]\n  }, props.replyingTo.user.username), React.createElement(Text, {\n    style: (_props$replyStyles3 = props.replyStyles) === null || _props$replyStyles3 === void 0 ? void 0 : _props$replyStyles3.labelStyle\n  }, cuttedText)), propsContext.footerProps.closeReplyButton ? propsContext.footerProps.closeReplyButton(props) : React.createElement(Button, {\n    title: \"cancel\",\n    onPress: props.onPressCancelReply\n  })), renderMenu(), React.createElement(View, {\n    style: [styles.container, props.containerStyle]\n  }, image && image.length > 0 && React.createElement(ScrollView, {\n    horizontal: true,\n    pagingEnabled: true\n  }, image.map(function (_image) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return setImage(function (prev) {\n          return prev && prev.filter(function (v) {\n            return v !== _image;\n          });\n        });\n      },\n      style: styles.media\n    }, React.createElement(ImageBackground, {\n      style: [styles.mediaOverlay, {\n        marginBottom: 15\n      }],\n      source: {\n        uri: _image.uri\n      },\n      imageStyle: {\n        borderRadius: 15\n      }\n    }, React.createElement(View, {\n      style: styles.media\n    }, React.createElement(View, {\n      style: styles.imageClearButton\n    }, React.createElement(Text, {\n      style: {\n        color: '#fff',\n        textAlign: 'center'\n      }\n    }, \"x\")))));\n  }), React.createElement(TouchableOpacity, {\n    onPress: onPressImage\n  }, React.createElement(View, {\n    style: styles.addMore\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      color: '#ccc'\n    }\n  }, \"+\")))), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    }\n  }, React.createElement(TextInput, {\n    value: (_props$value = props.value) !== null && _props$value !== void 0 ? _props$value : message,\n    onChangeText: onChangeText,\n    style: [propsContext !== null && propsContext !== void 0 && propsContext.enableImageUploads ? styles.shortedTextInput : styles.textInput, props === null || props === void 0 ? void 0 : props.inputStyle],\n    placeholder: (_props$placeholder = props === null || props === void 0 ? void 0 : props.placeholder) !== null && _props$placeholder !== void 0 ? _props$placeholder : 'Type a message...',\n    onKeyPress: function onKeyPress(e) {\n      return _onKeyPress(e.nativeEvent.key);\n    }\n  }), (propsContext === null || propsContext === void 0 ? void 0 : propsContext.enableImageUploads) && React.createElement(React.Fragment, null, props !== null && props !== void 0 && props.renderImageAction ? props.renderImageAction({\n    onPressImage: onPressImage\n  }) : React.createElement(TouchableOpacity, {\n    onPress: onPressImage,\n    style: {\n      paddingHorizontal: 10\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20\n    }\n  }, \"\\uD83D\\uDCF7\"))), props !== null && props !== void 0 && props.sendButton ? props.sendButton({\n    onPressSend: onPressSend\n  }) : React.createElement(Button, {\n    title: \"Send\",\n    onPress: onPressSend,\n    color: \"#0084ff\"\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    padding: 10\n  },\n  textInput: {\n    padding: 10,\n    width: '80%',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  },\n  shortedTextInput: {\n    padding: 10,\n    width: '70%',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  },\n  button: {\n    width: '20%',\n    backgroundColor: '#fcba03'\n  },\n  reply: {\n    flexDirection: 'row',\n    padding: 10,\n    backgroundColor: '#f5f5f5',\n    borderLeftColor: '#c8faaf',\n    borderLeftWidth: 6\n  },\n  replyBody: {\n    flex: 1\n  },\n  replyUsername: {\n    fontWeight: 'bold'\n  },\n  addMore: {\n    width: 100,\n    height: 100,\n    borderWidth: 1,\n    borderStyle: 'dashed',\n    borderRadius: 15,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: '#ccc'\n  },\n  imageClearButton: {\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    width: 18,\n    height: 18,\n    marginLeft: 10,\n    marginTop: 5,\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignContent: 'center'\n  },\n  media: {\n    width: 110,\n    height: 100,\n    borderRadius: 15,\n    marginRight: 10,\n    marginBottom: 10\n  },\n  mediaOverlay: {\n    width: 100,\n    height: 100,\n    backgroundColor: 'rgba(0,0,0,0.2)',\n    borderRadius: 15\n  },\n  mentionContainer: {\n    position: 'absolute',\n    bottom: 50,\n    width: '100%',\n    padding: 10,\n    backgroundColor: '#E5EEFA'\n  },\n  mentionLabel: {\n    padding: 10,\n    color: '#1939B7'\n  }\n});\nexport var Footer = React.memo(_Footer);","map":{"version":3,"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,EAAyCC,OAAzC,EAAkDC,QAAlD,QAAkE,OAAlE;;;;;;;AASA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,8BAA7C;AACA,OAAOC,QAAP,IAAmBC,UAAnB,EAA+BC,WAA/B,QAAkD,yBAAlD;AACA,SAASC,YAAT;AACA,SAA+BC,SAA/B;AACA,SAASC,WAAT;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAsC;EAAA;;EACpC,IAAMC,YAAY,GAAGb,UAAU,CAACQ,YAAD,CAA/B;;EACA,gBAA8BN,QAAQ,CAAS,EAAT,CAAtC;EAAA;EAAA,IAAOY,OAAP;EAAA,IAAgBC,UAAhB;;EACA,iBAAmBb,QAAQ,CAAC,CAAC,SAAD,CAAD,CAA3B;EAAA;EAAA,IAAOc,QAAP;;EACA,iBAA8Cd,QAAQ,CAAW,EAAX,CAAtD;EAAA;EAAA,IAAOe,eAAP;EAAA,IAAwBC,kBAAxB;;EACA,iBAA0BhB,QAAQ,EAAlC;EAAA;EAAA,IAAOiB,KAAP;EAAA,IAAcC,QAAd;;EAEA,IAAMC,UAAU,GAAGpB,OAAO,CAAC,YAAM;IAC/B,IAAIW,KAAK,CAACU,UAAV,EAAsB;MACpB,OAAOV,KAAK,CAACU,UAANV,CAAiBW,IAAjBX,CAAsBY,KAAtBZ,CAA4B,CAA5BA,EAA+B,GAA/BA,IAAsC,KAA7C;IACD;;IAED,OAAO,IAAP;EALwB,GAMvB,CAACA,KAAD,SAACA,SAAD,WAACA,GAAD,MAACA,QAAK,CAAEU,UAAR,CANuB,CAA1B;EAQA,IAAMG,YAAY,GAAG1B,WAAW,CAC7BwB,cAAD,EAAkB;IAChB,IAAMN,eAAyB,GAAG,EAAlC;IAGAM,IAAI,CAACG,KAALH,CAAW,GAAXA,EAAgBI,OAAhBJ,CAAyBK,cAAD,EAAU;MAChCX,eAAe,CAACY,IAAhBZ,sBAAe,qBAEVD,QAAQ,CAACc,MAATd,CAAiBe,iBAAD,EAAa;QAC9BC,OAAO,CAACC,GAARD,CAAYT,IAAZS,EAAkBD,OAAO,CAACG,OAARH,CAAgBH,IAAhBG,CAAlBC;QACA,OACED,OAAO,CACJI,WADHJ,GAEGG,OAFHH,CAEWH,IAAI,CAACO,WAALP,GAAmBQ,OAAnBR,CAA2B,GAA3BA,EAAgC,EAAhCA,CAFXG,KAEmD,CAAC,CAHtD;MAFC,EAFU,EAAfd;IADF;IAcAC,kBAAkB,CAACD,eAAD,CAAlBC;IAEAN,KAAK,CAACa,YAANb,CAAmBW,IAAnBX;IACAG,UAAU,CAACQ,IAAD,CAAVR;EAtB4B,GAwB9B,CAACH,KAAD,EAAQI,QAAR,CAxB8B,CAAhC;EA2BA,IAAMqB,WAAW,GAAGtC,WAAW,CAAC,YAAM;IACpCa,KAAK,CAACyB,WAANzB,CAAkB;MAChBW,IAAI,EAAET,OADU;MAEhBwB,SAAS,EAAE1B,KAAK,CAACU,UAFD;MAGhBiB,KAAK,EAAEpB;IAHS,CAAlBP;IAKAG,UAAU,CAAC,EAAD,CAAVA;IACAK,QAAQ,CAAC,EAAD,CAARA;EAP6B,GAQ5B,CAACN,OAAD,EAAUF,KAAV,EAAiBO,KAAjB,CAR4B,CAA/B;;EAUA,IAAMqB,cAAc,GAAIC,SAAlBD,cAAkBC,OAAD,EAAoB;IACzC1B,UAAU,CAAE2B,cAAD,EAAU;MACnB,IAAMC,aAAa,GAAGD,IAAI,CAAChB,KAALgB,CAAW,GAAXA,CAAtB;MACA,IAAME,gBAAgB,GAAGD,aAAa,CAACE,MAAdF,GAAuB,CAAhD;MACA,IAAMG,WAAW,GAAGH,aAAa,CAACC,gBAAD,CAAjC;MAEAF,IAAI,GAAGA,IAAI,CAACN,OAALM,CAAaI,WAAbJ,EAA0B,MAAMD,MAAhCC,CAAPA;MAEA,OAAOA,IAAP;IAPQ,EAAV3B;IAUAG,kBAAkB,CAAC,EAAD,CAAlBA;EAXF;;EAcA,IAAM6B,UAAU,GAAGhD,WAAW,CAAC,YAAM;IACnC,IAAIe,OAAO,IAAIG,eAAe,CAAC4B,MAAhB5B,GAAyB,CAAxC,EAA2C;MACzC,IAAM+B,aAAa,GAAGlC,OAAO,CAACY,KAARZ,CAAc,GAAdA,CAAtB;;MAEA,IAAIkC,aAAa,CAACA,aAAa,CAACH,MAAdG,GAAuB,CAAxB,CAAbA,CAAwCC,UAAxCD,CAAmD,GAAnDA,CAAJ,EAA6D;QAAA;;QAC3D,OACElD,oBAACO,QAAD,CAAU6C,IAAV;UACEC,QAAQ,EAAE7C,UADZ;UAEE8C,OAAO,EAAE7C,WAFX;UAGE8C,KAAK,mDACHzC,KAAK,CAAC0C,aADH,yDACHC,qBAAqBC,cADlB,yEACoCC,MAAM,CAACC;QAJlD,GAOGzC,eAAe,CAAC0C,GAAhB1C,CAAqBc,iBAAD;UAAA;;UAAA,OACnBjC,oBAACM,gBAAD;YAAkBwD,OAAO,EAAE;cAAA,OAAMpB,cAAc,CAACT,OAAD,CAApB;YAAA;UAA3B,GACEjC,oBAAC+D,IAAD;YACER,KAAK,qDAAEzC,KAAK,CAAC0C,aAAR,0DAAEQ,sBAAqBC,UAAvB,2EAAqCN,MAAM,CAACO;UADnD,QAGIjC,OAHJ,CADF,CADmB;QAApB,EAPH,CADF;MAmBD;IACF;;IAED,OAAO,IAAP;EA3B4B,GA4B3B,CACDd,eADC,EAEDH,OAFC,2BAGDF,KAAK,CAAC0C,aAHL,0DAGDW,sBAAqBT,cAHpB,2BAID5C,KAAK,CAAC0C,aAJL,0DAIDY,sBAAqBH,UAJpB,CA5B2B,CAA9B;;EAmCA,IAAMI,WAAU,GAAGpE,WAAW,CAAEqE,aAAD,EAAiB;IAC9C,IAAIA,GAAG,KAAK,GAAZ,EAAiB;MACflD,kBAAkB,CAAC,EAAD,CAAlBA;IACD;EAH2B,GAI3B,EAJ2B,CAA9B;;EAMA,IAAMmD,YAAY,GAAGtE,WAAW,CAAC;IAAA;MAAA;QAAA;UAAA;YAC/BW,WAAW,GAAG4D,IAAd5D,CAAoB6D,WAAD,EAAO;cACxB,IAAMC,MAAM,GAAG;gBACbC,IAAI,EAAEhE,SAAS,CAACiE,KADH;gBAEbC,GAAG,EAAEJ,CAAC,SAADA,KAAC,WAADA,KAAC,CAAEC,MAAHD,GAAYA,CAAC,CAACC,MAAFD,CAAS,CAATA,EAAYI,GAAxBJ,GAA8BA,CAAC,CAACI,GAFxB;gBAGbC,MAAM,EAAEL,CAAC,SAADA,KAAC,WAADA,KAAC,CAAEC,MAAHD,GAAYA,CAAC,CAACC,MAAFD,CAAS,CAATA,EAAYK,MAAxBL,GAAiCA,CAAC,CAACK;cAH9B,CAAf;;cAKA,IAAIzD,KAAJ,EAAW;gBACTC,QAAQ,8BAAKD,KAAL,IAAYqD,MAAZ,GAARpD;cADF,OAEO;gBACLA,QAAQ,CAAC,CAACoD,MAAD,CAAD,CAARpD;cACD;YAVH;;UAD+B;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAD,EAa7B,CAACD,KAAD,CAb6B,CAAhC;EAeA,OACErB,oBAACoD,IAAD;IACEG,KAAK,EACHlC,KAAK,IACLA,KAAK,CAAC0B,MAAN1B,GAAe,CADfA,IACoB;MAClB0D,QAAQ,EAAE,UADQ;MAElBC,MAAM,EAAE,CAAC,EAFS;MAGlBC,eAAe,EAAE;IAHC;EAHxB,GAUGnE,KAAK,CAACU,UAANV,IACCd,oBAACO,QAAD,CAAU6C,IAAV;IACEC,QAAQ,EAAE7C,UADZ;IAEE8C,OAAO,EAAE7C,WAFX;IAGE8C,KAAK,EAAE,CAACI,MAAM,CAACuB,KAAR,wBAAepE,KAAK,CAACqE,WAArB,uDAAeC,mBAAmB1B,cAAlC;EAHT,GAKE1D,oBAACoD,IAAD;IAAMG,KAAK,EAAEI,MAAM,CAAC0B;EAApB,GACErF,oBAAC+D,IAAD;IACER,KAAK,EAAE,CAACI,MAAM,CAAC2B,aAAR,yBAAuBxE,KAAK,CAACqE,WAA7B,wDAAuBI,oBAAmBC,aAA1C;EADT,GAGG1E,KAAK,CAACU,UAANV,CAAiB2E,IAAjB3E,CAAsB4E,QAHzB,CADF,EAME1F,oBAAC+D,IAAD;IAAMR,KAAK,yBAAEzC,KAAK,CAACqE,WAAR,wDAAEQ,oBAAmB1B;EAAhC,GAA6C1C,UAA7C,CANF,CALF,EAaGR,YAAY,CAAC6E,WAAb7E,CAAyB8E,gBAAzB9E,GACCA,YAAY,CAAC6E,WAAb7E,CAAyB8E,gBAAzB9E,CAA0CD,KAA1CC,CADDA,GAGCf,oBAAC8F,MAAD;IAAQC,KAAK,EAAC,QAAd;IAAuBjC,OAAO,EAAEhD,KAAK,CAACkF;EAAtC,EAhBJ,CAXJ,EAgCG/C,UAAU,EAhCb,EAkCEjD,oBAACoD,IAAD;IAAMG,KAAK,EAAE,CAACI,MAAM,CAACsC,SAAR,EAAmBnF,KAAK,CAAC4C,cAAzB;EAAb,GACGrC,KAAK,IAAIA,KAAK,CAAC0B,MAAN1B,GAAe,CAAxBA,IACCrB,oBAACK,UAAD;IAAY6F,UAAU,MAAtB;IAAuBC,aAAa;EAApC,GACG9E,KAAK,CAACwC,GAANxC,CAAW+E,gBAAD;IAAA,OACTpG,oBAACM,gBAAD;MACEwD,OAAO,EAAE;QAAA,OACPxC,QAAQ,CAAEsB,cAAD;UAAA,OAAUA,IAAI,IAAIA,IAAI,CAACZ,MAALY,CAAayD,WAAD;YAAA,OAAOA,CAAC,KAAKD,MAAb;UAAA,CAAZxD,CAAlB;QAAA,CAAD,CADD;MAAA,CADX;MAIEW,KAAK,EAAEI,MAAM,CAAClB;IAJhB,GAMEzC,oBAACsG,eAAD;MACE/C,KAAK,EAAE,CAACI,MAAM,CAAC4C,YAAR,EAAsB;QAAEC,YAAY,EAAE;MAAhB,CAAtB,CADT;MAEEC,MAAM,EAAE;QAAE5B,GAAG,EAAEuB,MAAM,CAACvB;MAAd,CAFV;MAGE6B,UAAU,EAAE;QACVC,YAAY,EAAE;MADJ;IAHd,GAOE3G,oBAACoD,IAAD;MAAMG,KAAK,EAAEI,MAAM,CAAClB;IAApB,GACEzC,oBAACoD,IAAD;MAAMG,KAAK,EAAEI,MAAM,CAACiD;IAApB,GACE5G,oBAAC+D,IAAD;MAAMR,KAAK,EAAE;QAAEsD,KAAK,EAAE,MAAT;QAAiBC,SAAS,EAAE;MAA5B;IAAb,OADF,CADF,CAPF,CANF,CADS;EAAA,CAAVzF,CADH,EA0BErB,oBAACM,gBAAD;IAAkBwD,OAAO,EAAES;EAA3B,GACEvE,oBAACoD,IAAD;IAAMG,KAAK,EAAEI,MAAM,CAACoD;EAApB,GACE/G,oBAAC+D,IAAD;IAAMR,KAAK,EAAE;MAAEyD,QAAQ,EAAE,EAAZ;MAAgBH,KAAK,EAAE;IAAvB;EAAb,OADF,CADF,CA1BF,CAFJ,EAoCE7G,oBAACoD,IAAD;IAAMG,KAAK,EAAE;MAAE0D,aAAa,EAAE,KAAjB;MAAwBC,UAAU,EAAE;IAApC;EAAb,GACElH,oBAACmH,SAAD;IACEC,KAAK,kBAAEtG,KAAK,CAACsG,KAAR,uDAAiBpG,OADxB;IAEEW,YAAY,EAAEA,YAFhB;IAGE4B,KAAK,EAAE,CACLxC,YAAY,SAAZA,gBAAY,WAAZA,gBAAY,CAAEsG,kBAAdtG,GACI4C,MAAM,CAAC2D,gBADXvG,GAEI4C,MAAM,CAAC4D,SAHN,EAKLzG,KALK,SAKLA,SALK,WAKLA,GALK,MAKLA,QAAK,CAAE0G,UALF,CAHT;IAUEC,WAAW,wBAAE3G,KAAF,SAAEA,SAAF,WAAEA,GAAF,MAAEA,QAAK,CAAE2G,WAAT,mEAAwB,mBAVrC;IAWEpD,UAAU,EAAGqD,qBAAD;MAAA,OAAOrD,WAAU,CAACqD,CAAC,CAACC,WAAFD,CAAcpD,GAAf,CAAjB;IAAA;EAXd,EADF,EAeG,aAAY,SAAZvD,gBAAY,WAAZA,wBAAY,CAAEsG,kBAAd,KACCrH,0CACGc,KAAK,SAALA,SAAK,WAALA,SAAK,CAAE8G,iBAAP9G,GACCA,KAAK,CAAC8G,iBAAN9G,CAAwB;IACtByD;EADsB,CAAxBzD,CADDA,GAKCd,oBAACM,gBAAD;IACEwD,OAAO,EAAES,YADX;IAEEhB,KAAK,EAAE;MAAEsE,iBAAiB,EAAE;IAArB;EAFT,GAIE7H,oBAAC+D,IAAD;IAAMR,KAAK,EAAE;MAAEyD,QAAQ,EAAE;IAAZ;EAAb,kBAJF,CANJ,CAhBJ,EAgCGlG,KAAK,SAALA,SAAK,WAALA,SAAK,CAAEgH,UAAPhH,GACCA,KAAK,CAACgH,UAANhH,CAAiB;IACfyB,WAAW,EAAEA;EADE,CAAjBzB,CADDA,GAKCd,oBAAC8F,MAAD;IAAQC,KAAK,EAAC,MAAd;IAAqBjC,OAAO,EAAEvB,WAA9B;IAA2CsE,KAAK,EAAC;EAAjD,EArCJ,CApCF,CAlCF,CADF;AAkHD;;AAED,IAAMlD,MAAM,GAAGoE,UAAU,CAACC,MAAXD,CAAkB;EAC/B9B,SAAS,EAAE;IACTgC,OAAO,EAAE;EADA,CADoB;EAI/BV,SAAS,EAAE;IACTU,OAAO,EAAE,EADA;IAETC,KAAK,EAAE,KAFE;IAGTC,WAAW,EAAE,CAHJ;IAITC,WAAW,EAAE;EAJJ,CAJoB;EAU/Bd,gBAAgB,EAAE;IAChBW,OAAO,EAAE,EADO;IAEhBC,KAAK,EAAE,KAFS;IAGhBC,WAAW,EAAE,CAHG;IAIhBC,WAAW,EAAE;EAJG,CAVa;EAgB/BC,MAAM,EAAE;IACNH,KAAK,EAAE,KADD;IAENjD,eAAe,EAAE;EAFX,CAhBuB;EAoB/BC,KAAK,EAAE;IACL+B,aAAa,EAAE,KADV;IAELgB,OAAO,EAAE,EAFJ;IAGLhD,eAAe,EAAE,SAHZ;IAILqD,eAAe,EAAE,SAJZ;IAKLC,eAAe,EAAE;EALZ,CApBwB;EA2B/BlD,SAAS,EAAE;IACTmD,IAAI,EAAE;EADG,CA3BoB;EA8B/BlD,aAAa,EAAE;IACbmD,UAAU,EAAE;EADC,CA9BgB;EAkC/B1B,OAAO,EAAE;IACPmB,KAAK,EAAE,GADA;IAEPQ,MAAM,EAAE,GAFD;IAGPP,WAAW,EAAE,CAHN;IAIPQ,WAAW,EAAE,QAJN;IAKPhC,YAAY,EAAE,EALP;IAMPiC,cAAc,EAAE,QANT;IAOP1B,UAAU,EAAE,QAPL;IAQPkB,WAAW,EAAE;EARN,CAlCsB;EA4C/BxB,gBAAgB,EAAE;IAChB3B,eAAe,EAAE,iBADD;IAEhBiD,KAAK,EAAE,EAFS;IAGhBQ,MAAM,EAAE,EAHQ;IAIhBG,UAAU,EAAE,EAJI;IAKhBC,SAAS,EAAE,CALK;IAMhBnC,YAAY,EAAE,EANE;IAOhBiC,cAAc,EAAE,QAPA;IAQhB1B,UAAU,EAAE,QARI;IAShB6B,YAAY,EAAE;EATE,CA5Ca;EAuD/BtG,KAAK,EAAE;IACLyF,KAAK,EAAE,GADF;IAELQ,MAAM,EAAE,GAFH;IAGL/B,YAAY,EAAE,EAHT;IAILqC,WAAW,EAAE,EAJR;IAKLxC,YAAY,EAAE;EALT,CAvDwB;EA8D/BD,YAAY,EAAE;IACZ2B,KAAK,EAAE,GADK;IAEZQ,MAAM,EAAE,GAFI;IAGZzD,eAAe,EAAE,iBAHL;IAIZ0B,YAAY,EAAE;EAJF,CA9DiB;EAoE/B/C,gBAAgB,EAAE;IAChBmB,QAAQ,EAAE,UADM;IAEhBC,MAAM,EAAE,EAFQ;IAGhBkD,KAAK,EAAE,MAHS;IAIhBD,OAAO,EAAE,EAJO;IAKhBhD,eAAe,EAAE;EALD,CApEa;EA2E/Bf,YAAY,EAAE;IACZ+D,OAAO,EAAE,EADG;IAEZpB,KAAK,EAAE;EAFK;AA3EiB,CAAlBkB,CAAf;AAiFA,OAAO,IAAMkB,MAAM,GAAGjJ,KAAK,CAACkJ,IAANlJ,CAAWa,OAAXb,CAAf","names":["React","useCallback","useContext","useMemo","useState","ScrollView","TouchableOpacity","Animated","FadeInDown","FadeOutDown","PropsContext","MediaType","selectImage","_Footer","props","propsContext","message","setMessage","mentions","foundedMentions","setFoundedMentions","image","setImage","cuttedText","replyingTo","text","slice","onChangeText","split","forEach","word","push","filter","mention","console","log","indexOf","toLowerCase","replace","onPressSend","repliedTo","media","onPressMention","target","prev","messagesArray","lastMessageIndex","length","lastMessage","renderMenu","splittedWords","startsWith","View","entering","exiting","style","mentionStyles","_props$mentionStyles","containerStyle","styles","mentionContainer","map","onPress","Text","_props$mentionStyles2","labelStyle","mentionLabel","_props$mentionStyles3","_props$mentionStyles4","onKeyPress","key","onPressImage","then","r","assets","type","Image","uri","base64","position","bottom","backgroundColor","reply","replyStyles","_props$replyStyles","replyBody","replyUsername","_props$replyStyles2","usernameStyle","user","username","_props$replyStyles3","footerProps","closeReplyButton","Button","title","onPressCancelReply","container","horizontal","pagingEnabled","_image","v","ImageBackground","mediaOverlay","marginBottom","source","imageStyle","borderRadius","imageClearButton","color","textAlign","addMore","fontSize","flexDirection","alignItems","TextInput","value","enableImageUploads","shortedTextInput","textInput","inputStyle","placeholder","e","nativeEvent","renderImageAction","paddingHorizontal","sendButton","StyleSheet","create","padding","width","borderWidth","borderColor","button","borderLeftColor","borderLeftWidth","flex","fontWeight","height","borderStyle","justifyContent","marginLeft","marginTop","alignContent","marginRight","Footer","memo"],"sources":["Footer.tsx"],"sourcesContent":["import React, { useCallback, useContext, useMemo, useState } from 'react';\nimport {\n  Button,\n  ImageBackground,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n} from 'react-native';\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler';\nimport Animated, { FadeInDown, FadeOutDown } from 'react-native-reanimated';\nimport { PropsContext } from './Chatty';\nimport { IFooterProps, IMedia, MediaType } from './types/Chatty.types';\nimport { selectImage } from './utils/imagePicker';\n\nfunction _Footer(props: IFooterProps) {\n  const propsContext = useContext(PropsContext);\n  const [message, setMessage] = useState<string>('');\n  const [mentions] = useState(['JohnDoe']);\n  const [foundedMentions, setFoundedMentions] = useState<string[]>([]);\n  const [image, setImage] = useState<IMedia[] | undefined>();\n\n  const cuttedText = useMemo(() => {\n    if (props.replyingTo) {\n      return props.replyingTo.text.slice(0, 100) + '...';\n    }\n\n    return null;\n  }, [props?.replyingTo]);\n\n  const onChangeText = useCallback(\n    (text: string) => {\n      const foundedMentions: string[] = [];\n\n      // Iterate over all text\n      text.split(' ').forEach((word) => {\n        foundedMentions.push(\n          // Check and push if word exists in mentions\n          ...mentions.filter((mention) => {\n            console.log(text, mention.indexOf(word));\n            return (\n              mention\n                .toLowerCase()\n                .indexOf(word.toLowerCase().replace('@', '')) != -1\n            );\n          })\n        );\n      });\n\n      setFoundedMentions(foundedMentions);\n\n      props.onChangeText(text);\n      setMessage(text);\n    },\n    [props, mentions]\n  );\n\n  const onPressSend = useCallback(() => {\n    props.onPressSend({\n      text: message,\n      repliedTo: props.replyingTo,\n      media: image,\n    });\n    setMessage('');\n    setImage([]);\n  }, [message, props, image]);\n\n  const onPressMention = (target: string) => {\n    setMessage((prev) => {\n      const messagesArray = prev.split(' ');\n      const lastMessageIndex = messagesArray.length - 1;\n      const lastMessage = messagesArray[lastMessageIndex];\n\n      prev = prev.replace(lastMessage, '@' + target);\n\n      return prev;\n    });\n\n    setFoundedMentions([]);\n  };\n\n  const renderMenu = useCallback(() => {\n    if (message && foundedMentions.length > 0) {\n      const splittedWords = message.split(' ');\n\n      if (splittedWords[splittedWords.length - 1].startsWith('@')) {\n        return (\n          <Animated.View\n            entering={FadeInDown}\n            exiting={FadeOutDown}\n            style={\n              props.mentionStyles?.containerStyle ?? styles.mentionContainer\n            }\n          >\n            {foundedMentions.map((mention) => (\n              <TouchableOpacity onPress={() => onPressMention(mention)}>\n                <Text\n                  style={props.mentionStyles?.labelStyle ?? styles.mentionLabel}\n                >\n                  @{mention}\n                </Text>\n              </TouchableOpacity>\n            ))}\n          </Animated.View>\n        );\n      }\n    }\n\n    return null;\n  }, [\n    foundedMentions,\n    message,\n    props.mentionStyles?.containerStyle,\n    props.mentionStyles?.labelStyle,\n  ]);\n\n  const onKeyPress = useCallback((key: string) => {\n    if (key === ' ') {\n      setFoundedMentions([]);\n    }\n  }, []);\n\n  const onPressImage = useCallback(async () => {\n    selectImage().then((r) => {\n      const assets = {\n        type: MediaType.Image,\n        uri: r?.assets ? r.assets[0].uri : r.uri,\n        base64: r?.assets ? r.assets[0].base64 : r.base64,\n      };\n      if (image) {\n        setImage([...image, assets]);\n      } else {\n        setImage([assets]);\n      }\n    });\n  }, [image]);\n\n  return (\n    <View\n      style={\n        image &&\n        image.length > 0 && {\n          position: 'absolute',\n          bottom: -70,\n          backgroundColor: '#fff',\n        }\n      }\n    >\n      {props.replyingTo && (\n        <Animated.View\n          entering={FadeInDown}\n          exiting={FadeOutDown}\n          style={[styles.reply, props.replyStyles?.containerStyle]}\n        >\n          <View style={styles.replyBody}>\n            <Text\n              style={[styles.replyUsername, props.replyStyles?.usernameStyle]}\n            >\n              {props.replyingTo.user.username}\n            </Text>\n            <Text style={props.replyStyles?.labelStyle}>{cuttedText}</Text>\n          </View>\n          {propsContext.footerProps.closeReplyButton ? (\n            propsContext.footerProps.closeReplyButton(props)\n          ) : (\n            <Button title=\"cancel\" onPress={props.onPressCancelReply} />\n          )}\n        </Animated.View>\n      )}\n\n      {renderMenu()}\n\n      <View style={[styles.container, props.containerStyle]}>\n        {image && image.length > 0 && (\n          <ScrollView horizontal pagingEnabled>\n            {image.map((_image) => (\n              <TouchableOpacity\n                onPress={() =>\n                  setImage((prev) => prev && prev.filter((v) => v !== _image))\n                }\n                style={styles.media}\n              >\n                <ImageBackground\n                  style={[styles.mediaOverlay, { marginBottom: 15 }]}\n                  source={{ uri: _image.uri }}\n                  imageStyle={{\n                    borderRadius: 15,\n                  }}\n                >\n                  <View style={styles.media}>\n                    <View style={styles.imageClearButton}>\n                      <Text style={{ color: '#fff', textAlign: 'center' }}>\n                        x\n                      </Text>\n                    </View>\n                  </View>\n                </ImageBackground>\n              </TouchableOpacity>\n            ))}\n\n            <TouchableOpacity onPress={onPressImage}>\n              <View style={styles.addMore}>\n                <Text style={{ fontSize: 20, color: '#ccc' }}>+</Text>\n              </View>\n            </TouchableOpacity>\n          </ScrollView>\n        )}\n\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <TextInput\n            value={props.value ?? message}\n            onChangeText={onChangeText}\n            style={[\n              propsContext?.enableImageUploads\n                ? styles.shortedTextInput\n                : styles.textInput,\n\n              props?.inputStyle,\n            ]}\n            placeholder={props?.placeholder ?? 'Type a message...'}\n            onKeyPress={(e) => onKeyPress(e.nativeEvent.key)}\n          />\n\n          {propsContext?.enableImageUploads && (\n            <>\n              {props?.renderImageAction ? (\n                props.renderImageAction({\n                  onPressImage,\n                })\n              ) : (\n                <TouchableOpacity\n                  onPress={onPressImage}\n                  style={{ paddingHorizontal: 10 }}\n                >\n                  <Text style={{ fontSize: 20 }}>📷</Text>\n                </TouchableOpacity>\n              )}\n            </>\n          )}\n\n          {props?.sendButton ? (\n            props.sendButton({\n              onPressSend: onPressSend,\n            })\n          ) : (\n            <Button title=\"Send\" onPress={onPressSend} color=\"#0084ff\" />\n          )}\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 10,\n  },\n  textInput: {\n    padding: 10,\n    width: '80%',\n    borderWidth: 1,\n    borderColor: '#ccc',\n  },\n  shortedTextInput: {\n    padding: 10,\n    width: '70%',\n    borderWidth: 1,\n    borderColor: '#ccc',\n  },\n  button: {\n    width: '20%',\n    backgroundColor: '#fcba03',\n  },\n  reply: {\n    flexDirection: 'row',\n    padding: 10,\n    backgroundColor: '#f5f5f5',\n    borderLeftColor: '#c8faaf',\n    borderLeftWidth: 6,\n  },\n  replyBody: {\n    flex: 1,\n  },\n  replyUsername: {\n    fontWeight: 'bold',\n  },\n\n  addMore: {\n    width: 100,\n    height: 100,\n    borderWidth: 1,\n    borderStyle: 'dashed',\n    borderRadius: 15,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: '#ccc',\n  },\n  imageClearButton: {\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    width: 18,\n    height: 18,\n    marginLeft: 10,\n    marginTop: 5,\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignContent: 'center',\n  },\n  media: {\n    width: 110,\n    height: 100,\n    borderRadius: 15,\n    marginRight: 10,\n    marginBottom: 10,\n  },\n  mediaOverlay: {\n    width: 100,\n    height: 100,\n    backgroundColor: 'rgba(0,0,0,0.2)',\n    borderRadius: 15,\n  },\n  mentionContainer: {\n    position: 'absolute',\n    bottom: 50,\n    width: '100%',\n    padding: 10,\n    backgroundColor: '#E5EEFA',\n  },\n  mentionLabel: {\n    padding: 10,\n    color: '#1939B7',\n  },\n});\n\nexport const Footer = React.memo(_Footer);\n"]},"metadata":{},"sourceType":"module"}