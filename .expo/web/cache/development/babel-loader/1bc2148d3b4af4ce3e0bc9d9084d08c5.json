{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport styled from \"styled-components/native\";\nimport Text from \"../components/Text.js\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { FirebaseContext } from \"../context/FirebaseContext\";\nimport { UserContext } from \"../context/UserContext\";\nimport { useContext } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default SignUpScreen = function SignUpScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      profilePhoto = _useState2[0],\n      setProfilePhoto = _useState2[1];\n\n  var firebase = useContext(FirebaseContext);\n\n  var _useContext = useContext(UserContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      user = _useContext2[0],\n      setUser = _useContext2[1];\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setProfilePhoto(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var signOut = function signOut() {\n    return _regeneratorRuntime.async(function signOut$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setLoading(true);\n            setUser({\n              isLoggedIn: null\n            });\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(Container, {\n    children: [_jsx(Main, {\n      children: _jsx(Text, {\n        title: true,\n        semi: true,\n        center: true,\n        color: \"#88d498\",\n        children: \"Home Screen:\"\n      })\n    }), _jsx(ProfilePhotoContainer, {\n      onPress: pickImage,\n      children: _jsx(ProfilePhoto, {\n        source: user.profilePhotoUrl == \"default\" ? require(\"../assets/logo.png\") : {\n          uri: user.profilePhotoUrl\n        }\n      })\n    }), _jsx(Text, {\n      medium: true,\n      bold: true,\n      margin: \"16px 0 32px 0\",\n      children: user.username\n    }), _jsx(SignUp, {\n      onPress: signOut,\n      children: _jsx(Text, {\n        small: true,\n        center: true,\n        children: _jsx(Text, {\n          bold: true,\n          color: \"#88d498\",\n          children: \"Log Out\"\n        })\n      })\n    })]\n  });\n};\nvar Container = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n\\n    flex: 1; \\n\"])));\nvar Main = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n\\n  margin-top: 80px; \\n  margin-bottom: 50px; \\n\"])));\nvar GroupContainer = styled.TouchableOpacity(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  margin: 0 32px; \\n  height: 48px; \\n  align-items: center; \\n  justify-content: center; \\n  background-color: #88d498;\\n  border-radius: 6px;\\n\\n\"])));\nvar SignUp = styled.TouchableOpacity(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  margin-top: 16px; \\n\"])));\nvar ProfilePhotoContainer = styled.TouchableOpacity(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n  background-color: #e1e2e6;\\n  width: 80px; \\n  height: 80px; \\n  border-radius: 40px; \\n  align-self: center; \\n  margin-top: 16px;\\n  overflow: hidden; \\n\"])));\nvar ProfilePhoto = styled.Image(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n  width: 128px;\\n  height: 128px; \\n  border-radius: 64px; \\n\\n\"])));","map":{"version":3,"sources":["/home/havard/Desktop/Achive/screens/homeScreen.js"],"names":["React","useState","styled","Text","AntDesign","ImagePicker","FirebaseContext","UserContext","useContext","SignUpScreen","navigation","profilePhoto","setProfilePhoto","firebase","user","setUser","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","console","log","cancelled","uri","signOut","setLoading","isLoggedIn","profilePhotoUrl","require","username","Container","View","Main","GroupContainer","TouchableOpacity","SignUp","ProfilePhotoContainer","ProfilePhoto","Image"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {Platform} from \"react-native\"; \nimport styled from \"styled-components/native\"; \nimport Text from \"../components/Text.js\";\n\nimport {AntDesign} from \"@expo/vector-icons\"\nimport * as ImagePicker from \"expo-image-picker\"\nimport {FirebaseContext} from \"../context/FirebaseContext\";\nimport {UserContext} from \"../context/UserContext\";\nimport { useContext } from \"react\";\n\nexport default SignUpScreen = ({navigation}) => {\n\n\n  const [profilePhoto, setProfilePhoto] = useState(); \n  const firebase = useContext(FirebaseContext); \n  const [user, setUser] = useContext(UserContext); \n\n  const pickImage = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    console.log(result);\n\n    if (!result.cancelled) {\n      setProfilePhoto(result.uri);\n    }\n  };\n\n  const signOut = async () => {\n\n    setLoading(true);\n    setUser({isLoggedIn: null}); \n\n  };\n\n  return(\n    <Container>\n       <Main>\n         <Text title semi center color=\"#88d498\">\n              Home Screen:\n         </Text>\n        </Main>\n\n        <ProfilePhotoContainer onPress={pickImage}>\n          <ProfilePhoto \n            source={user.profilePhotoUrl == \"default\"\n                    ? require(\"../assets/logo.png\")\n                    : { uri: user.profilePhotoUrl}\n            }\n          />\n\n        </ProfilePhotoContainer>\n\n        <Text medium bold margin=\"16px 0 32px 0\">\n          {user.username}\n        </Text>\n\n        <SignUp onPress={signOut}>\n          <Text small center> \n              <Text bold color=\"#88d498\">Log Out</Text></Text>\n        </SignUp>\n     </Container>\n    );\n}\n\nconst Container = styled.View`\n\n    flex: 1; \n`;\n\nconst Main = styled.View`\n\n  margin-top: 80px; \n  margin-bottom: 50px; \n`;\n\n\nconst GroupContainer = styled.TouchableOpacity`\n  margin: 0 32px; \n  height: 48px; \n  align-items: center; \n  justify-content: center; \n  background-color: #88d498;\n  border-radius: 6px;\n\n`;\n\nconst SignUp = styled.TouchableOpacity`\n  margin-top: 16px; \n`; \n\nconst ProfilePhotoContainer = styled.TouchableOpacity`\n  background-color: #e1e2e6;\n  width: 80px; \n  height: 80px; \n  border-radius: 40px; \n  align-self: center; \n  margin-top: 16px;\n  overflow: hidden; \n`; \n\n\nconst ProfilePhoto = styled.Image`\n  width: 128px;\n  height: 128px; \n  border-radius: 64px; \n\n`;"]},"metadata":{},"sourceType":"module"}