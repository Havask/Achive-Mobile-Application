{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { createContext, useContext } from \"react\";\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase } from \"firebase/database\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore, setDoc, doc } from \"firebase/firestore/lite\";\nimport config from \"../config/Firebase\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar app = initializeApp(config);\nvar auth = getAuth(app);\nvar db = getFirestore(app);\nvar FirebaseContext = createContext();\nvar Firebase = {\n  getCurrentUser: function getCurrentUser() {\n    return auth.currentUser;\n  },\n  createUser: function createUser(user) {\n    var uid, profilePhotoUrl;\n    return _regeneratorRuntime.async(function createUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(createUserWithEmailAndPassword(auth, user.email, user.password));\n\n          case 3:\n            uid = Firebase.getCurrentUser().uid;\n            profilePhotoUrl = \"default\";\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(db.collection(\"users\").doc(uid).set({\n              username: user.username,\n              email: user.email,\n              profilePhotoUrl: profilePhotoUrl\n            }));\n\n          case 7:\n            if (!user.profilePhoto) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(Firebase.uploadProfilePhoto(user.profilePhoto));\n\n          case 10:\n            profilePhotoUrl = _context.sent;\n\n          case 11:\n            delete user.password;\n            return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, user), {}, {\n              profilePhotoUrl: profilePhotoUrl,\n              uid: uid\n            }));\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"Error @createUser:\", _context.t0.message);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 15]], Promise);\n  },\n  uploadProfilePhoto: function uploadProfilePhoto(uri) {\n    var uid, photo, imageRef, url;\n    return _regeneratorRuntime.async(function uploadProfilePhoto$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            uid = Firebase.getCurrentUser().uid;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(Firebase.getBlob(uri));\n\n          case 4:\n            photo = _context2.sent;\n            imageRef = storage().ref(\"profilePhotos\").child(uid);\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(imageRef.put(photo));\n\n          case 8:\n            _context2.next = 10;\n            return _regeneratorRuntime.awrap(imageRef.getDownloadURL());\n\n          case 10:\n            url = _context2.sent;\n            _context2.next = 13;\n            return _regeneratorRuntime.awrap(db.collection(\"users\").doc(uid).update({\n              profilePhotoUrl: url\n            }));\n\n          case 13:\n            return _context2.abrupt(\"return\", url);\n\n          case 16:\n            _context2.prev = 16;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.log(\"Error @uploadProfilePhoto\", _context2.t0);\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 16]], Promise);\n  },\n  getBlob: function getBlob(uri) {\n    return _regeneratorRuntime.async(function getBlob$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(new Promise(function (resolve, reject) {\n              var xhr = new XMLHttpRequest();\n\n              xhr.onload = function () {\n                resolve(xhr.response);\n              };\n\n              xhr.onerror = function () {\n                reject(new TypeError(\"Network request failed\"));\n              };\n\n              xhr.responseType = \"blob\";\n              xhr.open(\"GET\", uri, true);\n            }));\n\n          case 2:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getUserInfo: function getUserInfo(uid) {\n    var user;\n    return _regeneratorRuntime.async(function getUserInfo$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(db.collection(\"users\").doc(uid).get());\n\n          case 3:\n            user = _context4.sent;\n\n            if (!user.exist) {\n              _context4.next = 6;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", user.data());\n\n          case 6:\n            _context4.next = 11;\n            break;\n\n          case 8:\n            _context4.prev = 8;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log(\"error @getUserInfo\", _context4.t0);\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  },\n  SignOutUser: function SignOutUser() {\n    return _regeneratorRuntime.async(function SignOutUser$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            auth.signOut().then(function () {\n              navigation.replace(\"LogInScreen\");\n            }).catch(function (error) {\n              return alert(error.message);\n            });\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n};\n\nvar FirebaseProvider = function FirebaseProvider(props) {\n  return _jsx(FirebaseContext.Provider, {\n    value: Firebase,\n    children: props.children\n  });\n};\n\nexport { FirebaseContext, FirebaseProvider };","map":{"version":3,"sources":["/home/havard/Desktop/Achive/context/FirebaseContext.js"],"names":["React","createContext","useContext","initializeApp","getDatabase","getAuth","getFirestore","setDoc","doc","config","signInWithEmailAndPassword","createUserWithEmailAndPassword","app","auth","db","FirebaseContext","Firebase","getCurrentUser","currentUser","createUser","user","email","password","uid","profilePhotoUrl","collection","set","username","profilePhoto","uploadProfilePhoto","console","log","message","uri","getBlob","photo","imageRef","storage","ref","child","put","getDownloadURL","url","update","Promise","resolve","reject","xhr","XMLHttpRequest","onload","response","onerror","TypeError","responseType","open","getUserInfo","get","exist","data","SignOutUser","signOut","then","navigation","replace","catch","error","alert","FirebaseProvider","props","children"],"mappings":"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","sourcesContent":["import React, {createContext, useContext} from \"react\";\nimport { initializeApp } from 'firebase/app';\nimport {getDatabase} from \"firebase/database\"; \n\nimport { getAuth} from \"firebase/auth\";\nimport {getFirestore, setDoc, doc} from \"firebase/firestore/lite\";\nimport config from \"../config/Firebase\"\nimport {signInWithEmailAndPassword} from \"firebase/auth\"; \nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\n\n// Initialize Firebase\nconst app = initializeApp(config);\nconst auth = getAuth(app);\nconst db = getFirestore(app); \nconst FirebaseContext = createContext(); \n\nconst Firebase = {\n  \n  getCurrentUser: () => {\n      return auth.currentUser\n    },\n\n    createUser: async (user) => {\n      \n      try{\n        \n        await createUserWithEmailAndPassword(auth, user.email, user.password);\n        const uid = Firebase.getCurrentUser().uid;\n        let profilePhotoUrl = \"default\";\n        \n        await db.collection(\"users\").doc(uid).set({\n          username: user.username, \n          email: user.email,\n          profilePhotoUrl\n        })\n      \n        if(user.profilePhoto){\n          profilePhotoUrl = await Firebase.uploadProfilePhoto(user.profilePhoto)\n        }\n\n        delete user.password; \n        return{...user, profilePhotoUrl, uid}; \n\n      } catch(error) {\n        console.log(\"Error @createUser:\", error.message)\n      }\n    },\n\n    //function to upload a photo to the firebase user\n    uploadProfilePhoto: async (uri) => {\n      const uid = Firebase.getCurrentUser().uid; \n\n      try{\n\n        const photo = await Firebase.getBlob(uri)\n        const imageRef = storage().ref(\"profilePhotos\").child(uid)\n\n        await imageRef.put(photo); \n        const url = await imageRef.getDownloadURL()\n\n        await db.collection(\"users\").doc(uid).update({\n          profilePhotoUrl: url\n        });\n\n        return url; \n\n      }catch(error){\n        console.log(\"Error @uploadProfilePhoto\", error)\n      }\n    },\n    \n    getBlob: async(uri) => {\n      return await new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest()\n        xhr.onload = () => {\n          resolve(xhr.response)\n        };\n        xhr.onerror = () => {\n          reject(new TypeError(\"Network request failed\"))\n        };\n\n        xhr.responseType = \"blob\";\n        xhr.open(\"GET\", uri, true); \n      })\n    },\n\n    getUserInfo: async (uid) => {\n      try{\n        const user = await db.collection(\"users\").doc(uid).get()\n        if(user.exist){\n          return user.data()\n        }\n      }catch(error){\n        console.log(\"error @getUserInfo\", error)\n      }\n    },\n\n    SignOutUser: async () => {\n    \n      auth\n      .signOut()\n      .then(() => {\n        navigation.replace(\"LogInScreen\")\n      })\n      .catch(error=> alert(error.message))\n    }\n}; \n\nconst FirebaseProvider = (props) => {\n    return <FirebaseContext.Provider value={Firebase}>{props.children}</FirebaseContext.Provider>; \n}; \n\nexport {FirebaseContext, FirebaseProvider};"]},"metadata":{},"sourceType":"module"}