{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useContext } from \"react\";\nimport styled from \"styled-components/native\";\nimport Text from \"../../components/Text.js\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { FirebaseContext } from \"../../context/FirebaseContext\";\nimport { UserContext } from \"../../context/UserContext\";\nimport * as Yup from \"yup\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default NewPasswordScreen = function NewPasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n  var firebase = useContext(FirebaseContext);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState({\n    Password: \"\",\n    ConfirmPassword: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newUser = _useState4[0],\n      setNewUser = _useState4[1];\n\n  var handleChange = function handleChange(prop) {\n    return function (event) {\n      setNewUser(_objectSpread(_objectSpread({}, newUser), {}, _defineProperty({}, prop, event.target.value)));\n    };\n  };\n\n  var stepOneValidationSchema = Yup.object({\n    Password: Yup.string().required(\"This field is required\"),\n    ConfirmPassword: Yup.string().when(\"Password\", {\n      is: function is(val) {\n        return val && val.length > 0 ? true : false;\n      },\n      then: Yup.string().oneOf([Yup.ref(\"password\")], \"Both password need to be the same\")\n    })\n  });\n\n  var NewPassword = function NewPassword() {\n    return _regeneratorRuntime.async(function NewPassword$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            stepOneValidationSchema();\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(firebase.UpdatePassword(newUser.Password));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var ResetPassword = function ResetPassword() {\n    var uid, userInfo;\n    return _regeneratorRuntime.async(function ResetPassword$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(firebase.getCurrentUser().uid);\n\n          case 2:\n            uid = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(firebase.getUserInfo(uid));\n\n          case 5:\n            userInfo = _context2.sent;\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(firebase.updateUserPassword(userInfo.email));\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(Container, {\n    children: _jsx(ScrollView, {\n      children: _jsxs(KeyboardAvoidingView, {\n        children: [_jsx(Main, {\n          children: _jsx(Text, {\n            title: true,\n            semi: true,\n            center: true,\n            color: \"#88d498\",\n            children: \"New password:\"\n          })\n        }), _jsxs(Auth, {\n          children: [_jsxs(AuthContainer, {\n            children: [_jsx(AuthTitle, {\n              children: \" New password\"\n            }), _jsx(AuthField, {\n              autoCapitalize: \"none\",\n              autoCompleteType: \"password\",\n              autocorrect: false,\n              secureTextEntry: true,\n              onChange: handleChange(\"ConfirmPassword\")\n            })]\n          }), _jsxs(AuthContainer, {\n            children: [_jsx(AuthTitle, {\n              children: \" Confirm password\"\n            }), _jsx(AuthField, {\n              autoCapitalize: \"none\",\n              autoCompleteType: \"password\",\n              autocorrect: false,\n              secureTextEntry: true,\n              onChange: handleChange(\"Password\")\n            })]\n          })]\n        }), _jsx(SignUpContainer, {\n          onPress: NewPassword,\n          disable: loading,\n          children: loading ? _jsx(Loading, {}) : _jsx(Text, {\n            bold: true,\n            center: true,\n            color: \"#ffffff\",\n            children: \"Change password\"\n          })\n        }), _jsx(SignUp, {\n          onPress: ResetPassword,\n          children: _jsxs(Text, {\n            small: true,\n            center: true,\n            children: [\"Forgot the password? \", _jsx(Text, {\n              bold: true,\n              color: \"#88d498\",\n              children: \"Reset password\"\n            })]\n          })\n        })]\n      })\n    })\n  });\n};\nvar Container = styled.KeyboardAvoidingView(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n    flex: 1; \\n\"])));\nvar Main = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  margin-top: 80px; \\n  margin-bottom: 50px; \\n\"])));\nvar Auth = styled.View(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  margin: 16px 32px 32px; \\n\"])));\nvar AuthContainer = styled.View(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 32px;\\n\"])));\nvar AuthTitle = styled(Text)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n  color: #8e93a1;\\n  font-size: 12px; \\n  text-transform: uppercase; \\n  font-weight: 300; \\n\"])));\nvar AuthField = styled.TextInput(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n  border-bottom-color: #8e93a1; \\n  border-bottom-width: 1px;\\n  height: 48px; \\n\"])));\nvar SignUpContainer = styled.TouchableOpacity(_templateObject7 || (_templateObject7 = _taggedTemplateLiteralLoose([\"\\n  margin: 0 32px; \\n  height: 48px; \\n  align-items: center; \\n  justify-content: center; \\n  background-color: #88d498;\\n  border-radius: 6px;\\n\"])));\nvar Loading = styled.ActivityIndicator.attrs(function (props) {\n  return {\n    color: \"#fffffff\",\n    size: \"small\"\n  };\n})(_templateObject8 || (_templateObject8 = _taggedTemplateLiteralLoose([\"\"])));\nvar SignUp = styled.TouchableOpacity(_templateObject9 || (_templateObject9 = _taggedTemplateLiteralLoose([\"\\n  margin-top: 16px; \\n\"])));","map":{"version":3,"names":["React","useState","useContext","styled","Text","FirebaseContext","UserContext","Yup","NewPasswordScreen","navigation","firebase","loading","setLoading","Password","ConfirmPassword","newUser","setNewUser","handleChange","prop","event","target","value","stepOneValidationSchema","object","string","required","when","is","val","length","then","oneOf","ref","NewPassword","UpdatePassword","ResetPassword","getCurrentUser","uid","getUserInfo","userInfo","updateUserPassword","email","Container","KeyboardAvoidingView","Main","View","Auth","AuthContainer","AuthTitle","AuthField","TextInput","SignUpContainer","TouchableOpacity","Loading","ActivityIndicator","attrs","props","color","size","SignUp"],"sources":["/Users/havardskjaerstein/Desktop/Achive/screens/settingTab/NewPasswordScreen.js"],"sourcesContent":["import React, {useState, useContext} from \"react\";\nimport styled from \"styled-components/native\"; \nimport Text from \"../../components/Text.js\";\nimport { KeyboardAvoidingView, ScrollView} from \"react-native\";\nimport {FirebaseContext} from \"../../context/FirebaseContext\";\nimport {UserContext} from \"../../context/UserContext\";\nimport * as Yup from \"yup\";\n\nexport default NewPasswordScreen = ({navigation}) => {\n\n  const firebase = useContext(FirebaseContext); \n  const [loading, setLoading] = useState(false); \n\n  const [newUser, setNewUser] = useState({\n    Password: \"\",\n    ConfirmPassword: \"\",\n  });\n\n  const handleChange = (prop) => (event) => {\n    setNewUser({ ...newUser, [prop]: event.target.value });\n  };\n\n  const stepOneValidationSchema = Yup.object({\n    Password: Yup.string().required(\"This field is required\"),\n\n    ConfirmPassword: Yup.string().when(\"Password\", {\n      is: (val) => (val && val.length > 0 ? true : false),\n      then: Yup.string().oneOf(\n        [Yup.ref(\"password\")],\n        \"Both password need to be the same\"\n      ),\n    }),\n  });\n\n  const NewPassword = async () => {\n    stepOneValidationSchema(); \n    await firebase.UpdatePassword(newUser.Password); \n  }\n\n  const ResetPassword = async () => {\n\n    const uid = await firebase.getCurrentUser().uid; \n    const userInfo = await firebase.getUserInfo(uid)\n    await firebase.updateUserPassword(userInfo.email); \n  }; \n\n  return(\n    <Container>\n      <ScrollView>\n      <KeyboardAvoidingView>\n       <Main>\n         <Text title semi center color=\"#88d498\">\n              New password: \n         </Text>\n        </Main>\n        <Auth>\n          <AuthContainer>\n            <AuthTitle> New password</AuthTitle>\n            <AuthField \n              autoCapitalize=\"none\" \n              autoCompleteType=\"password\" \n              autocorrect={false} \n              secureTextEntry={true}\n              onChange={handleChange(\"ConfirmPassword\")}\n            />\n          </AuthContainer>\n\n          <AuthContainer>\n            <AuthTitle> Confirm password</AuthTitle>\n            <AuthField \n              autoCapitalize=\"none\" \n              autoCompleteType=\"password\" \n              autocorrect={false} \n              secureTextEntry={true} \n              onChange={handleChange(\"Password\")}   \n            />\n          </AuthContainer>\n        </Auth>\n\n        <SignUpContainer onPress={NewPassword} disable={loading}>\n          {loading ? (<Loading/>) : (\n            <Text bold center color=\"#ffffff\">\n            Change password</Text>\n          )}\n        </SignUpContainer>\n\n        <SignUp onPress={ResetPassword}>\n          <Text small center> \n              Forgot the password? <Text bold color=\"#88d498\">Reset password</Text>\n          </Text>\n        </SignUp>\n        </KeyboardAvoidingView>\n      </ScrollView>\n     </Container>\n  );\n}\n\nconst Container = styled.KeyboardAvoidingView`\n    flex: 1; \n`;\n\nconst Main = styled.View`\n  margin-top: 80px; \n  margin-bottom: 50px; \n`;\n\nconst Auth = styled.View`\n  margin: 16px 32px 32px; \n`; \n\nconst AuthContainer = styled.View`\n  margin-bottom: 32px;\n`; \n\nconst AuthTitle = styled(Text)`\n  color: #8e93a1;\n  font-size: 12px; \n  text-transform: uppercase; \n  font-weight: 300; \n`; \n\nconst AuthField = styled.TextInput`\n  border-bottom-color: #8e93a1; \n  border-bottom-width: 1px;\n  height: 48px; \n`; \n\nconst SignUpContainer = styled.TouchableOpacity`\n  margin: 0 32px; \n  height: 48px; \n  align-items: center; \n  justify-content: center; \n  background-color: #88d498;\n  border-radius: 6px;\n`;\n\nconst Loading = styled.ActivityIndicator.attrs(props => ({\n  color: \"#fffffff\",\n  size: \"small\", \n}))``; \n\nconst SignUp = styled.TouchableOpacity`\n  margin-top: 16px; \n`; "],"mappings":"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"},"metadata":{},"sourceType":"module"}