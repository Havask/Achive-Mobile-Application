{"ast":null,"code":"import { EventEmitter } from 'eventemitter3';\nvar ChatEmitter = new EventEmitter();\nvar ChatBubbleEmitter = new EventEmitter();\nexport { ChatEmitter, ChatBubbleEmitter };","map":{"version":3,"sources":["eventEmitter.ts"],"names":["ChatEmitter","ChatBubbleEmitter"],"mappings":"AAAA,SAAA,YAAA,QAAA,eAAA;AAiBA,IAAMA,WAAW,GAAG,IAApB,YAAoB,EAApB;AACA,IAAMC,iBAAiB,GAAG,IAA1B,YAA0B,EAA1B;AAEA,SAAA,WAAA,EAAA,iBAAA","sourcesContent":["import { EventEmitter } from 'eventemitter3';\nimport type { IMessage } from '../types/Chatty.types';\nimport type TypedEmitter from 'typed-emitter';\n\nexport type EventMap = {\n  [key: string]: (...args: any[]) => void;\n};\n\ntype ChatEvents = {\n  patternPressed: (pattern: string, index: number, message: IMessage) => void;\n  actionPressed: (index: number, message: IMessage) => void;\n};\n\ntype ChatBubbleEvents = {\n  replyBubblePressed: (messageId: number) => void;\n};\n\nconst ChatEmitter = new EventEmitter() as TypedEmitter<ChatEvents>;\nconst ChatBubbleEmitter = new EventEmitter() as TypedEmitter<ChatBubbleEvents>;\n\nexport { ChatEmitter, ChatBubbleEmitter };\n"]},"metadata":{},"sourceType":"module"}