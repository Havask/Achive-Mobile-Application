{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport dayjs from 'dayjs';\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { Footer } from \"./Footer\";\nimport { Header } from \"./Header\";\nimport { List } from \"./List\";\nexport var PropsContext = React.createContext({});\nexport var Chatty = React.forwardRef(function (props, ref) {\n  var listRef = useRef();\n  var messages = props.messages;\n  useEffect(function () {\n    var listener = Keyboard.addListener('keyboardDidShow', function () {\n      if (listRef.current) {\n        var _listRef$current;\n\n        (_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : _listRef$current.scrollToEnd(true);\n      } else if (ref) {\n        var _ref$current;\n\n        (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.scrollToEnd(true);\n      } else {\n        console.warn('No ref found');\n      }\n    });\n    return function () {\n      listener.remove();\n    };\n  }, [ref]);\n  useEffect(function () {\n    if (props !== null && props !== void 0 && props.setDateLocale) {\n      dayjs.locale(props.setDateLocale);\n    }\n  }, [props.setDateLocale]);\n  var renderLoading = useCallback(function () {\n    return React.createElement(View, {\n      style: [styles.loadingContainer]\n    }, React.createElement(ActivityIndicator, null));\n  }, []);\n  return React.createElement(SafeAreaView, null, React.createElement(PropsContext.Provider, {\n    value: props\n  }, props !== null && props !== void 0 && props.renderHeader ? props.renderHeader(props.headerProps) : React.createElement(Header, props.headerProps), React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.select({\n      android: 'position',\n      ios: 'position'\n    }),\n    keyboardVerticalOffset: Platform.select({\n      android: 20\n    })\n  }, props.messages.length < 1 ? renderLoading() : React.createElement(React.Fragment, null, React.createElement(List, _extends({\n    data: messages,\n    ref: ref !== null && ref !== void 0 ? ref : listRef,\n    rowRenderer: props !== null && props !== void 0 && props.renderBubble ? props.renderBubble : undefined\n  }, props.listProps)), props !== null && props !== void 0 && props.renderFooter ? props.renderFooter(props.footerProps) : React.createElement(Footer, _extends({}, props.footerProps, {\n    replyingTo: props.replyingTo\n  }))))));\n});\nexport var styles = StyleSheet.create({\n  loadingContainer: {\n    height: '90%',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"mappings":"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","names":["dayjs","React","useCallback","useEffect","useRef","SafeAreaView","Footer","Header","List","PropsContext","createContext","Chatty","forwardRef","props","ref","listRef","messages","listener","Keyboard","addListener","current","scrollToEnd","console","warn","remove","setDateLocale","locale","renderLoading","View","style","styles","loadingContainer","ActivityIndicator","Provider","value","renderHeader","headerProps","KeyboardAvoidingView","behavior","Platform","select","android","ios","keyboardVerticalOffset","length","data","rowRenderer","renderBubble","undefined","listProps","renderFooter","footerProps","replyingTo","StyleSheet","create","height","justifyContent","alignContent","alignItems"],"sources":["Chatty.tsx"],"sourcesContent":["import dayjs from 'dayjs';\nimport type { ForwardedRef } from 'react';\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport {\n  ActivityIndicator,\n  Keyboard,\n  KeyboardAvoidingView,\n  Platform,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { Footer } from './Footer';\nimport { Header } from './Header';\nimport { List } from './List';\nimport type { IChatty, ListRef } from './types/Chatty.types';\n\nexport const PropsContext = React.createContext<IChatty>({} as IChatty);\n\nexport const Chatty = React.forwardRef(\n  (props: IChatty, ref: ForwardedRef<ListRef>) => {\n    const listRef = useRef<ListRef>();\n    const { messages } = props;\n\n    /* This is a way to scroll to the end of the list when the keyboard is shown. */\n    useEffect(() => {\n      const listener = Keyboard.addListener('keyboardDidShow', () => {\n        if (listRef.current) {\n          listRef.current?.scrollToEnd(true);\n        } else if (ref) {\n          //@ts-ignore\n          ref.current?.scrollToEnd(true);\n        } else {\n          console.warn('No ref found');\n        }\n      });\n\n      return () => {\n        listener.remove();\n      };\n    }, [ref]);\n\n    useEffect(() => {\n      if (props?.setDateLocale) {\n        dayjs.locale(props.setDateLocale);\n      }\n    }, [props.setDateLocale]);\n\n    const renderLoading = useCallback(() => {\n      return (\n        <View style={[styles.loadingContainer]}>\n          <ActivityIndicator />\n        </View>\n      );\n    }, []);\n\n    return (\n      <SafeAreaView>\n        <PropsContext.Provider value={props}>\n          {props?.renderHeader ? (\n            props.renderHeader(props.headerProps)\n          ) : (\n            <Header {...props.headerProps} />\n          )}\n          <KeyboardAvoidingView\n            behavior={Platform.select({\n              android: 'position',\n              ios: 'position',\n            })}\n            keyboardVerticalOffset={Platform.select({\n              android: 20,\n            })}\n          >\n            {props.messages.length < 1 ? (\n              renderLoading()\n            ) : (\n              <>\n                <List\n                  data={messages}\n                  //@ts-ignore\n                  ref={ref ?? listRef}\n                  rowRenderer={\n                    props?.renderBubble ? props.renderBubble : undefined\n                  }\n                  {...props.listProps}\n                />\n                {props?.renderFooter ? (\n                  props.renderFooter(props.footerProps)\n                ) : (\n                  <Footer\n                    {...props.footerProps}\n                    replyingTo={props.replyingTo}\n                  />\n                )}\n              </>\n            )}\n          </KeyboardAvoidingView>\n        </PropsContext.Provider>\n      </SafeAreaView>\n    );\n  }\n);\n\nexport const styles = StyleSheet.create({\n  loadingContainer: {\n    height: '90%',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}