{"ast":null,"code":"import React from \"react\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { GroupScreen, CreateGroupScreen, RoutineScreen, TasksScreen, Scoreboard } from \"../screens/GroupTab\";\nimport { SettingScreen, NewPassword, NewUsername, NewEmail, UserSettingScreen } from \"../screens/settingTab\";\nimport { ProfileScreen } from \"../screens/profileTab\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GroupStack = createNativeStackNavigator();\n\nfunction GroupStackScreen() {\n  return _jsxs(GroupStack.Navigator, {\n    children: [_jsx(GroupStack.Screen, {\n      name: \"Group\",\n      component: GroupScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(GroupStack.Screen, {\n      name: \"CreateGroup\",\n      component: CreateGroupScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(GroupStack.Screen, {\n      name: \"Routine\",\n      component: RoutineScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(GroupStack.Screen, {\n      name: \"Tasks\",\n      component: TasksScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(GroupStack.Screen, {\n      name: \"Scoreboard\",\n      component: Scoreboard,\n      options: {\n        headerShown: false\n      }\n    })]\n  });\n}\n\nvar ProfileStack = createNativeStackNavigator();\n\nfunction ProfileStackScreen() {\n  return _jsx(ProfileStack.Navigator, {\n    children: _jsx(ProfileStack.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        headerShown: false\n      }\n    })\n  });\n}\n\nvar SettingsStack = createNativeStackNavigator();\n\nfunction SettingsStackScreen() {\n  return _jsxs(SettingsStack.Navigator, {\n    children: [_jsx(SettingsStack.Screen, {\n      name: \"Settings\",\n      component: SettingScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(SettingsStack.Screen, {\n      name: \"Password\",\n      component: NewPassword,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(SettingsStack.Screen, {\n      name: \"Username\",\n      component: NewUsername,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(SettingsStack.Screen, {\n      name: \"Email\",\n      component: NewEmail,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(SettingsStack.Screen, {\n      name: \"UsersSetting\",\n      component: UserSetting,\n      options: {\n        headerShown: false\n      }\n    })]\n  });\n}\n\nexport default MainStackScreens = function MainStackScreens() {\n  var screenOptions = function screenOptions(_ref) {\n    var route = _ref.route;\n    return {\n      tabBarShowLabel: false,\n      tabBarStyle: {\n        backgroundColor: \"#222222\",\n        paddingBottom: 8\n      },\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var focused = _ref2.focused;\n        var iconName = \"ios-home\";\n\n        switch (route.name) {\n          case \"Profiles\":\n            iconName = \"ios-person\";\n            break;\n\n          case \"Groups\":\n            iconName = \"ios-people-sharp\";\n            break;\n\n          case \"Setting\":\n            iconName = \"ios-settings\";\n            break;\n\n          default:\n            iconName = \"ios-home\";\n        }\n\n        return _jsx(Ionicons, {\n          name: iconName,\n          size: 30,\n          color: focused ? \"#ffffff\" : \"#666666\"\n        });\n      }\n    };\n  };\n\n  var TabStack = createBottomTabNavigator();\n  return _jsxs(TabStack.Navigator, {\n    screenOptions: screenOptions,\n    children: [_jsx(TabStack.Screen, {\n      name: \"Profiles\",\n      component: ProfileStackScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(TabStack.Screen, {\n      name: \"Groups\",\n      component: GroupStackScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(TabStack.Screen, {\n      name: \"Setting\",\n      component: SettingsStackScreen,\n      options: {\n        headerShown: false\n      }\n    })]\n  });\n};","map":{"version":3,"sources":["/home/havard/Desktop/Achive/stacks/MainStackScreens.js"],"names":["React","createBottomTabNavigator","Ionicons","GroupScreen","CreateGroupScreen","RoutineScreen","TasksScreen","Scoreboard","SettingScreen","NewPassword","NewUsername","NewEmail","UserSettingScreen","ProfileScreen","createNativeStackNavigator","GroupStack","GroupStackScreen","headerShown","ProfileStack","ProfileStackScreen","SettingsStack","SettingsStackScreen","UserSetting","MainStackScreens","screenOptions","route","tabBarShowLabel","tabBarStyle","backgroundColor","paddingBottom","tabBarIcon","focused","iconName","name","TabStack"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport {Ionicons} from \"@expo/vector-icons\"\nimport {\n            GroupScreen, \n            CreateGroupScreen, \n            RoutineScreen, \n            TasksScreen,\n            Scoreboard,\n        \n        } from \"../screens/GroupTab\"\nimport {\n            SettingScreen, \n            NewPassword,\n            NewUsername, \n            NewEmail,\n            UserSettingScreen,\n\n        } from \"../screens/settingTab\"\nimport {\n            ProfileScreen, \n\n        } from \"../screens/profileTab\"\n\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nconst GroupStack = createNativeStackNavigator();\n    \nfunction GroupStackScreen() {\n    return (\n        <GroupStack.Navigator>\n            <GroupStack.Screen name=\"Group\" component={GroupScreen} options={{headerShown: false}}/>\n            <GroupStack.Screen name=\"CreateGroup\" component={CreateGroupScreen} options={{headerShown: false}}/>\n            <GroupStack.Screen name=\"Routine\" component={RoutineScreen} options={{headerShown: false}}/>\n            <GroupStack.Screen name=\"Tasks\" component={TasksScreen} options={{headerShown: false}}/>\n            <GroupStack.Screen name=\"Scoreboard\" component={Scoreboard} options={{headerShown: false}}/>\n        </GroupStack.Navigator>\n    );\n}\n\nconst ProfileStack = createNativeStackNavigator();\n\nfunction ProfileStackScreen(){\n    return (\n        <ProfileStack.Navigator>\n            <ProfileStack.Screen name=\"Profile\" component={ProfileScreen} options={{headerShown: false}}/>\n        </ProfileStack.Navigator>\n    );\n}\n\nconst SettingsStack = createNativeStackNavigator();\n\nfunction SettingsStackScreen() {\n    return (\n        <SettingsStack.Navigator>\n            <SettingsStack.Screen name=\"Settings\" component={SettingScreen} options={{headerShown: false}}/>\n            <SettingsStack.Screen name=\"Password\" component={NewPassword} options={{headerShown: false}}/>\n            <SettingsStack.Screen name=\"Username\" component={NewUsername} options={{headerShown: false}}/>\n            <SettingsStack.Screen name=\"Email\" component={NewEmail} options={{headerShown: false}}/>\n            <SettingsStack.Screen name=\"UsersSetting\" component={UserSetting} options={{headerShown: false}}/>\n\n        </SettingsStack.Navigator>\n    );\n}\n\nexport default MainStackScreens = () => {\n\n    const screenOptions = (({route}) => ({\n\n        tabBarShowLabel: false,\n        tabBarStyle: {\n            backgroundColor: \"#222222\", \n            paddingBottom: 8,\n        },\n        \n        tabBarIcon: ({focused}) => {\n            let iconName = \"ios-home\"\n            \n            switch(route.name){\n                case \"Profiles\": \n                iconName = \"ios-person\"\n                break; \n                \n                case \"Groups\": \n                iconName = \"ios-people-sharp\"\n                break; \n                \n                case \"Setting\": \n                iconName = \"ios-settings\"\n                break; \n                \n                default: \n                iconName = \"ios-home\"\n            }\n            return <Ionicons \n                name={iconName} \n                size={30} \n                color={focused ? \"#ffffff\" : \"#666666\"} \n            />;\n        },\n    }))\n    \n    const TabStack = createBottomTabNavigator(); \n    \n    return(\n        \n            <TabStack.Navigator screenOptions={screenOptions}>\n                <TabStack.Screen \n                    name=\"Profiles\" \n                    component={ProfileStackScreen}  \n                    options={{headerShown: false}}\n                />\n                <TabStack.Screen \n                    name=\"Groups\" \n                    component={GroupStackScreen}     \n                    options={{headerShown: false}}\n                />\n                <TabStack.Screen \n                    name=\"Setting\" \n                    component={SettingsStackScreen} \n                    options={{headerShown: false}}\n                />\n            </TabStack.Navigator>\n    );\n}"]},"metadata":{},"sourceType":"module"}