{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { backgroundColor } from \"react-native/Libraries/Components/View/ReactNativeStyleAttributes\";\nimport GroupCards from \"../components/GroupCard\";\nimport Colors from \"../constants/colors.js\";\nimport { auth, db } from \"../firebase.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction SignInScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSignedIn = _useState2[0],\n      setIsSignedIn = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      name = _useState8[0],\n      setName = _useState8[1];\n\n  function writeUserData(user) {\n    firebase.database().ref('users/' + user.uid).set(user).catch(function (error) {\n      console.log(error.message);\n    });\n  }\n\n  var handleSignUp = function handleSignUp() {\n    var userAuth = createUserWithEmailAndPassword(auth, email, password);\n    var user = {\n      name: name,\n      uid: userAuth.uid,\n      email: userAuth.email\n    };\n    writeUserData(user).catch(function (error) {\n      console.log(error.message);\n    });\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: \"padding\",\n    children: [_jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(Image, {\n        style: styles.logo,\n        source: require(\"../assets/logo.png\")\n      }), _jsx(TextInput, {\n        style: styles.username,\n        placeholder: \"Name\",\n        value: name,\n        onChangeText: function onChangeText(text) {\n          return setName(text);\n        }\n      }), _jsx(TextInput, {\n        style: styles.username,\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Passord\",\n        style: styles.password,\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        secureTextEntry: true\n      })]\n    }), _jsx(View, {\n      style: styles.buttonContainer,\n      children: _jsx(TouchableOpacity, {\n        style: [styles.button, styles.buttonOutline],\n        onPress: function onPress() {\n          navigation.push(\"HomeScreen\");\n          handleSignUp();\n        },\n        children: _jsx(Text, {\n          styles: styles.buttonOutlineText,\n          children: \"Register\"\n        })\n      })\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: Colors.primary\n  },\n  logo: {\n    width: 320,\n    height: 300\n  },\n  username: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 10\n  },\n  buttonContainer: {\n    width: '60%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40\n  },\n  password: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 10\n  },\n  textstyle: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '100%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#0782F9',\n    borderWidth: 2\n  },\n  buttonContainer: {\n    width: '60%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40\n  },\n  buttonOutlineText: {\n    color: '#0782F9',\n    fontWeight: '700',\n    fontSize: 16\n  },\n  inputContainer: {\n    width: '80%'\n  }\n});\nexport default SignInScreen;","map":{"version":3,"sources":["/home/havard/Desktop/Achive/screens/signIn.js"],"names":["createUserWithEmailAndPassword","React","useState","backgroundColor","GroupCards","Colors","auth","db","SignInScreen","navigation","isSignedIn","setIsSignedIn","email","setEmail","password","setPassword","name","setName","writeUserData","user","firebase","database","ref","uid","set","catch","error","console","log","message","handleSignUp","userAuth","styles","container","inputContainer","logo","require","username","text","buttonContainer","button","buttonOutline","push","buttonOutlineText","StyleSheet","create","flex","justifyContent","alignItems","primary","width","height","paddingHorizontal","paddingVertical","borderRadius","marginTop","textstyle","color","fontWeight","fontSize","padding","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport React, { useState } from \"react\";\nimport {StyleSheet, TouchableOpacity, Text, View, Image, Button, TextInput, KeyboardAvoidingView} from \"react-native\"; \nimport { backgroundColor } from \"react-native/Libraries/Components/View/ReactNativeStyleAttributes\";\nimport GroupCards from \"../components/GroupCard\";\nimport Colors from \"../constants/colors.js\";\nimport { auth, db } from \"../firebase.js\";\n\n\nfunction SignInScreen({navigation}) {\n\n  const [isSignedIn, setIsSignedIn] = useState(false)\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [name, setName] = useState(\"\")\n\n  function writeUserData(user) {\n    firebase.database().ref('users/' + user.uid).set(user).catch(error => {\n        console.log(error.message)\n    });\n  }\n\n  const handleSignUp = () =>{\n    const userAuth = createUserWithEmailAndPassword(auth,email,password);\n\n    var user = {\n      name: name,\n      uid: userAuth.uid,\n      email: userAuth.email\n      }\n    writeUserData(user)\n\n    .catch((error)=>{\n      console.log(error.message); \n    })\n  }\n\n  return(\n    <KeyboardAvoidingView \n    style = {styles.container}\n    behavior=\"padding\">\n      <View style={styles.inputContainer}>\n\n        <Image style = {styles.logo} \n        source={require(\"../assets/logo.png\")}\n        />\n\n        <TextInput\n          style={styles.username}\n          placeholder=\"Name\"\n          value={name}\n          onChangeText={text => setName(text)}\n        />\n\n        <TextInput\n          style={styles.username}\n          placeholder=\"Email\"\n          value={email}\n          onChangeText={text => setEmail(text)}\n        />\n\n        <TextInput\n          placeholder=\"Passord\"\n          style={styles.password}\n          value={password}\n          onChangeText={text => setPassword(text)}\n          secureTextEntry\n        />\n      </View>\n      \n      <View style ={styles.buttonContainer}>\n        <TouchableOpacity\n            style={[styles.button, styles.buttonOutline]}\n            onPress={() => {\n              navigation.push(\"HomeScreen\"); \n              handleSignUp(); \n              }}>\n            <Text styles={styles.buttonOutlineText}>Register</Text>\n        </TouchableOpacity>\n        \n      </View>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n\ncontainer: {\n  flex: 1,\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: Colors.primary\n},\n\nlogo: {\n  width: 320,\n  height: 300,\n},\n\nusername: {\n  backgroundColor: 'white',\n  paddingHorizontal: 15,\n  paddingVertical: 10,\n  borderRadius: 10,\n  marginTop: 10,\n}, \n\nbuttonContainer: {\n  width: '60%',\n  justifyContent: 'center',\n  alignItems: 'center',\n  marginTop: 40,\n},\n\npassword: {\n  backgroundColor: 'white',\n  paddingHorizontal: 15,\n  paddingVertical: 10,\n  borderRadius: 10,\n  marginTop: 10,\n}, \n\ntextstyle: {\n  color: 'white',\n  fontWeight: '700',\n  fontSize: 16,\n},\n\nbutton: {\n  backgroundColor: '#0782F9',\n  width: '100%',\n  padding: 15,\n  borderRadius: 10,\n  alignItems: 'center',\n},\nbuttonOutline: {\n  backgroundColor: 'white',\n  marginTop: 5,\n  borderColor: '#0782F9',\n  borderWidth: 2,\n},\n\nbuttonContainer:{\n  width: '60%',\n  justifyContent: 'center',\n  alignItems: 'center',\n  marginTop: 40,\n}, \n\nbuttonOutlineText: {\n  color: '#0782F9',\n  fontWeight: '700',\n  fontSize: 16,\n},\ninputContainer: {\n  width: '80%'\n},\n\n}); \n\nexport default SignInScreen;"]},"metadata":{},"sourceType":"module"}