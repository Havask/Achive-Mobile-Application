{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useCallback, useContext, useMemo, useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler';\nimport Animated, { FadeInDown, FadeOutDown } from 'react-native-reanimated';\nimport { PropsContext } from \"./Chatty\";\nimport { MediaType } from \"./types/Chatty.types\";\nimport { selectImage } from \"./utils/imagePicker\";\n\nfunction _Footer(props) {\n  var _props$mentionStyles3, _props$mentionStyles4, _props$replyStyles, _props$replyStyles2, _props$replyStyles3, _props$value, _props$placeholder;\n\n  var propsContext = useContext(PropsContext);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var _useState3 = useState(['JohnDoe']),\n      _useState4 = _slicedToArray(_useState3, 1),\n      mentions = _useState4[0];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      foundedMentions = _useState6[0],\n      setFoundedMentions = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      image = _useState8[0],\n      setImage = _useState8[1];\n\n  var cuttedText = useMemo(function () {\n    if (props.replyingTo) {\n      return props.replyingTo.text.slice(0, 100) + '...';\n    }\n\n    return null;\n  }, [props === null || props === void 0 ? void 0 : props.replyingTo]);\n  var onChangeText = useCallback(function (text) {\n    var foundedMentions = [];\n    text.split(' ').forEach(function (word) {\n      foundedMentions.push.apply(foundedMentions, _toConsumableArray(mentions.filter(function (mention) {\n        console.log(text, mention.indexOf(word));\n        return mention.toLowerCase().indexOf(word.toLowerCase().replace('@', '')) != -1;\n      })));\n    });\n    setFoundedMentions(foundedMentions);\n    props.onChangeText(text);\n    setMessage(text);\n  }, [props, mentions]);\n  var onPressSend = useCallback(function () {\n    props.onPressSend({\n      text: message,\n      repliedTo: props.replyingTo,\n      media: image\n    });\n    setMessage('');\n    setImage([]);\n  }, [message, props, image]);\n\n  var onPressMention = function onPressMention(target) {\n    setMessage(function (prev) {\n      var messagesArray = prev.split(' ');\n      var lastMessageIndex = messagesArray.length - 1;\n      var lastMessage = messagesArray[lastMessageIndex];\n      prev = prev.replace(lastMessage, '@' + target);\n      return prev;\n    });\n    setFoundedMentions([]);\n  };\n\n  var renderMenu = useCallback(function () {\n    if (message && foundedMentions.length > 0) {\n      var splittedWords = message.split(' ');\n\n      if (splittedWords[splittedWords.length - 1].startsWith('@')) {\n        var _props$mentionStyles$, _props$mentionStyles;\n\n        return React.createElement(Animated.View, {\n          entering: FadeInDown,\n          exiting: FadeOutDown,\n          style: (_props$mentionStyles$ = (_props$mentionStyles = props.mentionStyles) === null || _props$mentionStyles === void 0 ? void 0 : _props$mentionStyles.containerStyle) !== null && _props$mentionStyles$ !== void 0 ? _props$mentionStyles$ : styles.mentionContainer\n        }, foundedMentions.map(function (mention) {\n          var _props$mentionStyles$2, _props$mentionStyles2;\n\n          return React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              return onPressMention(mention);\n            }\n          }, React.createElement(Text, {\n            style: (_props$mentionStyles$2 = (_props$mentionStyles2 = props.mentionStyles) === null || _props$mentionStyles2 === void 0 ? void 0 : _props$mentionStyles2.labelStyle) !== null && _props$mentionStyles$2 !== void 0 ? _props$mentionStyles$2 : styles.mentionLabel\n          }, \"@\", mention));\n        }));\n      }\n    }\n\n    return null;\n  }, [foundedMentions, message, (_props$mentionStyles3 = props.mentionStyles) === null || _props$mentionStyles3 === void 0 ? void 0 : _props$mentionStyles3.containerStyle, (_props$mentionStyles4 = props.mentionStyles) === null || _props$mentionStyles4 === void 0 ? void 0 : _props$mentionStyles4.labelStyle]);\n\n  var _onKeyPress = useCallback(function (key) {\n    if (key === ' ') {\n      setFoundedMentions([]);\n    }\n  }, []);\n\n  var onPressImage = useCallback(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            selectImage().then(function (r) {\n              var assets = {\n                type: MediaType.Image,\n                uri: r !== null && r !== void 0 && r.assets ? r.assets[0].uri : r.uri,\n                base64: r !== null && r !== void 0 && r.assets ? r.assets[0].base64 : r.base64\n              };\n\n              if (image) {\n                setImage([].concat(_toConsumableArray(image), [assets]));\n              } else {\n                setImage([assets]);\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [image]);\n  return React.createElement(View, {\n    style: image && image.length > 0 && {\n      position: 'absolute',\n      bottom: -70,\n      backgroundColor: '#fff'\n    }\n  }, props.replyingTo && React.createElement(Animated.View, {\n    entering: FadeInDown,\n    exiting: FadeOutDown,\n    style: [styles.reply, (_props$replyStyles = props.replyStyles) === null || _props$replyStyles === void 0 ? void 0 : _props$replyStyles.containerStyle]\n  }, React.createElement(View, {\n    style: styles.replyBody\n  }, React.createElement(Text, {\n    style: [styles.replyUsername, (_props$replyStyles2 = props.replyStyles) === null || _props$replyStyles2 === void 0 ? void 0 : _props$replyStyles2.usernameStyle]\n  }, props.replyingTo.user.username), React.createElement(Text, {\n    style: (_props$replyStyles3 = props.replyStyles) === null || _props$replyStyles3 === void 0 ? void 0 : _props$replyStyles3.labelStyle\n  }, cuttedText)), propsContext.footerProps.closeReplyButton ? propsContext.footerProps.closeReplyButton(props) : React.createElement(Button, {\n    title: \"cancel\",\n    onPress: props.onPressCancelReply\n  })), renderMenu(), React.createElement(View, {\n    style: [styles.container, props.containerStyle]\n  }, image && image.length > 0 && React.createElement(ScrollView, {\n    horizontal: true,\n    pagingEnabled: true\n  }, image.map(function (_image) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return setImage(function (prev) {\n          return prev && prev.filter(function (v) {\n            return v !== _image;\n          });\n        });\n      },\n      style: styles.media\n    }, React.createElement(ImageBackground, {\n      style: [styles.mediaOverlay, {\n        marginBottom: 15\n      }],\n      source: {\n        uri: _image.uri\n      },\n      imageStyle: {\n        borderRadius: 15\n      }\n    }, React.createElement(View, {\n      style: styles.media\n    }, React.createElement(View, {\n      style: styles.imageClearButton\n    }, React.createElement(Text, {\n      style: {\n        color: '#fff',\n        textAlign: 'center'\n      }\n    }, \"x\")))));\n  }), React.createElement(TouchableOpacity, {\n    onPress: onPressImage\n  }, React.createElement(View, {\n    style: styles.addMore\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      color: '#ccc'\n    }\n  }, \"+\")))), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    }\n  }, React.createElement(TextInput, {\n    value: (_props$value = props.value) !== null && _props$value !== void 0 ? _props$value : message,\n    onChangeText: onChangeText,\n    style: [propsContext !== null && propsContext !== void 0 && propsContext.enableImageUploads ? styles.shortedTextInput : styles.textInput, props === null || props === void 0 ? void 0 : props.inputStyle],\n    placeholder: (_props$placeholder = props === null || props === void 0 ? void 0 : props.placeholder) !== null && _props$placeholder !== void 0 ? _props$placeholder : 'Type a message...',\n    onKeyPress: function onKeyPress(e) {\n      return _onKeyPress(e.nativeEvent.key);\n    }\n  }), (propsContext === null || propsContext === void 0 ? void 0 : propsContext.enableImageUploads) && React.createElement(React.Fragment, null, props !== null && props !== void 0 && props.renderImageAction ? props.renderImageAction({\n    onPressImage: onPressImage\n  }) : React.createElement(TouchableOpacity, {\n    onPress: onPressImage,\n    style: {\n      paddingHorizontal: 10\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20\n    }\n  }, \"\\uD83D\\uDCF7\"))), props !== null && props !== void 0 && props.sendButton ? props.sendButton({\n    onPressSend: onPressSend\n  }) : React.createElement(Button, {\n    title: \"Send\",\n    onPress: onPressSend,\n    color: \"#0084ff\"\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    padding: 10\n  },\n  textInput: {\n    padding: 10,\n    width: '80%',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  },\n  shortedTextInput: {\n    padding: 10,\n    width: '70%',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  },\n  button: {\n    width: '20%',\n    backgroundColor: '#fcba03'\n  },\n  reply: {\n    flexDirection: 'row',\n    padding: 10,\n    backgroundColor: '#f5f5f5',\n    borderLeftColor: '#c8faaf',\n    borderLeftWidth: 6\n  },\n  replyBody: {\n    flex: 1\n  },\n  replyUsername: {\n    fontWeight: 'bold'\n  },\n  addMore: {\n    width: 100,\n    height: 100,\n    borderWidth: 1,\n    borderStyle: 'dashed',\n    borderRadius: 15,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: '#ccc'\n  },\n  imageClearButton: {\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    width: 18,\n    height: 18,\n    marginLeft: 10,\n    marginTop: 5,\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignContent: 'center'\n  },\n  media: {\n    width: 110,\n    height: 100,\n    borderRadius: 15,\n    marginRight: 10,\n    marginBottom: 10\n  },\n  mediaOverlay: {\n    width: 100,\n    height: 100,\n    backgroundColor: 'rgba(0,0,0,0.2)',\n    borderRadius: 15\n  },\n  mentionContainer: {\n    position: 'absolute',\n    bottom: 50,\n    width: '100%',\n    padding: 10,\n    backgroundColor: '#E5EEFA'\n  },\n  mentionLabel: {\n    padding: 10,\n    color: '#1939B7'\n  }\n});\nexport var Footer = React.memo(_Footer);","map":{"version":3,"sources":["Footer.tsx"],"names":["propsContext","useContext","useState","cuttedText","useMemo","props","onChangeText","useCallback","text","foundedMentions","word","mention","console","setFoundedMentions","setMessage","onPressSend","repliedTo","media","image","setImage","onPressMention","target","prev","messagesArray","lastMessageIndex","lastMessage","renderMenu","message","splittedWords","styles","mentionContainer","mentionLabel","onKeyPress","key","onPressImage","selectImage","r","assets","type","MediaType","uri","base64","position","bottom","backgroundColor","replyBody","labelStyle","onPressCancelReply","_image","v","marginBottom","borderRadius","imageClearButton","color","textAlign","addMore","fontSize","flexDirection","alignItems","e","paddingHorizontal","container","padding","textInput","width","borderWidth","borderColor","shortedTextInput","button","reply","borderLeftColor","borderLeftWidth","flex","replyUsername","fontWeight","height","borderStyle","justifyContent","marginLeft","marginTop","alignContent","marginRight","mediaOverlay","Footer","React"],"mappings":"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","sourcesContent":["import React, { useCallback, useContext, useMemo, useState } from 'react';\nimport {\n  Button,\n  ImageBackground,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n} from 'react-native';\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler';\nimport Animated, { FadeInDown, FadeOutDown } from 'react-native-reanimated';\nimport { PropsContext } from './Chatty';\nimport { IFooterProps, IMedia, MediaType } from './types/Chatty.types';\nimport { selectImage } from './utils/imagePicker';\n\nfunction _Footer(props: IFooterProps) {\n  const propsContext = useContext(PropsContext);\n  const [message, setMessage] = useState<string>('');\n  const [mentions] = useState(['JohnDoe']);\n  const [foundedMentions, setFoundedMentions] = useState<string[]>([]);\n  const [image, setImage] = useState<IMedia[] | undefined>();\n\n  const cuttedText = useMemo(() => {\n    if (props.replyingTo) {\n      return props.replyingTo.text.slice(0, 100) + '...';\n    }\n\n    return null;\n  }, [props?.replyingTo]);\n\n  const onChangeText = useCallback(\n    (text: string) => {\n      const foundedMentions: string[] = [];\n\n      // Iterate over all text\n      text.split(' ').forEach((word) => {\n        foundedMentions.push(\n          // Check and push if word exists in mentions\n          ...mentions.filter((mention) => {\n            console.log(text, mention.indexOf(word));\n            return (\n              mention\n                .toLowerCase()\n                .indexOf(word.toLowerCase().replace('@', '')) != -1\n            );\n          })\n        );\n      });\n\n      setFoundedMentions(foundedMentions);\n\n      props.onChangeText(text);\n      setMessage(text);\n    },\n    [props, mentions]\n  );\n\n  const onPressSend = useCallback(() => {\n    props.onPressSend({\n      text: message,\n      repliedTo: props.replyingTo,\n      media: image,\n    });\n    setMessage('');\n    setImage([]);\n  }, [message, props, image]);\n\n  const onPressMention = (target: string) => {\n    setMessage((prev) => {\n      const messagesArray = prev.split(' ');\n      const lastMessageIndex = messagesArray.length - 1;\n      const lastMessage = messagesArray[lastMessageIndex];\n\n      prev = prev.replace(lastMessage, '@' + target);\n\n      return prev;\n    });\n\n    setFoundedMentions([]);\n  };\n\n  const renderMenu = useCallback(() => {\n    if (message && foundedMentions.length > 0) {\n      const splittedWords = message.split(' ');\n\n      if (splittedWords[splittedWords.length - 1].startsWith('@')) {\n        return (\n          <Animated.View\n            entering={FadeInDown}\n            exiting={FadeOutDown}\n            style={\n              props.mentionStyles?.containerStyle ?? styles.mentionContainer\n            }\n          >\n            {foundedMentions.map((mention) => (\n              <TouchableOpacity onPress={() => onPressMention(mention)}>\n                <Text\n                  style={props.mentionStyles?.labelStyle ?? styles.mentionLabel}\n                >\n                  @{mention}\n                </Text>\n              </TouchableOpacity>\n            ))}\n          </Animated.View>\n        );\n      }\n    }\n\n    return null;\n  }, [\n    foundedMentions,\n    message,\n    props.mentionStyles?.containerStyle,\n    props.mentionStyles?.labelStyle,\n  ]);\n\n  const onKeyPress = useCallback((key: string) => {\n    if (key === ' ') {\n      setFoundedMentions([]);\n    }\n  }, []);\n\n  const onPressImage = useCallback(async () => {\n    selectImage().then((r) => {\n      const assets = {\n        type: MediaType.Image,\n        uri: r?.assets ? r.assets[0].uri : r.uri,\n        base64: r?.assets ? r.assets[0].base64 : r.base64,\n      };\n      if (image) {\n        setImage([...image, assets]);\n      } else {\n        setImage([assets]);\n      }\n    });\n  }, [image]);\n\n  return (\n    <View\n      style={\n        image &&\n        image.length > 0 && {\n          position: 'absolute',\n          bottom: -70,\n          backgroundColor: '#fff',\n        }\n      }\n    >\n      {props.replyingTo && (\n        <Animated.View\n          entering={FadeInDown}\n          exiting={FadeOutDown}\n          style={[styles.reply, props.replyStyles?.containerStyle]}\n        >\n          <View style={styles.replyBody}>\n            <Text\n              style={[styles.replyUsername, props.replyStyles?.usernameStyle]}\n            >\n              {props.replyingTo.user.username}\n            </Text>\n            <Text style={props.replyStyles?.labelStyle}>{cuttedText}</Text>\n          </View>\n          {propsContext.footerProps.closeReplyButton ? (\n            propsContext.footerProps.closeReplyButton(props)\n          ) : (\n            <Button title=\"cancel\" onPress={props.onPressCancelReply} />\n          )}\n        </Animated.View>\n      )}\n\n      {renderMenu()}\n\n      <View style={[styles.container, props.containerStyle]}>\n        {image && image.length > 0 && (\n          <ScrollView horizontal pagingEnabled>\n            {image.map((_image) => (\n              <TouchableOpacity\n                onPress={() =>\n                  setImage((prev) => prev && prev.filter((v) => v !== _image))\n                }\n                style={styles.media}\n              >\n                <ImageBackground\n                  style={[styles.mediaOverlay, { marginBottom: 15 }]}\n                  source={{ uri: _image.uri }}\n                  imageStyle={{\n                    borderRadius: 15,\n                  }}\n                >\n                  <View style={styles.media}>\n                    <View style={styles.imageClearButton}>\n                      <Text style={{ color: '#fff', textAlign: 'center' }}>\n                        x\n                      </Text>\n                    </View>\n                  </View>\n                </ImageBackground>\n              </TouchableOpacity>\n            ))}\n\n            <TouchableOpacity onPress={onPressImage}>\n              <View style={styles.addMore}>\n                <Text style={{ fontSize: 20, color: '#ccc' }}>+</Text>\n              </View>\n            </TouchableOpacity>\n          </ScrollView>\n        )}\n\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <TextInput\n            value={props.value ?? message}\n            onChangeText={onChangeText}\n            style={[\n              propsContext?.enableImageUploads\n                ? styles.shortedTextInput\n                : styles.textInput,\n\n              props?.inputStyle,\n            ]}\n            placeholder={props?.placeholder ?? 'Type a message...'}\n            onKeyPress={(e) => onKeyPress(e.nativeEvent.key)}\n          />\n\n          {propsContext?.enableImageUploads && (\n            <>\n              {props?.renderImageAction ? (\n                props.renderImageAction({\n                  onPressImage,\n                })\n              ) : (\n                <TouchableOpacity\n                  onPress={onPressImage}\n                  style={{ paddingHorizontal: 10 }}\n                >\n                  <Text style={{ fontSize: 20 }}>📷</Text>\n                </TouchableOpacity>\n              )}\n            </>\n          )}\n\n          {props?.sendButton ? (\n            props.sendButton({\n              onPressSend: onPressSend,\n            })\n          ) : (\n            <Button title=\"Send\" onPress={onPressSend} color=\"#0084ff\" />\n          )}\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 10,\n  },\n  textInput: {\n    padding: 10,\n    width: '80%',\n    borderWidth: 1,\n    borderColor: '#ccc',\n  },\n  shortedTextInput: {\n    padding: 10,\n    width: '70%',\n    borderWidth: 1,\n    borderColor: '#ccc',\n  },\n  button: {\n    width: '20%',\n    backgroundColor: '#fcba03',\n  },\n  reply: {\n    flexDirection: 'row',\n    padding: 10,\n    backgroundColor: '#f5f5f5',\n    borderLeftColor: '#c8faaf',\n    borderLeftWidth: 6,\n  },\n  replyBody: {\n    flex: 1,\n  },\n  replyUsername: {\n    fontWeight: 'bold',\n  },\n\n  addMore: {\n    width: 100,\n    height: 100,\n    borderWidth: 1,\n    borderStyle: 'dashed',\n    borderRadius: 15,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: '#ccc',\n  },\n  imageClearButton: {\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    width: 18,\n    height: 18,\n    marginLeft: 10,\n    marginTop: 5,\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignContent: 'center',\n  },\n  media: {\n    width: 110,\n    height: 100,\n    borderRadius: 15,\n    marginRight: 10,\n    marginBottom: 10,\n  },\n  mediaOverlay: {\n    width: 100,\n    height: 100,\n    backgroundColor: 'rgba(0,0,0,0.2)',\n    borderRadius: 15,\n  },\n  mentionContainer: {\n    position: 'absolute',\n    bottom: 50,\n    width: '100%',\n    padding: 10,\n    backgroundColor: '#E5EEFA',\n  },\n  mentionLabel: {\n    padding: 10,\n    color: '#1939B7',\n  },\n});\n\nexport const Footer = React.memo(_Footer);\n"]},"metadata":{},"sourceType":"module"}