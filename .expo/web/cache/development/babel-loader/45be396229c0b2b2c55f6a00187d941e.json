{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default CameraView = function CameraView(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      scanned = _useState4[0],\n      setScanned = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$BarCodeScanner, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(BarCodeScanner.requestPermissionsAsync());\n\n            case 2:\n              _await$BarCodeScanner = _context.sent;\n              status = _await$BarCodeScanner.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref2) {\n    var type = _ref2.type,\n        data = _ref2.data;\n    setScanned(true);\n    alert(\"Bar code with type \" + type + \" and data \" + data + \" has been scanned!\");\n  };\n\n  if (hasPermission === null) {\n    return _jsx(Text, {\n      children: \"Requesting for camera permission\"\n    });\n  }\n\n  if (hasPermission === false) {\n    return _jsx(Text, {\n      children: \"No access to camera\"\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(BarCodeScanner, {\n      onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n      style: StyleSheet.absoluteFillObject\n    }), scanned && _jsx(Button, {\n      title: 'Tap to Scan Again',\n      onPress: function onPress() {\n        return setScanned(false);\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","BarCodeScanner","CameraView","navigation","hasPermission","setHasPermission","scanned","setScanned","requestPermissionsAsync","status","handleBarCodeScanned","type","data","alert","styles","container","undefined","StyleSheet","absoluteFillObject","create","flex","flexDirection","justifyContent"],"sources":["/Users/havardskjaerstein/Desktop/Achive/screens/GroupTab/ScannerScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Text, View, StyleSheet, Button } from 'react-native';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\n\n\nexport default CameraView = ({navigation}) => {\n\n    const [hasPermission, setHasPermission] = useState(null);\n    const [scanned, setScanned] = useState(false);\n  \n    useEffect(() => {\n      (async () => {\n        const { status } = await BarCodeScanner.requestPermissionsAsync();\n        setHasPermission(status === 'granted');\n      })();\n    }, []);\n  \n    const handleBarCodeScanned = ({ type, data }) => {\n      setScanned(true);\n      alert(`Bar code with type ${type} and data ${data} has been scanned!`);\n    };\n  \n    if (hasPermission === null) {\n      return <Text>Requesting for camera permission</Text>;\n    }\n    if (hasPermission === false) {\n      return <Text>No access to camera</Text>;\n    }\n  \n    return (\n      <View style={styles.container}>\n        <BarCodeScanner\n          onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\n          style={StyleSheet.absoluteFillObject}\n        />\n        {scanned && <Button title={'Tap to Scan Again'} onPress={() => setScanned(false)} />}\n      </View>\n    );\n  }\n  \n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'center',\n    },\n  });\n\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,SAASC,cAAT,QAA+B,sBAA/B;;;AAGA,eAAeC,UAAU,GAAG,0BAAkB;EAAA,IAAhBC,UAAgB,QAAhBA,UAAgB;;EAE1C,gBAA0CJ,QAAQ,CAAC,IAAD,CAAlD;EAAA;EAAA,IAAOK,aAAP;EAAA,IAAsBC,gBAAtB;;EACA,iBAA8BN,QAAQ,CAAC,KAAD,CAAtC;EAAA;EAAA,IAAOO,OAAP;EAAA,IAAgBC,UAAhB;;EAEAP,SAAS,CAAC,YAAM;IACd,CAAC;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCAC0BC,cAAc,CAACO,uBAAf,EAD1B;;YAAA;cAAA;cACSC,MADT,yBACSA,MADT;cAECJ,gBAAgB,CAACI,MAAM,KAAK,SAAZ,CAAhB;;YAFD;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAD;EAID,CALQ,EAKN,EALM,CAAT;;EAOA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,QAAoB;IAAA,IAAjBC,IAAiB,SAAjBA,IAAiB;IAAA,IAAXC,IAAW,SAAXA,IAAW;IAC/CL,UAAU,CAAC,IAAD,CAAV;IACAM,KAAK,yBAAuBF,IAAvB,kBAAwCC,IAAxC,wBAAL;EACD,CAHD;;EAKA,IAAIR,aAAa,KAAK,IAAtB,EAA4B;IAC1B,OAAO,KAAC,IAAD;MAAA;IAAA,EAAP;EACD;;EACD,IAAIA,aAAa,KAAK,KAAtB,EAA6B;IAC3B,OAAO,KAAC,IAAD;MAAA;IAAA,EAAP;EACD;;EAED,OACE,MAAC,IAAD;IAAM,KAAK,EAAEU,MAAM,CAACC,SAApB;IAAA,WACE,KAAC,cAAD;MACE,gBAAgB,EAAET,OAAO,GAAGU,SAAH,GAAeN,oBAD1C;MAEE,KAAK,EAAEO,UAAU,CAACC;IAFpB,EADF,EAKGZ,OAAO,IAAI,KAAC,MAAD;MAAQ,KAAK,EAAE,mBAAf;MAAoC,OAAO,EAAE;QAAA,OAAMC,UAAU,CAAC,KAAD,CAAhB;MAAA;IAA7C,EALd;EAAA,EADF;AASD,CAjCH;AAmCE,IAAMO,MAAM,GAAGG,UAAU,CAACE,MAAX,CAAkB;EAC/BJ,SAAS,EAAE;IACTK,IAAI,EAAE,CADG;IAETC,aAAa,EAAE,QAFN;IAGTC,cAAc,EAAE;EAHP;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}