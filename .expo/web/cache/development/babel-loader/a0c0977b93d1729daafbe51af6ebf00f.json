{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useCallback } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nexport var UrlPreviewBubble = function UrlPreviewBubble(props) {\n  var url = props.url,\n      title = props.title,\n      description = props.description,\n      image = props.image;\n  var onPressLink = useCallback(function _callee() {\n    var canOpen;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Linking.canOpenURL(url));\n\n          case 2:\n            canOpen = _context.sent;\n\n            if (canOpen) {\n              Linking.openURL(url);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [url]);\n  return React.createElement(TouchableOpacity, {\n    onPress: onPressLink\n  }, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: styles.previewImage\n  }), React.createElement(View, {\n    style: styles.subContainer\n  }, React.createElement(Text, {\n    style: styles.title\n  }, title), React.createElement(Text, {\n    style: styles.description\n  }, description.slice(0, 50), \"...\"), React.createElement(Text, {\n    style: styles.url\n  }, url))));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    backgroundColor: '#f5f5f5',\n    borderRadius: 10,\n    padding: 10,\n    maxHeight: 100,\n    overflow: 'hidden'\n  },\n  subContainer: {\n    marginLeft: 10\n  },\n  previewImage: {\n    width: 30,\n    height: 30,\n    borderRadius: 10\n  },\n  title: {\n    fontSize: 13,\n    fontWeight: 'bold'\n  },\n  description: {\n    fontSize: 12,\n    color: '#888'\n  },\n  url: {\n    marginTop: 40,\n    color: '#3C91E6'\n  }\n});","map":{"version":3,"sources":["UrlPreviewBubble.tsx"],"names":["UrlPreviewBubble","props","image","onPressLink","useCallback","canOpen","Linking","styles","container","uri","previewImage","subContainer","title","description","url","flexDirection","backgroundColor","borderRadius","padding","maxHeight","overflow","marginLeft","width","height","fontSize","fontWeight","color","marginTop"],"mappings":";AAAA,OAAA,KAAA,IAAA,WAAA,QAAA,OAAA;;;;;;;AAWA,OAAO,IAAMA,gBAAgB,GAAIC,SAApBD,gBAAoBC,CAAAA,KAAD,EAA8B;AAC5D,MAAM,GAAN,GAAA,KAAA,CAAM,GAAN;AAAA,MAAM,KAAN,GAAA,KAAA,CAAM,KAAN;AAAA,MAAM,WAAN,GAAA,KAAA,CAAM,WAAN;AAAA,MAAiCC,KAAjC,GAAA,KAAA,CAAiCA,KAAjC;AAEA,MAAMC,WAAW,GAAGC,WAAW,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACRE,OAAO,CAAPA,UAAAA,CAAtB,GAAsBA,CADQ;;AAAA;AACxBD,YAAAA,OADwB;;AAG9B,gBAAA,OAAA,EAAa;AACXC,cAAAA,OAAO,CAAPA,OAAAA,CAAAA,GAAAA;AACD;;AAL6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAM5B,CANH,GAMG,CAN4B,CAA/B;AAQA,SACE,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA;AAAkB,IAAA,OAAO,EAAEH;AAA3B,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACC;AAApB,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAO,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAEP;AAAP,KAAf;AAA+B,IAAA,KAAK,EAAEK,MAAM,CAACG;AAA7C,GAAA,CADF,EAGE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI;AAApB,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK;AAApB,GAAA,EADF,KACE,CADF,EAEE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM;AAApB,GAAA,EAAkCA,WAAW,CAAXA,KAAAA,CAAAA,CAAAA,EAAlC,EAAkCA,CAAlC,EAFF,KAEE,CAFF,EAGE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACO;AAApB,GAAA,EARR,GAQQ,CAHF,CAHF,CADF,CADF;AAXK,CAAA;AA0BP,IAAMP,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTO,IAAAA,aAAa,EADJ,KAAA;AAETC,IAAAA,eAAe,EAFN,SAAA;AAGTC,IAAAA,YAAY,EAHH,EAAA;AAITC,IAAAA,OAAO,EAJE,EAAA;AAKTC,IAAAA,SAAS,EALA,GAAA;AAMTC,IAAAA,QAAQ,EAAE;AAND,GADoB;AAS/BT,EAAAA,YAAY,EAAE;AACZU,IAAAA,UAAU,EAAE;AADA,GATiB;AAY/BX,EAAAA,YAAY,EAAE;AACZY,IAAAA,KAAK,EADO,EAAA;AAEZC,IAAAA,MAAM,EAFM,EAAA;AAGZN,IAAAA,YAAY,EAAE;AAHF,GAZiB;AAiB/BL,EAAAA,KAAK,EAAE;AACLY,IAAAA,QAAQ,EADH,EAAA;AAELC,IAAAA,UAAU,EAAE;AAFP,GAjBwB;AAqB/BZ,EAAAA,WAAW,EAAE;AACXW,IAAAA,QAAQ,EADG,EAAA;AAEXE,IAAAA,KAAK,EAAE;AAFI,GArBkB;AAyB/BZ,EAAAA,GAAG,EAAE;AACHa,IAAAA,SAAS,EADN,EAAA;AAEHD,IAAAA,KAAK,EAAE;AAFJ;AAzB0B,CAAlB,CAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport {\n  Image,\n  Linking,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport type { IUrlPreviewBubble } from 'src/types/Chatty.types';\n\nexport const UrlPreviewBubble = (props: IUrlPreviewBubble) => {\n  const { url, title, description, image } = props;\n\n  const onPressLink = useCallback(async () => {\n    const canOpen = await Linking.canOpenURL(url);\n\n    if (canOpen) {\n      Linking.openURL(url);\n    }\n  }, [url]);\n\n  return (\n    <TouchableOpacity onPress={onPressLink}>\n      <View style={styles.container}>\n        <Image source={{ uri: image }} style={styles.previewImage} />\n\n        <View style={styles.subContainer}>\n          <Text style={styles.title}>{title}</Text>\n          <Text style={styles.description}>{description.slice(0, 50)}...</Text>\n          <Text style={styles.url}>{url}</Text>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    backgroundColor: '#f5f5f5',\n    borderRadius: 10,\n    padding: 10,\n    maxHeight: 100,\n    overflow: 'hidden',\n  },\n  subContainer: {\n    marginLeft: 10,\n  },\n  previewImage: {\n    width: 30,\n    height: 30,\n    borderRadius: 10,\n  },\n  title: {\n    fontSize: 13,\n    fontWeight: 'bold',\n  },\n  description: {\n    fontSize: 12,\n    color: '#888',\n  },\n  url: {\n    marginTop: 40,\n    color: '#3C91E6',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}