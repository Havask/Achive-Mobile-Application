{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ColorPicker from \"./ColorPicker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar StatusColorPicker = function (_Component) {\n  _inherits(StatusColorPicker, _Component);\n\n  var _super = _createSuper(StatusColorPicker);\n\n  function StatusColorPicker() {\n    var _this;\n\n    _classCallCheck(this, StatusColorPicker);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      colors: _this.props.colors,\n      selectedColor: _this.props.selectedColor,\n      text: _this.props.text,\n      backupColor: _this.props.selectedColor,\n      backupText: _this.props.text\n    };\n\n    _this.onSelect = function (color) {\n      return _this.setState({\n        selectedColor: color\n      });\n    };\n\n    _this.cancel = function () {\n      _this.setState({\n        selectedColor: _this.state.backupColor,\n        text: _this.state.backupText\n      });\n\n      _this.props.onCancel();\n    };\n\n    _this.ok = function () {\n      _this.setState({\n        backupText: _this.state.text,\n        backupColor: _this.state.selectedColor\n      });\n\n      _this.props.onOk({\n        selectedColor: _this.state.selectedColor,\n        text: _this.state.text\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(StatusColorPicker, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsx(Modal, {\n        animationType: \"fade\",\n        transparent: true,\n        visible: this.props.visible,\n        children: _jsx(View, {\n          style: styles.container,\n          children: _jsxs(View, {\n            style: styles.card,\n            children: [_jsx(ColorPicker, {\n              colors: this.state.colors,\n              selectedColor: this.state.selectedColor,\n              onSelect: this.onSelect\n            }), _jsxs(View, {\n              style: {\n                flexDirection: 'row'\n              },\n              children: [_jsx(View, {\n                style: {\n                  width: 10,\n                  backgroundColor: this.state.selectedColor\n                }\n              }), _jsx(TextInput, {\n                placeholder: \"Text\",\n                multiline: true,\n                defaultValue: this.state.text,\n                onChangeText: function onChangeText(text) {\n                  return _this2.setState({\n                    text: text\n                  });\n                },\n                underlineColorAndroid: \"#0000\",\n                style: styles.textInput\n              })]\n            }), _jsxs(View, {\n              style: styles.actionsContainer,\n              children: [_jsx(TouchableOpacity, {\n                style: styles.actionContainer,\n                onPress: this.cancel,\n                children: _jsx(Text, {\n                  children: \"CANCEL\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: styles.actionContainer,\n                onPress: this.ok,\n                children: _jsx(Text, {\n                  children: \"OK\"\n                })\n              })]\n            })]\n          })\n        })\n      });\n    }\n  }]);\n\n  return StatusColorPicker;\n}(Component);\n\nexport { StatusColorPicker as default };\nvar screenWidth = Dimensions.get('window').width;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#0004',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  card: {\n    width: screenWidth - 40,\n    backgroundColor: '#fff'\n  },\n  textInput: {\n    padding: 15,\n    fontSize: 18,\n    flex: 1,\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderColor: '#eee'\n  },\n  actionsContainer: {\n    flexDirection: 'row'\n  },\n  actionContainer: {\n    flex: 1,\n    padding: 15,\n    alignItems: 'center',\n    borderRightWidth: 1,\n    borderColor: '#eee'\n  }\n});","map":{"version":3,"names":["React","Component","ColorPicker","StatusColorPicker","state","colors","props","selectedColor","text","backupColor","backupText","onSelect","color","setState","cancel","onCancel","ok","onOk","visible","styles","container","card","flexDirection","width","backgroundColor","textInput","actionsContainer","actionContainer","screenWidth","Dimensions","get","StyleSheet","create","flex","alignItems","justifyContent","padding","fontSize","borderTopWidth","borderBottomWidth","borderColor","borderRightWidth"],"sources":["/Users/havardskjaerstein/Desktop/Achive/node_modules/react-native-status-color-picker/lib/StatusColorPicker.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  Dimensions,\r\n  Modal,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  View,\r\n  StyleSheet,\r\n} from 'react-native';\r\nimport ColorPicker from './ColorPicker';\r\n\r\nexport default class StatusColorPicker extends Component {\r\n  state = {\r\n    colors: this.props.colors,\r\n    selectedColor: this.props.selectedColor,\r\n    text: this.props.text,\r\n    backupColor: this.props.selectedColor,\r\n    backupText: this.props.text,\r\n  };\r\n\r\n  onSelect = color => this.setState({ selectedColor: color });\r\n\r\n  cancel = () => {\r\n    this.setState({\r\n      selectedColor: this.state.backupColor,\r\n      text: this.state.backupText,\r\n    });\r\n    this.props.onCancel();\r\n  }\r\n\r\n  ok = () => {\r\n    this.setState({\r\n      backupText: this.state.text,\r\n      backupColor: this.state.selectedColor,\r\n    });\r\n    this.props.onOk({\r\n      selectedColor: this.state.selectedColor,\r\n      text: this.state.text,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        animationType=\"fade\"\r\n        transparent={true}\r\n        visible={this.props.visible}>\r\n        <View style={styles.container}>\r\n          <View style={styles.card}>\r\n            <ColorPicker\r\n              colors={this.state.colors}\r\n              selectedColor={this.state.selectedColor}\r\n              onSelect={this.onSelect}\r\n            />\r\n            <View style={{ flexDirection: 'row' }}>\r\n              <View\r\n                style={{\r\n                  width: 10,\r\n                  backgroundColor: this.state.selectedColor,\r\n                }}\r\n              />\r\n              <TextInput\r\n                placeholder=\"Text\"\r\n                multiline={true}\r\n                defaultValue={this.state.text}\r\n                onChangeText={text => this.setState({ text })}\r\n                underlineColorAndroid=\"#0000\"\r\n                style={styles.textInput}\r\n              />\r\n            </View>\r\n            <View style={styles.actionsContainer}>\r\n              <TouchableOpacity\r\n                style={styles.actionContainer}\r\n                onPress={this.cancel}>\r\n                <Text>CANCEL</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={styles.actionContainer}\r\n                onPress={this.ok}>\r\n                <Text>OK</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst screenWidth = Dimensions.get('window').width;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#0004',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  card: {\r\n    width: screenWidth - 40,\r\n    backgroundColor: '#fff',\r\n  },\r\n  textInput: {\r\n    padding: 15,\r\n    fontSize: 18,\r\n    flex: 1,\r\n    borderTopWidth: 1,\r\n    borderBottomWidth: 1,\r\n    borderColor: '#eee',\r\n  },\r\n  actionsContainer: {\r\n    flexDirection: 'row',\r\n  },\r\n  actionContainer: {\r\n    flex: 1,\r\n    padding: 15,\r\n    alignItems: 'center',\r\n    borderRightWidth: 1,\r\n    borderColor: '#eee',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}