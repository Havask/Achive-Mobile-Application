{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext } from \"react\";\nimport styled from \"styled-components/native\";\nimport Text from \"../../components/Text.js\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { FirebaseContext } from \"../../context/FirebaseContext\";\nimport { UserContext } from \"../../context/UserContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default NewEmailScreen = function NewEmailScreen(_ref) {\n  var navigation = _ref.navigation;\n  var firebase = useContext(FirebaseContext);\n\n  var _useContext = useContext(UserContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      _ = _useContext2[0],\n      setUser = _useContext2[1];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      NewEmail = _useState4[0],\n      setNewEmail = _useState4[1];\n\n  var UpdateUserEmail = function UpdateUserEmail() {\n    return _regeneratorRuntime.async(function UpdateUserEmail$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(firebase.UpdateEmail(NewEmail));\n\n          case 2:\n            setUser({\n              email: NewEmail\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(Container, {\n    children: _jsx(ScrollView, {\n      children: _jsxs(KeyboardAvoidingView, {\n        children: [_jsx(Main, {\n          children: _jsx(Text, {\n            title: true,\n            semi: true,\n            center: true,\n            color: \"#88d498\",\n            children: \"New Email:\"\n          })\n        }), _jsx(Auth, {\n          children: _jsxs(AuthContainer, {\n            children: [_jsx(AuthTitle, {\n              children: \" New Email:\"\n            }), _jsx(AuthField, {\n              keyboardType: \"email-address\",\n              onChangeText: function onChangeText(NewEmail) {\n                return setNewEmail(NewEmail.trim());\n              },\n              value: NewEmail\n            })]\n          })\n        }), _jsx(SignUpContainer, {\n          onPress: UpdateUserEmail,\n          disable: loading,\n          children: loading ? _jsx(Loading, {}) : _jsx(Text, {\n            bold: true,\n            center: true,\n            color: \"#ffffff\",\n            children: \"Update Email\"\n          })\n        })]\n      })\n    })\n  });\n};\nvar Container = styled.KeyboardAvoidingView(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n    flex: 1; \\n\"])));\nvar Main = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  margin-top: 80px; \\n  margin-bottom: 50px; \\n\"])));\nvar Auth = styled.View(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  margin: 16px 32px 32px; \\n\"])));\nvar AuthContainer = styled.View(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 32px;\\n\"])));\nvar AuthTitle = styled(Text)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n  color: #8e93a1;\\n  font-size: 12px; \\n  text-transform: uppercase; \\n  font-weight: 300; \\n\"])));\nvar AuthField = styled.TextInput(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n  border-bottom-color: #8e93a1; \\n  border-bottom-width: 1px;\\n  height: 48px; \\n\"])));\nvar SignUpContainer = styled.TouchableOpacity(_templateObject7 || (_templateObject7 = _taggedTemplateLiteralLoose([\"\\n  margin: 0 32px; \\n  height: 48px; \\n  align-items: center; \\n  justify-content: center; \\n  background-color: #88d498;\\n  border-radius: 6px;\\n\"])));\nvar Loading = styled.ActivityIndicator.attrs(function (props) {\n  return {\n    color: \"#fffffff\",\n    size: \"small\"\n  };\n})(_templateObject8 || (_templateObject8 = _taggedTemplateLiteralLoose([\"\"])));","map":{"version":3,"sources":["/home/havard/Desktop/Achive/screens/settingTab/NewEmailScreen.js"],"names":["React","useState","useContext","styled","Text","FirebaseContext","UserContext","NewEmailScreen","navigation","firebase","_","setUser","loading","setLoading","NewEmail","setNewEmail","UpdateUserEmail","UpdateEmail","email","trim","Container","KeyboardAvoidingView","Main","View","Auth","AuthContainer","AuthTitle","AuthField","TextInput","SignUpContainer","TouchableOpacity","Loading","ActivityIndicator","attrs","props","color","size"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP;;;AAEA,SAAQC,eAAR;AACA,SAAQC,WAAR;;;AAGA,eAAeC,cAAc,GAAG,8BAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;AAEhD,MAAMC,QAAQ,GAAGP,UAAU,CAACG,eAAD,CAA3B;;AACA,oBAAqBH,UAAU,CAACI,WAAD,CAA/B;AAAA;AAAA,MAAOI,CAAP;AAAA,MAAUC,OAAV;;AAEA,kBAA8BV,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOW,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAgCZ,QAAQ,EAAxC;AAAA;AAAA,MAAOa,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEhBP,QAAQ,CAACQ,WAAT,CAAqBH,QAArB,CAFgB;;AAAA;AAGtBH,YAAAA,OAAO,CAAC;AACNO,cAAAA,KAAK,EAAEJ;AADD,aAAD,CAAP;;AAHsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAQA,SACE,KAAC,SAAD;AAAA,cACE,KAAC,UAAD;AAAA,gBACA,MAAC,oBAAD;AAAA,mBACC,KAAC,IAAD;AAAA,oBACE,KAAC,IAAD;AAAM,YAAA,KAAK,MAAX;AAAY,YAAA,IAAI,MAAhB;AAAiB,YAAA,MAAM,MAAvB;AAAwB,YAAA,KAAK,EAAC,SAA9B;AAAA;AAAA;AADF,UADD,EAME,KAAC,IAAD;AAAA,oBACE,MAAC,aAAD;AAAA,uBACE,KAAC,SAAD;AAAA;AAAA,cADF,EAEE,KAAC,SAAD;AACE,cAAA,YAAY,EAAC,eADf;AAEE,cAAA,YAAY,EAAE,sBAACA,QAAD;AAAA,uBAAcC,WAAW,CAACD,QAAQ,CAACK,IAAT,EAAD,CAAzB;AAAA,eAFhB;AAGE,cAAA,KAAK,EAAEL;AAHT,cAFF;AAAA;AADF,UANF,EAiBE,KAAC,eAAD;AAAiB,UAAA,OAAO,EAAEE,eAA1B;AAA2C,UAAA,OAAO,EAAEJ,OAApD;AAAA,oBACGA,OAAO,GAAI,KAAC,OAAD,KAAJ,GACR,KAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,MAAM,MAAjB;AAAkB,YAAA,KAAK,EAAC,SAAxB;AAAA;AAAA;AAFF,UAjBF;AAAA;AADA;AADF,IADF;AA8BD,CA9CD;AAgDA,IAAMQ,SAAS,GAAGjB,MAAM,CAACkB,oBAAV,2FAAf;AAIA,IAAMC,IAAI,GAAGnB,MAAM,CAACoB,IAAV,6HAAV;AAKA,IAAMC,IAAI,GAAGrB,MAAM,CAACoB,IAAV,0GAAV;AAIA,IAAME,aAAa,GAAGtB,MAAM,CAACoB,IAAV,sGAAnB;AAIA,IAAMG,SAAS,GAAGvB,MAAM,CAACC,IAAD,CAAT,2KAAf;AAOA,IAAMuB,SAAS,GAAGxB,MAAM,CAACyB,SAAV,+JAAf;AAMA,IAAMC,eAAe,GAAG1B,MAAM,CAAC2B,gBAAV,+NAArB;AASA,IAAMC,OAAO,GAAG5B,MAAM,CAAC6B,iBAAP,CAAyBC,KAAzB,CAA+B,UAAAC,KAAK;AAAA,SAAK;AACvDC,IAAAA,KAAK,EAAE,UADgD;AAEvDC,IAAAA,IAAI,EAAE;AAFiD,GAAL;AAAA,CAApC,CAAH,4EAAb","sourcesContent":["import React, {useState, useContext} from \"react\";\nimport styled from \"styled-components/native\"; \nimport Text from \"../../components/Text.js\";\nimport { KeyboardAvoidingView, ScrollView} from \"react-native\";\nimport {FirebaseContext} from \"../../context/FirebaseContext\";\nimport {UserContext} from \"../../context/UserContext\";\n\n// lag en back buttom\nexport default NewEmailScreen = ({navigation}) => {\n\n  const firebase = useContext(FirebaseContext); \n  const [_, setUser] = useContext(UserContext); \n  \n  const [loading, setLoading] = useState(false); \n  const [NewEmail, setNewEmail] = useState(); \n\n  const UpdateUserEmail = async () => {\n\n    await firebase.UpdateEmail(NewEmail); \n    setUser({\n      email: NewEmail, \n    })\n  }; \n\n  return(\n    <Container>\n      <ScrollView>\n      <KeyboardAvoidingView>\n       <Main>\n         <Text title semi center color=\"#88d498\">\n              New Email: \n         </Text>\n        </Main>\n        <Auth>\n          <AuthContainer>\n            <AuthTitle> New Email:</AuthTitle>\n            <AuthField \n              keyboardType=\"email-address\"\n              onChangeText={(NewEmail) => setNewEmail(NewEmail.trim())}\n              value={NewEmail}\n            />\n          </AuthContainer>\n        </Auth>\n        \n        <SignUpContainer onPress={UpdateUserEmail} disable={loading}>\n          {loading ? (<Loading/>) : (\n          <Text bold center color=\"#ffffff\">\n            Update Email</Text>\n          )}\n        </SignUpContainer>\n        </KeyboardAvoidingView>\n      </ScrollView>\n     </Container>\n    );\n}\n\nconst Container = styled.KeyboardAvoidingView`\n    flex: 1; \n`;\n\nconst Main = styled.View`\n  margin-top: 80px; \n  margin-bottom: 50px; \n`;\n\nconst Auth = styled.View`\n  margin: 16px 32px 32px; \n`; \n\nconst AuthContainer = styled.View`\n  margin-bottom: 32px;\n`; \n\nconst AuthTitle = styled(Text)`\n  color: #8e93a1;\n  font-size: 12px; \n  text-transform: uppercase; \n  font-weight: 300; \n`; \n\nconst AuthField = styled.TextInput`\n  border-bottom-color: #8e93a1; \n  border-bottom-width: 1px;\n  height: 48px; \n`; \n\nconst SignUpContainer = styled.TouchableOpacity`\n  margin: 0 32px; \n  height: 48px; \n  align-items: center; \n  justify-content: center; \n  background-color: #88d498;\n  border-radius: 6px;\n`;\n\nconst Loading = styled.ActivityIndicator.attrs(props => ({\n  color: \"#fffffff\",\n  size: \"small\", \n}))``; \n"]},"metadata":{},"sourceType":"module"}