{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport Colors from \"../constants/colors.js\";\nimport { auth } from \"../config/Firebase.js\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { useContext } from \"react\";\nimport styled from \"styled-components/native\";\nimport Text from \"../components/Text.js\";\nimport { FirebaseContext } from \"../context/FirebaseContext\";\nimport { UserContext } from \"../context/UserContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default LogInScreen = function LogInScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var firebase = useContext(FirebaseContext);\n\n  var _useContext = useContext(UserContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      _ = _useContext2[0],\n      setUser = _useContext2[1];\n\n  var LogIn = function LogIn() {\n    return _regeneratorRuntime.async(function LogIn$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            setUser({\n              isLoggedIn: true\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(Container, {\n    children: _jsxs(Main, {\n      children: [_jsx(Text, {\n        title: true,\n        semi: true,\n        center: true,\n        color: \"#88d498\",\n        children: \"Achive\"\n      }), _jsxs(Auth, {\n        children: [_jsxs(AuthContainer, {\n          children: [_jsx(AuthTitle, {\n            children: \"Email address\"\n          }), _jsx(AuthField, {\n            autoCapitalize: \"none\",\n            autoCompleteType: \"email\",\n            autocorrect: false,\n            autoFocus: true,\n            keyboardType: \"email-address\",\n            value: email,\n            onChangeText: function onChangeText(email) {\n              return setEmail(email.trim());\n            }\n          })]\n        }), _jsxs(AuthContainer, {\n          children: [_jsx(AuthTitle, {\n            children: \"password\"\n          }), _jsx(AuthField, {\n            autoCapitalize: \"none\",\n            autoCompleteType: \"password\",\n            autocorrect: false,\n            autoFocus: true,\n            secureTextEntry: true,\n            value: password,\n            onChangeText: function onChangeText(password) {\n              return setPassword(password.trim());\n            }\n          })]\n        })]\n      }), _jsx(SignInContainer, {\n        onPress: LogIn,\n        disable: loading,\n        children: loading ? _jsx(Loading, {}) : _jsx(Text, {\n          bold: true,\n          center: true,\n          color: \"#ffffff\",\n          children: \"Sign In\"\n        })\n      }), _jsx(SignUp, {\n        onPress: function onPress() {\n          return navigation.push(\"SignUpScreen\");\n        },\n        children: _jsxs(Text, {\n          small: true,\n          center: true,\n          children: [\"New to Achive? \", _jsx(Text, {\n            bold: true,\n            color: \"#88d498\",\n            children: \"Sign Up\"\n          })]\n        })\n      })]\n    })\n  });\n};\nvar Logo = styled.Image(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n\\n\"])));\nvar Container = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n\\n    flex: 1; \\n\"])));\nvar Main = styled.View(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n\\n  margin-top: 192px; \\n\"])));\nvar Auth = styled.View(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  margin: 64px 32px 32px; \\n\"])));\nvar AuthContainer = styled.View(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 32px;\\n\"])));\nvar AuthTitle = styled(Text)(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n  color: #8e93a1;\\n  font-size: 12px; \\n  text-transform: uppercase; \\n  font-weight: 300; \\n\"])));\nvar AuthField = styled.TextInput(_templateObject7 || (_templateObject7 = _taggedTemplateLiteralLoose([\"\\n  border-bottom-color: #8e93a1; \\n  border-bottom-width: 1px;\\n  height: 48px; \\n\"])));\nvar SignInContainer = styled.TouchableOpacity(_templateObject8 || (_templateObject8 = _taggedTemplateLiteralLoose([\"\\n  margin: 0 32px; \\n  height: 48px; \\n  align-items: center; \\n  justify-content: center; \\n  background-color: #88d498;\\n  border-radius: 6px;\\n\\n\"])));\nvar SignUp = styled.TouchableOpacity(_templateObject9 || (_templateObject9 = _taggedTemplateLiteralLoose([\"\\n  margin-top: 16px; \\n\"])));\nvar Loading = styled.ActivityIndicator.attrs(function (props) {\n  return {\n    color: \"#fffffff\",\n    size: \"small\"\n  };\n})(_templateObject10 || (_templateObject10 = _taggedTemplateLiteralLoose([\"\"])));","map":{"version":3,"sources":["/home/havard/Desktop/Achive/screens/logInScreen.js"],"names":["React","useState","Colors","auth","signInWithEmailAndPassword","useContext","styled","Text","FirebaseContext","UserContext","LogInScreen","navigation","email","setEmail","password","setPassword","loading","setLoading","firebase","_","setUser","LogIn","isLoggedIn","trim","push","Logo","Image","Container","View","Main","Auth","AuthContainer","AuthTitle","AuthField","TextInput","SignInContainer","TouchableOpacity","SignUp","Loading","ActivityIndicator","attrs","props","color","size"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport Colors from \"../constants/colors.js\";\nimport { auth } from \"../config/Firebase.js\";\nimport {signInWithEmailAndPassword} from \"firebase/auth\"; \nimport { useContext } from \"react\";\nimport styled from \"styled-components/native\"; \nimport Text from \"../components/Text.js\";\nimport {FirebaseContext} from \"../context/FirebaseContext\";\nimport {UserContext} from \"../context/UserContext\";\n\nexport default LogInScreen = ({navigation}) => {\n\n\n  const [email, setEmail] = useState(); \n  const [password, setPassword] = useState(); \n  const [loading, setLoading] = useState(false); \n  const firebase = useContext(FirebaseContext); \n  const [_, setUser] = useContext(UserContext); \n\n  const LogIn = async () => {\n\n    setLoading(true);\n    setUser({isLoggedIn: true}); \n  };\n\n    return(\n     <Container>\n       <Main>\n         \n         <Text title semi center color=\"#88d498\">\n              Achive\n         </Text>\n\n        <Auth>\n          <AuthContainer>\n            <AuthTitle>Email address</AuthTitle>\n            <AuthField \n              autoCapitalize=\"none\" \n              autoCompleteType=\"email\" \n              autocorrect={false} \n              autoFocus={true} \n              keyboardType=\"email-address\"\n              value={email}\n              onChangeText={email => setEmail(email.trim())}\n              />\n          </AuthContainer>\n\n          <AuthContainer>\n            <AuthTitle>password</AuthTitle>\n            <AuthField \n              autoCapitalize=\"none\" \n              autoCompleteType=\"password\" \n              autocorrect={false} \n              autoFocus={true} \n              secureTextEntry={true}\n              value={password}\n              onChangeText={password => setPassword(password.trim())}\n              />\n          </AuthContainer>\n        </Auth>\n\n        <SignInContainer onPress={LogIn} disable={loading}>\n          {loading ? (<Loading/>) : (\n          <Text bold center color=\"#ffffff\">\n            Sign In</Text>\n          )}\n        </SignInContainer>\n\n        <SignUp onPress={() => navigation.push(\"SignUpScreen\")}>\n          <Text small center> \n              New to Achive? <Text bold color=\"#88d498\">Sign Up</Text></Text>\n        </SignUp>\n\n       </Main>\n     </Container>\n    );\n}\n\nconst Logo = styled.Image`\n\n`\n\nconst Container = styled.View`\n\n    flex: 1; \n`;\n\nconst Main = styled.View`\n\n  margin-top: 192px; \n`;\n\n\nconst Auth = styled.View`\n  margin: 64px 32px 32px; \n`; \n\nconst AuthContainer = styled.View`\n  margin-bottom: 32px;\n`; \n\nconst AuthTitle = styled(Text)`\n  color: #8e93a1;\n  font-size: 12px; \n  text-transform: uppercase; \n  font-weight: 300; \n`; \n\nconst AuthField = styled.TextInput`\n  border-bottom-color: #8e93a1; \n  border-bottom-width: 1px;\n  height: 48px; \n`; \n\nconst SignInContainer = styled.TouchableOpacity`\n  margin: 0 32px; \n  height: 48px; \n  align-items: center; \n  justify-content: center; \n  background-color: #88d498;\n  border-radius: 6px;\n\n`;\n\nconst SignUp = styled.TouchableOpacity`\n  margin-top: 16px; \n`; \n\n\nconst Loading = styled.ActivityIndicator.attrs(props => ({\n  color: \"#fffffff\",\n  size: \"small\", \n}))``; "]},"metadata":{},"sourceType":"module"}