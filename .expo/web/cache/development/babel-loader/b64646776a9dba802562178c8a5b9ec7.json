{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport Colors from \"../constants/colors.js\";\nimport { auth } from \"../firebase.js\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction LogInScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      if (user) {\n        navigation.navigate(\"HomeScreen\");\n      }\n    });\n    return unsubscribe;\n  }), [1];\n\n  var handleSignIn = function handleSignIn() {\n    signInWithEmailAndPassword(auth, email, password).then(function (re) {\n      console.log(re);\n      setIsSignedIn(true);\n    }).catch(function (re) {\n      console.log(re);\n    });\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: \"padding\",\n    children: [_jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(View, {\n        style: styles.imageStyle,\n        children: _jsx(Image, {\n          style: styles.logo,\n          source: require(\"../assets/logo.png\")\n        })\n      }), _jsx(TextInput, {\n        style: styles.username,\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Passord\",\n        style: styles.password,\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        secureTextEntry: true\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          navigation.push(\"HomeScreen\");\n          handleSignIn();\n        },\n        children: _jsx(Text, {\n          style: styles.textstyle,\n          children: \"Log in\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.button, styles.buttonOutline],\n        onPress: function onPress() {\n          return navigation.push(\"SignIn\");\n        },\n        children: _jsx(Text, {\n          styles: styles.buttonOutlineText,\n          children: \"Register\"\n        })\n      })]\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  imageStyle: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '55%'\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: Colors.primary\n  },\n  logo: {\n    width: 320,\n    height: 400\n  },\n  username: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5\n  },\n  buttonContainer: {\n    width: '60%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40\n  },\n  password: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5\n  },\n  textstyle: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '100%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#0782F9',\n    borderWidth: 2\n  },\n  buttonContainer: {\n    width: '60%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40\n  },\n  buttonOutlineText: {\n    color: '#0782F9',\n    fontWeight: '700',\n    fontSize: 16\n  },\n  inputContainer: {\n    width: '80%'\n  }\n});\nexport default LogInScreen;","map":{"version":3,"sources":["/home/havard/Desktop/Achive/screens/logInScreen.js"],"names":["React","useEffect","useState","Colors","auth","signInWithEmailAndPassword","LogInScreen","navigation","email","setEmail","password","setPassword","unsubscribe","onAuthStateChanged","user","navigate","handleSignIn","then","re","console","log","setIsSignedIn","catch","styles","container","inputContainer","imageStyle","logo","require","username","text","buttonContainer","button","push","textstyle","buttonOutline","buttonOutlineText","StyleSheet","create","flexDirection","justifyContent","alignItems","height","flex","backgroundColor","primary","width","paddingHorizontal","paddingVertical","borderRadius","marginTop","color","fontWeight","fontSize","padding","borderColor","borderWidth"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP;AACA,SAASC,IAAT;AACA,SAAQC,0BAAR,QAAyC,eAAzC;;;;;;;;;;;;AAUA,SAASC,WAAT,OAAmC;AAAA,MAAbC,UAAa,QAAbA,UAAa;;AAE/B,kBAA0BL,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCP,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOQ,QAAP;AAAA,MAAiBC,WAAjB;;AAEAV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMW,WAAW,GAAGR,IAAI,CAACS,kBAAL,CAAwB,UAAAC,IAAI,EAAI;AAClD,UAAGA,IAAH,EAAQ;AACNP,QAAAA,UAAU,CAACQ,QAAX,CAAoB,YAApB;AACD;AACF,KAJmB,CAApB;AAKA,WAAOH,WAAP;AACD,GAPQ,CAAT,EAOI,CAAC,CAAD,CAPJ;;AASA,MAAMI,YAAY,GAAG,SAAfA,YAAe,GAAK;AACxBX,IAAAA,0BAA0B,CAACD,IAAD,EAAMI,KAAN,EAAYE,QAAZ,CAA1B,CACCO,IADD,CACM,UAACC,EAAD,EAAQ;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACAG,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAJD,EAKCC,KALD,CAKO,UAACJ,EAAD,EAAM;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACD,KAPD;AAQD,GATD;;AAWA,SACE,MAAC,oBAAD;AACA,IAAA,KAAK,EAAIK,MAAM,CAACC,SADhB;AAEA,IAAA,QAAQ,EAAC,SAFT;AAAA,eAGE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,cAApB;AAAA,iBAEE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,UAApB;AAAA,kBACE,KAAC,KAAD;AAAO,UAAA,KAAK,EAAIH,MAAM,CAACI,IAAvB;AACA,UAAA,MAAM,EAAEC,OAAO;AADf;AADF,QAFF,EAQE,KAAC,SAAD;AACE,QAAA,KAAK,EAAEL,MAAM,CAACM,QADhB;AAEE,QAAA,WAAW,EAAC,OAFd;AAGE,QAAA,KAAK,EAAErB,KAHT;AAIE,QAAA,YAAY,EAAE,sBAAAsB,IAAI;AAAA,iBAAIrB,QAAQ,CAACqB,IAAD,CAAZ;AAAA;AAJpB,QARF,EAeE,KAAC,SAAD;AACE,QAAA,WAAW,EAAC,SADd;AAEE,QAAA,KAAK,EAAEP,MAAM,CAACb,QAFhB;AAGE,QAAA,KAAK,EAAEA,QAHT;AAIE,QAAA,YAAY,EAAE,sBAAAoB,IAAI;AAAA,iBAAInB,WAAW,CAACmB,IAAD,CAAf;AAAA,SAJpB;AAKE,QAAA,eAAe;AALjB,QAfF;AAAA,MAHF,EA2BE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAGP,MAAM,CAACQ,eAArB;AAAA,iBAEE,KAAC,gBAAD;AACI,QAAA,KAAK,EAAIR,MAAM,CAACS,MADpB;AAEI,QAAA,OAAO,EAAE,mBAAM;AACfzB,UAAAA,UAAU,CAAC0B,IAAX,CAAgB,YAAhB;AACAjB,UAAAA,YAAY;AACX,SALL;AAAA,kBAOI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEO,MAAM,CAACW,SAApB;AAAA;AAAA;AAPJ,QAFF,EAYE,KAAC,gBAAD;AACI,QAAA,KAAK,EAAE,CAACX,MAAM,CAACS,MAAR,EAAgBT,MAAM,CAACY,aAAvB,CADX;AAEI,QAAA,OAAO,EAAE;AAAA,iBAAM5B,UAAU,CAAC0B,IAAX,CAAgB,QAAhB,CAAN;AAAA,SAFb;AAAA,kBAII,KAAC,IAAD;AAAM,UAAA,MAAM,EAAEV,MAAM,CAACa,iBAArB;AAAA;AAAA;AAJJ,QAZF;AAAA,MA3BF;AAAA,IADF;AAkDH;;AAED,IAAMb,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAE/BZ,EAAAA,UAAU,EAAE;AACVa,IAAAA,aAAa,EAAE,QADL;AAEVC,IAAAA,cAAc,EAAE,QAFN;AAGVC,IAAAA,UAAU,EAAE,QAHF;AAIVC,IAAAA,MAAM,EAAE;AAJE,GAFmB;AAS/BlB,EAAAA,SAAS,EAAE;AACTmB,IAAAA,IAAI,EAAE,CADG;AAETH,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITG,IAAAA,eAAe,EAAEzC,MAAM,CAAC0C;AAJf,GAToB;AAgB/BlB,EAAAA,IAAI,EAAE;AACJmB,IAAAA,KAAK,EAAE,GADH;AAEJJ,IAAAA,MAAM,EAAE;AAFJ,GAhByB;AAqB/Bb,EAAAA,QAAQ,EAAE;AACRe,IAAAA,eAAe,EAAE,OADT;AAERG,IAAAA,iBAAiB,EAAE,EAFX;AAGRC,IAAAA,eAAe,EAAE,EAHT;AAIRC,IAAAA,YAAY,EAAE,EAJN;AAKRC,IAAAA,SAAS,EAAE;AALH,GArBqB;AA6B/BnB,EAAAA,eAAe,EAAE;AACfe,IAAAA,KAAK,EAAE,KADQ;AAEfN,IAAAA,cAAc,EAAE,QAFD;AAGfC,IAAAA,UAAU,EAAE,QAHG;AAIfS,IAAAA,SAAS,EAAE;AAJI,GA7Bc;AAoC/BxC,EAAAA,QAAQ,EAAE;AACRkC,IAAAA,eAAe,EAAE,OADT;AAERG,IAAAA,iBAAiB,EAAE,EAFX;AAGRC,IAAAA,eAAe,EAAE,EAHT;AAIRC,IAAAA,YAAY,EAAE,EAJN;AAKRC,IAAAA,SAAS,EAAE;AALH,GApCqB;AA4C/BhB,EAAAA,SAAS,EAAE;AACTiB,IAAAA,KAAK,EAAE,OADE;AAETC,IAAAA,UAAU,EAAE,KAFH;AAGTC,IAAAA,QAAQ,EAAE;AAHD,GA5CoB;AAkD/BrB,EAAAA,MAAM,EAAE;AACNY,IAAAA,eAAe,EAAE,SADX;AAENE,IAAAA,KAAK,EAAE,MAFD;AAGNQ,IAAAA,OAAO,EAAE,EAHH;AAINL,IAAAA,YAAY,EAAE,EAJR;AAKNR,IAAAA,UAAU,EAAE;AALN,GAlDuB;AAyD/BN,EAAAA,aAAa,EAAE;AACbS,IAAAA,eAAe,EAAE,OADJ;AAEbM,IAAAA,SAAS,EAAE,CAFE;AAGbK,IAAAA,WAAW,EAAE,SAHA;AAIbC,IAAAA,WAAW,EAAE;AAJA,GAzDgB;AAgE/BzB,EAAAA,eAAe,EAAC;AACde,IAAAA,KAAK,EAAE,KADO;AAEdN,IAAAA,cAAc,EAAE,QAFF;AAGdC,IAAAA,UAAU,EAAE,QAHE;AAIdS,IAAAA,SAAS,EAAE;AAJG,GAhEe;AAuE/Bd,EAAAA,iBAAiB,EAAE;AACjBe,IAAAA,KAAK,EAAE,SADU;AAEjBC,IAAAA,UAAU,EAAE,KAFK;AAGjBC,IAAAA,QAAQ,EAAE;AAHO,GAvEY;AA4E/B5B,EAAAA,cAAc,EAAE;AACdqB,IAAAA,KAAK,EAAE;AADO;AA5Ee,CAAlB,CAAf;AAkFA,eAAexC,WAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport Colors from \"../constants/colors.js\";\nimport { auth } from \"../firebase.js\";\nimport {signInWithEmailAndPassword} from \"firebase/auth\"; \n\nimport {StyleSheet, \n  TouchableOpacity, \n  Text, View, \n  Image, Button, \n  TextInput, \n  KeyboardAvoidingView} from \"react-native\"; \n\n  \nfunction LogInScreen({navigation}) {\n\n    const [email, setEmail] = useState(\"\"); \n    const [password, setPassword] = useState(\"\");\n\n    useEffect(() => {\n      const unsubscribe = auth.onAuthStateChanged(user => {\n        if(user){\n          navigation.navigate(\"HomeScreen\")\n        }\n      })\n      return unsubscribe; \n    }), [1]\n\n    const handleSignIn = () =>{\n      signInWithEmailAndPassword(auth,email,password)\n      .then((re) => {\n        console.log(re); \n        setIsSignedIn(true); \n      })\n      .catch((re)=>{\n        console.log(re); \n      })\n    }\n\n    return(\n      <KeyboardAvoidingView \n      style = {styles.container}\n      behavior=\"padding\">\n        <View style={styles.inputContainer}>\n\n          <View style={styles.imageStyle}>\n            <Image style = {styles.logo} \n            source={require(\"../assets/logo.png\")}\n            />\n          </View>\n\n          <TextInput\n            style={styles.username}\n            placeholder=\"Email\"\n            value={email}\n            onChangeText={text => setEmail(text)}\n          />\n\n          <TextInput\n            placeholder=\"Passord\"\n            style={styles.password}\n            value={password}\n            onChangeText={text => setPassword(text)}\n            secureTextEntry\n          />\n        </View>\n        \n        <View style ={styles.buttonContainer}>\n\n          <TouchableOpacity\n              style = {styles.button}\n              onPress={() => {\n              navigation.push(\"HomeScreen\"); \n              handleSignIn(); \n              }}>\n\n              <Text style={styles.textstyle}>Log in</Text>\n          </TouchableOpacity>\n\n          <TouchableOpacity\n              style={[styles.button, styles.buttonOutline]}\n              onPress={() => navigation.push(\"SignIn\")}\n            >\n              <Text styles={styles.buttonOutlineText}>Register</Text>\n          </TouchableOpacity>\n          \n        </View>\n      </KeyboardAvoidingView>\n    );\n}\n\nconst styles = StyleSheet.create({\n\n  imageStyle: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '55%',\n  },\n  \n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: Colors.primary\n  },\n\n  logo: {\n    width: 320,\n    height: 400,\n  },\n\n  username: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5,\n  }, \n\n  buttonContainer: {\n    width: '60%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40,\n  },\n\n  password: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5,\n  }, \n\n  textstyle: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16,\n  },\n\n  button: {\n    backgroundColor: '#0782F9',\n    width: '100%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#0782F9',\n    borderWidth: 2,\n  },\n\n  buttonContainer:{\n    width: '60%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40,\n  }, \n\n  buttonOutlineText: {\n    color: '#0782F9',\n    fontWeight: '700',\n    fontSize: 16,\n  },\n  inputContainer: {\n    width: '80%'\n  },\n\n}); \n\nexport default LogInScreen;"]},"metadata":{},"sourceType":"module"}