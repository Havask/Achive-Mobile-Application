{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport dayjs from 'dayjs';\nimport React, { useCallback, useContext, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated, { FadeInDown, FadeOutUp } from 'react-native-reanimated';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { DataProvider, LayoutProvider, RecyclerListView } from 'recyclerlistview';\nimport { ChatBubble } from \"./ChatBubble\";\nimport { PropsContext } from \"./Chatty\";\nimport { FAB } from \"./components/FAB\";\nimport { LoadEarlier } from \"./components/LoadEarlier\";\nimport { RenderDate } from \"./components/RenderDate\";\nimport { TypingStatus } from \"./components/TypingStatus\";\nimport { useHaptic } from \"./hooks/useHaptic\";\nimport { usePrevious } from \"./hooks/usePrevious\";\nimport { SwipeableBubble } from \"./SwipeableBubble\";\nimport { HapticType, LayoutType } from \"./types/Chatty.types\";\nimport { ChatBubbleEmitter } from \"./utils/eventEmitter\";\nimport { hapticEngine } from \"./utils/hapticEngine\";\nimport { wait } from \"./utils/helpers\";\nvar ScrollViewWithHeader = React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var propsContext = useContext(PropsContext);\n  return React.createElement(ScrollView, _extends({\n    ref: ref\n  }, props), (propsContext === null || propsContext === void 0 ? void 0 : propsContext.loadEarlierProps) && propsContext.loadEarlierProps.show && React.createElement(LoadEarlier, propsContext.loadEarlierProps), children);\n});\nexport var List = React.forwardRef(function (props, ref) {\n  var propsContext = useContext(PropsContext);\n  var recyclerlistviewRef = useRef();\n  var windowDimensions = useWindowDimensions();\n  var safeArea = useSafeAreaInsets();\n\n  var _useHaptic = useHaptic(),\n      trigger = _useHaptic.trigger;\n\n  var fabRef = useRef(null);\n  var typingStatusRef = useRef(null);\n  var listHeight = useMemo(function () {\n    return windowDimensions.height - 150 - safeArea.bottom - safeArea.top;\n  }, [windowDimensions, safeArea]);\n  var rowRendererProp = props.rowRenderer,\n      data = props.data;\n  var dataProvider = useMemo(function () {\n    return new DataProvider(function (r1, r2) {\n      if (r1.id !== r2.id) {\n        return true;\n      }\n\n      return false;\n    });\n  }, []);\n\n  var _useState = useState(dataProvider),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var previousMessages = usePrevious(messages);\n  useEffect(function () {\n    setMessages(dataProvider.cloneWithRows(data));\n  }, [data, dataProvider]);\n  useEffect(function () {\n    ChatBubbleEmitter.addListener('replyBubblePressed', function (messageId) {\n      var index = messages.getAllData().findIndex(function (m) {\n        return m.id === messageId;\n      });\n\n      if (index !== -1) {\n        var _recyclerlistviewRef$;\n\n        (_recyclerlistviewRef$ = recyclerlistviewRef.current) === null || _recyclerlistviewRef$ === void 0 ? void 0 : _recyclerlistviewRef$.scrollToIndex(index, true);\n      }\n    });\n    return function () {\n      ChatBubbleEmitter.removeAllListeners();\n    };\n  }, [messages]);\n  useImperativeHandle(ref, function () {\n    return {\n      appendMessage: function appendMessage(message, firstIndex) {\n        if (firstIndex) {\n          if (Array.isArray(message)) {\n            setMessages(dataProvider.cloneWithRows([].concat(_toConsumableArray(message), _toConsumableArray(messages.getAllData()))));\n          } else {\n            setMessages(dataProvider.cloneWithRows([message].concat(_toConsumableArray(messages.getAllData()))));\n          }\n        } else {\n          if (Array.isArray(message)) {\n            setMessages(dataProvider.cloneWithRows([].concat(_toConsumableArray(messages.getAllData()), _toConsumableArray(message))));\n          } else {\n            setMessages(dataProvider.cloneWithRows([].concat(_toConsumableArray(messages.getAllData()), [message])));\n          }\n        }\n\n        if (!Array.isArray(message)) {\n          if (!message.me && propsContext !== null && propsContext !== void 0 && propsContext.enableHapticFeedback) {\n            if (Platform.OS !== 'web' && hapticEngine) trigger(HapticType.Heavy);\n          }\n        }\n      },\n      scrollToEnd: function scrollToEnd(animated) {\n        var _recyclerlistviewRef$2;\n\n        (_recyclerlistviewRef$2 = recyclerlistviewRef.current) === null || _recyclerlistviewRef$2 === void 0 ? void 0 : _recyclerlistviewRef$2.scrollToEnd(animated);\n      },\n      setIsTyping: function setIsTyping(typing) {\n        var _typingStatusRef$curr, _recyclerlistviewRef$3;\n\n        (_typingStatusRef$curr = typingStatusRef.current) === null || _typingStatusRef$curr === void 0 ? void 0 : _typingStatusRef$curr.setIsTyping(typing !== null && typing !== void 0 ? typing : false);\n        (_recyclerlistviewRef$3 = recyclerlistviewRef.current) === null || _recyclerlistviewRef$3 === void 0 ? void 0 : _recyclerlistviewRef$3.scrollToEnd(true);\n      },\n      removeMessage: function removeMessage(id) {\n        setMessages(dataProvider.cloneWithRows(messages.getAllData().filter(function (message) {\n          return message.id !== id;\n        })));\n      }\n    };\n  }, [dataProvider, messages, propsContext.enableHapticFeedback, trigger]);\n  useEffect(function () {\n    var _, _2;\n\n    if (previousMessages && ((_ = previousMessages.getAllData()[0]) === null || _ === void 0 ? void 0 : _.id) === ((_2 = messages.getAllData()[0]) === null || _2 === void 0 ? void 0 : _2.id)) {\n      wait(100).then(function () {\n        var _recyclerlistviewRef$4;\n\n        (_recyclerlistviewRef$4 = recyclerlistviewRef.current) === null || _recyclerlistviewRef$4 === void 0 ? void 0 : _recyclerlistviewRef$4.scrollToEnd(true);\n      });\n    }\n  }, [ref, messages, previousMessages]);\n  var layoutProvider = useCallback(function () {\n    return new LayoutProvider(function (index) {\n      var currentMessage = messages.getAllData()[index];\n      var prevMessage = messages.getAllData()[index - 1];\n\n      if (currentMessage.text.length >= 600) {\n        return LayoutType.ExtremeLong;\n      }\n\n      if (currentMessage.text.length >= 400) {\n        return LayoutType.Long3x;\n      }\n\n      if (currentMessage.text.length >= 200) {\n        return LayoutType.Long2x;\n      }\n\n      if (currentMessage.text.length >= 100) {\n        return LayoutType.Long;\n      }\n\n      if (currentMessage !== null && currentMessage !== void 0 && currentMessage.media) {\n        if (currentMessage.media.length > 2) {\n          return LayoutType.Media2x;\n        }\n\n        return LayoutType.Media;\n      }\n\n      if (currentMessage.repliedTo) {\n        return LayoutType.Replied;\n      }\n\n      var isFirstMessage = index === 0;\n\n      if (!isFirstMessage && dayjs(currentMessage.createdAt).date() !== dayjs(prevMessage.createdAt).date() || isFirstMessage) {\n        return LayoutType.Dated;\n      }\n\n      return LayoutType.Normal;\n    }, function (type, dim) {\n      dim.width = windowDimensions.width;\n\n      switch (type) {\n        case LayoutType.Normal:\n          dim.height = 85;\n          break;\n\n        case LayoutType.Replied:\n          dim.height = 190;\n          break;\n\n        case LayoutType.Dated:\n          dim.height = 110;\n          break;\n\n        case LayoutType.Long:\n          dim.height = 130;\n          break;\n\n        case LayoutType.Long2x:\n          dim.height = 170;\n          break;\n\n        case LayoutType.Long3x:\n          dim.height = 350;\n          break;\n\n        case LayoutType.ExtremeLong:\n          dim.height = 550;\n          break;\n\n        case LayoutType.Media:\n          dim.height = 180;\n          break;\n\n        case LayoutType.Media2x:\n          dim.height = 300;\n          break;\n\n        default:\n          dim.height = 85;\n          break;\n      }\n    });\n  }, [messages, windowDimensions.width]);\n  var renderBubble = useCallback(function (data, withDate) {\n    if (rowRendererProp) {\n      return React.createElement(View, null, withDate && React.createElement(RenderDate, _extends({\n        date: data.createdAt\n      }, propsContext.renderDateProps)), React.createElement(Animated.View, {\n        entering: FadeInDown,\n        exiting: FadeOutUp\n      }, React.createElement(SwipeableBubble, {\n        message: data,\n        onReply: propsContext.onReply\n      }, rowRendererProp(data))));\n    }\n\n    return React.createElement(View, {\n      style: {\n        width: '100%'\n      }\n    }, withDate && React.createElement(RenderDate, _extends({\n      date: data.createdAt\n    }, propsContext.renderDateProps)), React.createElement(Animated.View, {\n      entering: FadeInDown,\n      exiting: FadeOutUp\n    }, propsContext.onReply ? React.createElement(React.Fragment, null, React.createElement(SwipeableBubble, {\n      message: data,\n      onReply: propsContext.onReply\n    })) : React.createElement(ChatBubble, {\n      message: data\n    })));\n  }, [propsContext.onReply, propsContext.renderDateProps, rowRendererProp]);\n  var rowRenderer = useCallback(function (type, data) {\n    if (type === LayoutType.Dated) {\n      return renderBubble(data, true);\n    }\n\n    return renderBubble(data);\n  }, [renderBubble]);\n  var onScroll = useCallback(function (e, offsetX, offsetY) {\n    if (e.nativeEvent.contentOffset.y <= 0) {\n      var _fabRef$current;\n\n      (_fabRef$current = fabRef.current) === null || _fabRef$current === void 0 ? void 0 : _fabRef$current.show();\n    } else {\n      var _fabRef$current2;\n\n      (_fabRef$current2 = fabRef.current) === null || _fabRef$current2 === void 0 ? void 0 : _fabRef$current2.hide();\n    }\n\n    if (props.onScroll) {\n      props.onScroll(e, offsetX, offsetY);\n    }\n  }, [props]);\n  var scrollToBottom = useCallback(function () {\n    var _recyclerlistviewRef$5;\n\n    (_recyclerlistviewRef$5 = recyclerlistviewRef.current) === null || _recyclerlistviewRef$5 === void 0 ? void 0 : _recyclerlistviewRef$5.scrollToEnd(true);\n  }, []);\n  return React.createElement(View, {\n    style: {\n      minWidth: 1,\n      minHeight: 1,\n      maxHeight: listHeight\n    }\n  }, propsContext.showScrollToBottomButton && React.createElement(FAB, _extends({\n    ref: fabRef,\n    onPress: scrollToBottom\n  }, propsContext.scrollToBottomProps)), React.createElement(RecyclerListView, {\n    layoutProvider: layoutProvider(),\n    externalScrollView: ScrollViewWithHeader,\n    dataProvider: messages,\n    style: [{\n      height: propsContext.replyingTo ? '90%' : '100%'\n    }, props.containerStyle],\n    ref: recyclerlistviewRef,\n    scrollViewProps: {\n      keyboardShouldPersistTaps: 'never'\n    },\n    onScroll: onScroll,\n    optimizeForInsertDeleteAnimations: true,\n    forceNonDeterministicRendering: true,\n    canChangeSize: true,\n    rowRenderer: rowRenderer,\n    renderFooter: function renderFooter() {\n      return React.createElement(TypingStatus, {\n        ref: typingStatusRef\n      });\n    },\n    onEndReached: props === null || props === void 0 ? void 0 : props.onEndReached,\n    onEndReachedThreshold: props === null || props === void 0 ? void 0 : props.onEndReachedThreshold\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,IACEC,WADF,EAEEC,UAFF,EAGEC,SAHF,EAIEC,mBAJF,EAKEC,OALF,EAMEC,MANF,EAOEC,QAPF,QAQO,OARP;;;;;AAUA,OAAOC,QAAP,IAAmBC,UAAnB,EAA+BC,SAA/B,QAAgD,yBAAhD;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,gBAHF,QAIO,kBAJP;AAMA,SAASC,UAAT;AACA,SAASC,YAAT;AACA,SAASC,GAAT;AACA,SAASC,WAAT;AACA,SAASC,UAAT;AACA,SAASC,YAAT;AACA,SAASC,SAAT;AACA,SAASC,WAAT;AACA,SAASC,eAAT;AACA,SACEC,UADF,EAKEC,UALF;AAQA,SAASC,iBAAT;AACA,SAASC,YAAT;AACA,SAASC,IAAT;AAEA,IAAMC,oBAAoB,GAAG7B,KAAK,CAAC8B,UAAN9B,CAC3B,gBAAyB+B,GAAzB,EAAkD;EAAA,IAA/CC,QAA+C,QAA/CA,QAA+C;EAAA,IAAlCC,KAAkC;;EAChD,IAAMC,YAAY,GAAGhC,UAAU,CAACc,YAAD,CAA/B;EAEA,OACEhB,oBAACmC,UAAD;IAAYJ,GAAG,EAAEA;EAAjB,GAA0BE,KAA1B,GACG,aAAY,SAAZC,gBAAY,WAAZA,wBAAY,CAAEE,gBAAd,KACCF,YAAY,CAACE,gBAAbF,CAA8BG,IAD/B,IAEGrC,oBAACkB,WAAD,EAAiBgB,YAAY,CAACE,gBAA9B,CAHN,EAKGJ,QALH,CADF;AAJyB,EAA7B;AAgBA,OAAO,IAAMM,IAAI,GAAGtC,KAAK,CAAC8B,UAAN9B,CAClB,UAACiC,KAAD,EAAoBF,GAApB,EAAmD;EACjD,IAAMG,YAAY,GAAGhC,UAAU,CAACc,YAAD,CAA/B;EACA,IAAMuB,mBAAmB,GAAGjC,MAAM,EAAlC;EACA,IAAMkC,gBAAgB,GAAGC,mBAAmB,EAA5C;EACA,IAAMC,QAAQ,GAAG/B,iBAAiB,EAAlC;;EACA,iBAAoBU,SAAS,EAA7B;EAAA,IAAQsB,OAAR,cAAQA,OAAR;;EACA,IAAMC,MAAM,GAAGtC,MAAM,CAAU,IAAV,CAArB;EACA,IAAMuC,eAAe,GAAGvC,MAAM,CAAmB,IAAnB,CAA9B;EACA,IAAMwC,UAAU,GAAGzC,OAAO,CACxB;IAAA,OAAMmC,gBAAgB,CAACO,MAAjBP,GAA0B,GAA1BA,GAAgCE,QAAQ,CAACM,MAAzCR,GAAkDE,QAAQ,CAACO,GAAjE;EAAA,CADwB,EAExB,CAACT,gBAAD,EAAmBE,QAAnB,CAFwB,CAA1B;EAIA,IAAqBQ,eAArB,GAA+CjB,KAA/C,CAAQkB,WAAR;EAAA,IAAsCC,IAAtC,GAA+CnB,KAA/C,CAAsCmB,IAAtC;EAEA,IAAMC,YAAY,GAAGhD,OAAO,CAAe,YAAM;IAC/C,OAAO,IAAIO,YAAJ,CAAiB,UAAC0C,EAAD,EAAeC,EAAf,EAAgC;MACtD,IAAID,EAAE,CAACE,EAAHF,KAAUC,EAAE,CAACC,EAAjB,EAAqB;QACnB,OAAO,IAAP;MACD;;MAED,OAAO,KAAP;IALK,EAAP;EAD0B,GAQzB,EARyB,CAA5B;;EAUA,gBAAgCjD,QAAQ,CAAe8C,YAAf,CAAxC;EAAA;EAAA,IAAOI,QAAP;EAAA,IAAiBC,WAAjB;;EACA,IAAMC,gBAAgB,GAAGrC,WAAW,CAAemC,QAAf,CAApC;EAGAtD,SAAS,CAAC,YAAM;IACduD,WAAW,CAACL,YAAY,CAACO,aAAbP,CAA2BD,IAA3BC,CAAD,CAAXK;EADO,GAEN,CAACN,IAAD,EAAOC,YAAP,CAFM,CAATlD;EAMAA,SAAS,CAAC,YAAM;IAEduB,iBAAiB,CAACmC,WAAlBnC,CAA8B,oBAA9BA,EAAqDoC,mBAAD,EAAe;MACjE,IAAMC,KAAK,GAAGN,QAAQ,CACnBO,UADWP,GAEXQ,SAFWR,CAEAS,WAAD;QAAA,OAAOA,CAAC,CAACV,EAAFU,KAASJ,SAAhB;MAAA,CAFCL,CAAd;;MAIA,IAAIM,KAAK,KAAK,CAAC,CAAf,EAAkB;QAAA;;QAChB,4CAAmB,CAACI,OAApB,gFAA6BC,aAA7B,CAA2CL,KAA3C,EAAkD,IAAlD;MACD;IAPH;IAUA,OAAO,YAAM;MACXrC,iBAAiB,CAAC2C,kBAAlB3C;IADF;EAZO,GAeN,CAAC+B,QAAD,CAfM,CAATtD;EAmBAC,mBAAmB,CACjB2B,GADiB,EAEjB;IAAA,OAAO;MACLuC,aAAa,EAAE,uBACbC,OADa,EAEbC,UAFa,EAGV;QACH,IAAIA,UAAJ,EAAgB;UACd,IAAIC,KAAK,CAACC,OAAND,CAAcF,OAAdE,CAAJ,EAA4B;YAC1Bf,WAAW,CACTL,YAAY,CAACO,aAAbP,8BACKkB,OADLlB,sBAEKI,QAAQ,CAACO,UAATP,EAFLJ,GADS,CAAXK;UADF,OAOO;YACLA,WAAW,CACTL,YAAY,CAACO,aAAbP,EAA4BkB,OAA5BlB,4BAAwCI,QAAQ,CAACO,UAATP,EAAxCJ,GADS,CAAXK;UAGD;QAZH,OAaO;UACL,IAAIe,KAAK,CAACC,OAAND,CAAcF,OAAdE,CAAJ,EAA4B;YAC1Bf,WAAW,CACTL,YAAY,CAACO,aAAbP,8BACKI,QAAQ,CAACO,UAATP,EADLJ,sBAEKkB,OAFLlB,GADS,CAAXK;UADF,OAOO;YACLA,WAAW,CACTL,YAAY,CAACO,aAAbP,8BAA+BI,QAAQ,CAACO,UAATP,EAA/BJ,IAAsDkB,OAAtDlB,GADS,CAAXK;UAGD;QACF;;QAED,IAAI,CAACe,KAAK,CAACC,OAAND,CAAcF,OAAdE,CAAL,EAA6B;UAC3B,IAAI,CAACF,OAAO,CAACI,EAAT,IAAezC,YAAf,aAAeA,YAAf,eAAeA,YAAY,CAAE0C,oBAAjC,EAAuD;YACrD,IAAIC,QAAQ,CAACC,EAATD,KAAgB,KAAhBA,IAAyBlD,YAA7B,EACEgB,OAAO,CAACnB,UAAU,CAACuD,KAAZ,CAAPpC;UACH;QACF;MAtCE;MAyCLqC,WAAW,EAAGC,6BAAD,EAAwB;QAAA;;QACnC,6CAAmB,CAACd,OAApB,kFAA6Ba,WAA7B,CAAyCC,QAAzC;MA1CG;MA6CLC,WAAW,EAAGC,2BAAD,EAAsB;QAAA;;QACjC,wCAAe,CAAChB,OAAhB,gFAAyBe,WAAzB,CAAqCC,MAArC,SAAqCA,UAArC,WAAqCA,YAAU,KAA/C;QACA,6CAAmB,CAAChB,OAApB,kFAA6Ba,WAA7B,CAAyC,IAAzC;MA/CG;MAkDLI,aAAa,EAAG5B,yBAAD,EAAgB;QAC7BE,WAAW,CACTL,YAAY,CAACO,aAAbP,CACEI,QAAQ,CAACO,UAATP,GAAsB4B,MAAtB5B,CAA8Bc,iBAAD;UAAA,OAAaA,OAAO,CAACf,EAARe,KAAef,EAA5B;QAAA,CAA7BC,CADFJ,CADS,CAAXK;MAKD;IAxDI,CAAP;EAAA,CAFiB,EA4DjB,CAACL,YAAD,EAAeI,QAAf,EAAyBvB,YAAY,CAAC0C,oBAAtC,EAA4DjC,OAA5D,CA5DiB,CAAnBvC;EAiEAD,SAAS,CAAC,YAAM;IAAA;;IACd,IACEwD,gBAAgB,IAChB,sBAAgB,CAACK,UAAjBL,GAA+B,CAA/BA,yCAAmCH,EAAnC,aAA0CC,QAAQ,CAACO,UAATP,GAAuB,CAAvBA,CAA1C,uCAA0C6B,GAA2B9B,EAArE,CAFF,EAGE;MACA5B,IAAI,CAAC,GAAD,CAAJA,CAAU2D,IAAV3D,CAAe,YAAM;QAAA;;QACnB,6CAAmB,CAACuC,OAApB,kFAA6Ba,WAA7B,CAAyC,IAAzC;MADF;IAGD;EARM,GASN,CAACjD,GAAD,EAAM0B,QAAN,EAAgBE,gBAAhB,CATM,CAATxD;EAWA,IAAMqF,cAAc,GAAGvF,WAAW,CAAC,YAAM;IACvC,OAAO,IAAIY,cAAJ,CACJkD,eAAD,EAAW;MACT,IAAM0B,cAAwB,GAAGhC,QAAQ,CAACO,UAATP,GAAsBM,KAAtBN,CAAjC;MACA,IAAMiC,WAAqB,GAAGjC,QAAQ,CAACO,UAATP,GAAsBM,KAAK,GAAG,CAA9BN,CAA9B;;MAEA,IAAIgC,cAAc,CAACE,IAAfF,CAAoBG,MAApBH,IAA8B,GAAlC,EAAuC;QACrC,OAAOhE,UAAU,CAACoE,WAAlB;MACD;;MAED,IAAIJ,cAAc,CAACE,IAAfF,CAAoBG,MAApBH,IAA8B,GAAlC,EAAuC;QACrC,OAAOhE,UAAU,CAACqE,MAAlB;MACD;;MAED,IAAIL,cAAc,CAACE,IAAfF,CAAoBG,MAApBH,IAA8B,GAAlC,EAAuC;QACrC,OAAOhE,UAAU,CAACsE,MAAlB;MACD;;MAED,IAAIN,cAAc,CAACE,IAAfF,CAAoBG,MAApBH,IAA8B,GAAlC,EAAuC;QACrC,OAAOhE,UAAU,CAACuE,IAAlB;MACD;;MAED,IAAIP,cAAJ,SAAIA,kBAAJ,WAAIA,kBAAc,CAAEQ,KAApB,EAA2B;QACzB,IAAIR,cAAc,CAACQ,KAAfR,CAAqBG,MAArBH,GAA8B,CAAlC,EAAqC;UACnC,OAAOhE,UAAU,CAACyE,OAAlB;QACD;;QAED,OAAOzE,UAAU,CAAC0E,KAAlB;MACD;;MAED,IAAIV,cAAc,CAACW,SAAnB,EAA8B;QAC5B,OAAO3E,UAAU,CAAC4E,OAAlB;MACD;;MAED,IAAMC,cAAc,GAAGvC,KAAK,KAAK,CAAjC;;MAEA,IACG,CAACuC,cAAD,IACCvG,KAAK,CAAC0F,cAAc,CAACc,SAAhB,CAALxG,CAAgCyG,IAAhCzG,OACEA,KAAK,CAAC2F,WAAW,CAACa,SAAb,CAALxG,CAA6ByG,IAA7BzG,EAFH,IAGDuG,cAJF,EAKE;QACA,OAAO7E,UAAU,CAACgF,KAAlB;MACD;;MAED,OAAOhF,UAAU,CAACiF,MAAlB;IA5CG,GA8CL,UAACC,IAAD,EAAOC,GAAP,EAAe;MACbA,GAAG,CAACC,KAAJD,GAAYpE,gBAAgB,CAACqE,KAA7BD;;MAEA,QAAQD,IAAR;QACE,KAAKlF,UAAU,CAACiF,MAAhB;UACEE,GAAG,CAAC7D,MAAJ6D,GAAa,EAAbA;UACA;;QACF,KAAKnF,UAAU,CAAC4E,OAAhB;UACEO,GAAG,CAAC7D,MAAJ6D,GAAa,GAAbA;UACA;;QACF,KAAKnF,UAAU,CAACgF,KAAhB;UACEG,GAAG,CAAC7D,MAAJ6D,GAAa,GAAbA;UACA;;QACF,KAAKnF,UAAU,CAACuE,IAAhB;UACEY,GAAG,CAAC7D,MAAJ6D,GAAa,GAAbA;UACA;;QACF,KAAKnF,UAAU,CAACsE,MAAhB;UACEa,GAAG,CAAC7D,MAAJ6D,GAAa,GAAbA;UACA;;QACF,KAAKnF,UAAU,CAACqE,MAAhB;UACEc,GAAG,CAAC7D,MAAJ6D,GAAa,GAAbA;UACA;;QACF,KAAKnF,UAAU,CAACoE,WAAhB;UACEe,GAAG,CAAC7D,MAAJ6D,GAAa,GAAbA;UACA;;QACF,KAAKnF,UAAU,CAAC0E,KAAhB;UACES,GAAG,CAAC7D,MAAJ6D,GAAa,GAAbA;UACA;;QACF,KAAKnF,UAAU,CAACyE,OAAhB;UACEU,GAAG,CAAC7D,MAAJ6D,GAAa,GAAbA;UACA;;QAEF;UACEA,GAAG,CAAC7D,MAAJ6D,GAAa,EAAbA;UACA;MA/BJ;IAjDG,EAAP;EADgC,GAqF/B,CAACnD,QAAD,EAAWjB,gBAAgB,CAACqE,KAA5B,CArF+B,CAAlC;EAuFA,IAAMC,YAAY,GAAG7G,WAAW,CAC9B,UAACmD,IAAD,EAAiB2D,QAAjB,EAAwC;IACtC,IAAI7D,eAAJ,EAAqB;MACnB,OACElD,oBAACgH,IAAD,QACGD,QAAQ,IACP/G,oBAACmB,UAAD;QACEqF,IAAI,EAAEpD,IAAI,CAACmD;MADb,GAEMrE,YAAY,CAAC+E,eAFnB,EAFJ,EAQEjH,oBAACQ,QAAD,CAAUwG,IAAV;QAAeE,QAAQ,EAAEzG,UAAzB;QAAqC0G,OAAO,EAAEzG;MAA9C,GACEV,oBAACuB,eAAD;QAAiBgD,OAAO,EAAEnB,IAA1B;QAAgCgE,OAAO,EAAElF,YAAY,CAACkF;MAAtD,GACGlE,eAAe,CAACE,IAAD,CADlB,CADF,CARF,CADF;IAgBD;;IAED,OACEpD,oBAACgH,IAAD;MAAMK,KAAK,EAAE;QAAER,KAAK,EAAE;MAAT;IAAb,GACGE,QAAQ,IACP/G,oBAACmB,UAAD;MACEqF,IAAI,EAAEpD,IAAI,CAACmD;IADb,GAEMrE,YAAY,CAAC+E,eAFnB,EAFJ,EAOEjH,oBAACQ,QAAD,CAAUwG,IAAV;MAAeE,QAAQ,EAAEzG,UAAzB;MAAqC0G,OAAO,EAAEzG;IAA9C,GACGwB,YAAY,CAACkF,OAAblF,GACClC,0CACEA,oBAACuB,eAAD;MACEgD,OAAO,EAAEnB,IADX;MAEEgE,OAAO,EAAElF,YAAY,CAACkF;IAFxB,EADF,CADDlF,GAQClC,oBAACe,UAAD;MAAYwD,OAAO,EAAEnB;IAArB,EATJ,CAPF,CADF;EArB4B,GA4C9B,CAAClB,YAAY,CAACkF,OAAd,EAAuBlF,YAAY,CAAC+E,eAApC,EAAqD/D,eAArD,CA5C8B,CAAhC;EA+CA,IAAMC,WAAW,GAAGlD,WAAW,CAC7B,UAAC0G,IAAD,EAAOvD,IAAP,EAA0B;IACxB,IAAIuD,IAAI,KAAKlF,UAAU,CAACgF,KAAxB,EAA+B;MAC7B,OAAOK,YAAY,CAAC1D,IAAD,EAAO,IAAP,CAAnB;IACD;;IAED,OAAO0D,YAAY,CAAC1D,IAAD,CAAnB;EAN2B,GAQ7B,CAAC0D,YAAD,CAR6B,CAA/B;EAWA,IAAMQ,QAAQ,GAAGrH,WAAW,CAC1B,UAACsH,CAAD,EAAiBC,OAAjB,EAAkCC,OAAlC,EAAsD;IACpD,IAAIF,CAAC,CAACG,WAAFH,CAAcI,aAAdJ,CAA4BK,CAA5BL,IAAiC,CAArC,EAAwC;MAAA;;MACtC,yBAAM,CAACpD,OAAP,oEAAgB9B,IAAhB;IADF,OAEO;MAAA;;MACL,0BAAM,CAAC8B,OAAP,sEAAgB0D,IAAhB;IACD;;IAED,IAAI5F,KAAK,CAACqF,QAAV,EAAoB;MAClBrF,KAAK,CAACqF,QAANrF,CAAesF,CAAftF,EAAkBuF,OAAlBvF,EAA2BwF,OAA3BxF;IACD;EAVuB,GAY1B,CAACA,KAAD,CAZ0B,CAA5B;EAeA,IAAM6F,cAAc,GAAG7H,WAAW,CAAC,YAAM;IAAA;;IACvC,6CAAmB,CAACkE,OAApB,kFAA6Ba,WAA7B,CAAyC,IAAzC;EADgC,GAE/B,EAF+B,CAAlC;EAIA,OACEhF,oBAACgH,IAAD;IAAMK,KAAK,EAAE;MAAEU,QAAQ,EAAE,CAAZ;MAAeC,SAAS,EAAE,CAA1B;MAA6BC,SAAS,EAAEnF;IAAxC;EAAb,GACGZ,YAAY,CAACgG,wBAAbhG,IACClC,oBAACiB,GAAD;IACEc,GAAG,EAAEa,MADP;IAEEuF,OAAO,EAAEL;EAFX,GAGM5F,YAAY,CAACkG,mBAHnB,EAFJ,EASEpI,oBAACc,gBAAD;IACE0E,cAAc,EAAEA,cAAc,EADhC;IAEE6C,kBAAkB,EAAExG,oBAFtB;IAGEwB,YAAY,EAAEI,QAHhB;IAIE4D,KAAK,EAAE,CACL;MACEtE,MAAM,EAAEb,YAAY,CAACoG,UAAbpG,GAA0B,KAA1BA,GAAkC;IAD5C,CADK,EAILD,KAAK,CAACsG,cAJD,CAJT;IAWExG,GAAG,EAAEQ,mBAXP;IAYEiG,eAAe,EAAE;MACfC,yBAAyB,EAAE;IADZ,CAZnB;IAeEnB,QAAQ,EAAEA,QAfZ;IAgBEoB,iCAAiC,MAhBnC;IAiBEC,8BAA8B,MAjBhC;IAkBEC,aAAa,EAAE,IAlBjB;IAmBEzF,WAAW,EAAEA,WAnBf;IAoBE0F,YAAY,EAAE;MAAA,OAAM7I,oBAACoB,YAAD;QAAcW,GAAG,EAAEc;MAAnB,EAAN;IAAA,CApBhB;IAqBEiG,YAAY,EAAE7G,KAAF,SAAEA,SAAF,WAAEA,GAAF,MAAEA,QAAK,CAAE6G,YArBvB;IAsBEC,qBAAqB,EAAE9G,KAAF,SAAEA,SAAF,WAAEA,GAAF,MAAEA,QAAK,CAAE8G;EAtBhC,EATF,CADF;AAtSgB,EAAb","names":["dayjs","React","useCallback","useContext","useEffect","useImperativeHandle","useMemo","useRef","useState","Animated","FadeInDown","FadeOutUp","useSafeAreaInsets","DataProvider","LayoutProvider","RecyclerListView","ChatBubble","PropsContext","FAB","LoadEarlier","RenderDate","TypingStatus","useHaptic","usePrevious","SwipeableBubble","HapticType","LayoutType","ChatBubbleEmitter","hapticEngine","wait","ScrollViewWithHeader","forwardRef","ref","children","props","propsContext","ScrollView","loadEarlierProps","show","List","recyclerlistviewRef","windowDimensions","useWindowDimensions","safeArea","trigger","fabRef","typingStatusRef","listHeight","height","bottom","top","rowRendererProp","rowRenderer","data","dataProvider","r1","r2","id","messages","setMessages","previousMessages","cloneWithRows","addListener","messageId","index","getAllData","findIndex","m","current","scrollToIndex","removeAllListeners","appendMessage","message","firstIndex","Array","isArray","me","enableHapticFeedback","Platform","OS","Heavy","scrollToEnd","animated","setIsTyping","typing","removeMessage","filter","_2","then","layoutProvider","currentMessage","prevMessage","text","length","ExtremeLong","Long3x","Long2x","Long","media","Media2x","Media","repliedTo","Replied","isFirstMessage","createdAt","date","Dated","Normal","type","dim","width","renderBubble","withDate","View","renderDateProps","entering","exiting","onReply","style","onScroll","e","offsetX","offsetY","nativeEvent","contentOffset","y","hide","scrollToBottom","minWidth","minHeight","maxHeight","showScrollToBottomButton","onPress","scrollToBottomProps","externalScrollView","replyingTo","containerStyle","scrollViewProps","keyboardShouldPersistTaps","optimizeForInsertDeleteAnimations","forceNonDeterministicRendering","canChangeSize","renderFooter","onEndReached","onEndReachedThreshold"],"sources":["List.tsx"],"sourcesContent":["import dayjs from 'dayjs';\nimport type { ForwardedRef, Ref } from 'react';\nimport React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { Platform, ScrollView, useWindowDimensions, View } from 'react-native';\nimport Animated, { FadeInDown, FadeOutUp } from 'react-native-reanimated';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport {\n  DataProvider,\n  LayoutProvider,\n  RecyclerListView,\n} from 'recyclerlistview';\nimport type { ScrollEvent } from 'recyclerlistview/dist/reactnative/core/scrollcomponent/BaseScrollView';\nimport { ChatBubble } from './ChatBubble';\nimport { PropsContext } from './Chatty';\nimport { FAB, IFabRef } from './components/FAB';\nimport { LoadEarlier } from './components/LoadEarlier';\nimport { RenderDate } from './components/RenderDate';\nimport { TypingStatus } from './components/TypingStatus';\nimport { useHaptic } from './hooks/useHaptic';\nimport { usePrevious } from './hooks/usePrevious';\nimport { SwipeableBubble } from './SwipeableBubble';\nimport {\n  HapticType,\n  IListProps,\n  IMessage,\n  ITypingStatusRef,\n  LayoutType,\n  ListRef,\n} from './types/Chatty.types';\nimport { ChatBubbleEmitter } from './utils/eventEmitter';\nimport { hapticEngine } from './utils/hapticEngine';\nimport { wait } from './utils/helpers';\n\nconst ScrollViewWithHeader = React.forwardRef(\n  ({ children, ...props }, ref: Ref<ScrollView>) => {\n    const propsContext = useContext(PropsContext);\n\n    return (\n      <ScrollView ref={ref} {...props}>\n        {propsContext?.loadEarlierProps &&\n          propsContext.loadEarlierProps.show && (\n            <LoadEarlier {...propsContext.loadEarlierProps} />\n          )}\n        {children}\n      </ScrollView>\n    );\n  }\n);\n\nexport const List = React.forwardRef(\n  (props: IListProps, ref: ForwardedRef<ListRef>) => {\n    const propsContext = useContext(PropsContext);\n    const recyclerlistviewRef = useRef<RecyclerListView<any, any>>();\n    const windowDimensions = useWindowDimensions();\n    const safeArea = useSafeAreaInsets();\n    const { trigger } = useHaptic();\n    const fabRef = useRef<IFabRef>(null);\n    const typingStatusRef = useRef<ITypingStatusRef>(null);\n    const listHeight = useMemo(\n      () => windowDimensions.height - 150 - safeArea.bottom - safeArea.top,\n      [windowDimensions, safeArea]\n    );\n    const { rowRenderer: rowRendererProp, data } = props;\n\n    const dataProvider = useMemo<DataProvider>(() => {\n      return new DataProvider((r1: IMessage, r2: IMessage) => {\n        if (r1.id !== r2.id) {\n          return true;\n        }\n\n        return false;\n      });\n    }, []);\n\n    const [messages, setMessages] = useState<DataProvider>(dataProvider);\n    const previousMessages = usePrevious<DataProvider>(messages);\n\n    /* This is a React Hook that is used to update the messages list when new messages are added. */\n    useEffect(() => {\n      setMessages(dataProvider.cloneWithRows(data));\n    }, [data, dataProvider]);\n\n    /* This code is listening to the event of a reply bubble being pressed. When it is pressed, it scrolls\nto the replied message. */\n    useEffect(() => {\n      // When reply is pressed, scroll to replied message\n      ChatBubbleEmitter.addListener('replyBubblePressed', (messageId) => {\n        const index = messages\n          .getAllData()\n          .findIndex((m) => m.id === messageId);\n\n        if (index !== -1) {\n          recyclerlistviewRef.current?.scrollToIndex(index, true);\n        }\n      });\n\n      return () => {\n        ChatBubbleEmitter.removeAllListeners();\n      };\n    }, [messages]);\n\n    /* Using the useImperativeHandle hook to expose a function to the parent component that will allow\n    it to manipulate the messages list. */\n    useImperativeHandle(\n      ref,\n      () => ({\n        appendMessage: (\n          message: IMessage | IMessage[],\n          firstIndex?: boolean\n        ) => {\n          if (firstIndex) {\n            if (Array.isArray(message)) {\n              setMessages(\n                dataProvider.cloneWithRows([\n                  ...message,\n                  ...messages.getAllData(),\n                ])\n              );\n            } else {\n              setMessages(\n                dataProvider.cloneWithRows([message, ...messages.getAllData()])\n              );\n            }\n          } else {\n            if (Array.isArray(message)) {\n              setMessages(\n                dataProvider.cloneWithRows([\n                  ...messages.getAllData(),\n                  ...message,\n                ])\n              );\n            } else {\n              setMessages(\n                dataProvider.cloneWithRows([...messages.getAllData(), message])\n              );\n            }\n          }\n\n          if (!Array.isArray(message)) {\n            if (!message.me && propsContext?.enableHapticFeedback) {\n              if (Platform.OS !== 'web' && hapticEngine)\n                trigger(HapticType.Heavy);\n            }\n          }\n        },\n        /* This is a function that is used to scroll to the bottom of the list. */\n        scrollToEnd: (animated?: boolean) => {\n          recyclerlistviewRef.current?.scrollToEnd(animated);\n        },\n        /* Setting the typing status of the user. */\n        setIsTyping: (typing?: boolean) => {\n          typingStatusRef.current?.setIsTyping(typing ?? false);\n          recyclerlistviewRef.current?.scrollToEnd(true);\n        },\n        /* Removing a message from the list of messages. */\n        removeMessage: (id: number) => {\n          setMessages(\n            dataProvider.cloneWithRows(\n              messages.getAllData().filter((message) => message.id !== id)\n            )\n          );\n        },\n      }),\n      [dataProvider, messages, propsContext.enableHapticFeedback, trigger]\n    );\n\n    /* This code is checking if the first message in the previous messages is the same as the first message\nin the current messages. If it is, then it will not scroll to the bottom. */\n    useEffect(() => {\n      if (\n        previousMessages &&\n        previousMessages.getAllData()![0]?.id === messages.getAllData()![0]?.id\n      ) {\n        wait(100).then(() => {\n          recyclerlistviewRef.current?.scrollToEnd(true);\n        });\n      }\n    }, [ref, messages, previousMessages]);\n\n    const layoutProvider = useCallback(() => {\n      return new LayoutProvider(\n        (index) => {\n          const currentMessage: IMessage = messages.getAllData()[index];\n          const prevMessage: IMessage = messages.getAllData()[index - 1];\n\n          if (currentMessage.text.length >= 600) {\n            return LayoutType.ExtremeLong;\n          }\n\n          if (currentMessage.text.length >= 400) {\n            return LayoutType.Long3x;\n          }\n\n          if (currentMessage.text.length >= 200) {\n            return LayoutType.Long2x;\n          }\n\n          if (currentMessage.text.length >= 100) {\n            return LayoutType.Long;\n          }\n\n          if (currentMessage?.media) {\n            if (currentMessage.media.length > 2) {\n              return LayoutType.Media2x;\n            }\n\n            return LayoutType.Media;\n          }\n\n          if (currentMessage.repliedTo) {\n            return LayoutType.Replied;\n          }\n\n          const isFirstMessage = index === 0;\n\n          if (\n            (!isFirstMessage &&\n              dayjs(currentMessage.createdAt).date() !==\n                dayjs(prevMessage.createdAt).date()) ||\n            isFirstMessage\n          ) {\n            return LayoutType.Dated;\n          }\n\n          return LayoutType.Normal;\n        },\n        (type, dim) => {\n          dim.width = windowDimensions.width;\n\n          switch (type) {\n            case LayoutType.Normal:\n              dim.height = 85;\n              break;\n            case LayoutType.Replied:\n              dim.height = 190;\n              break;\n            case LayoutType.Dated:\n              dim.height = 110;\n              break;\n            case LayoutType.Long:\n              dim.height = 130;\n              break;\n            case LayoutType.Long2x:\n              dim.height = 170;\n              break;\n            case LayoutType.Long3x:\n              dim.height = 350;\n              break;\n            case LayoutType.ExtremeLong:\n              dim.height = 550;\n              break;\n            case LayoutType.Media:\n              dim.height = 180;\n              break;\n            case LayoutType.Media2x:\n              dim.height = 300;\n              break;\n\n            default:\n              dim.height = 85;\n              break;\n          }\n        }\n      );\n    }, [messages, windowDimensions.width]);\n\n    const renderBubble = useCallback(\n      (data: IMessage, withDate?: boolean) => {\n        if (rowRendererProp) {\n          return (\n            <View>\n              {withDate && (\n                <RenderDate\n                  date={data.createdAt}\n                  {...propsContext.renderDateProps}\n                />\n              )}\n\n              <Animated.View entering={FadeInDown} exiting={FadeOutUp}>\n                <SwipeableBubble message={data} onReply={propsContext.onReply}>\n                  {rowRendererProp(data)}\n                </SwipeableBubble>\n              </Animated.View>\n            </View>\n          );\n        }\n\n        return (\n          <View style={{ width: '100%' }}>\n            {withDate && (\n              <RenderDate\n                date={data.createdAt}\n                {...propsContext.renderDateProps}\n              />\n            )}\n            <Animated.View entering={FadeInDown} exiting={FadeOutUp}>\n              {propsContext.onReply ? (\n                <>\n                  <SwipeableBubble\n                    message={data}\n                    onReply={propsContext.onReply}\n                  />\n                </>\n              ) : (\n                <ChatBubble message={data} />\n              )}\n            </Animated.View>\n          </View>\n        );\n      },\n      [propsContext.onReply, propsContext.renderDateProps, rowRendererProp]\n    );\n\n    const rowRenderer = useCallback(\n      (type, data: IMessage) => {\n        if (type === LayoutType.Dated) {\n          return renderBubble(data, true);\n        }\n\n        return renderBubble(data);\n      },\n      [renderBubble]\n    );\n\n    const onScroll = useCallback(\n      (e: ScrollEvent, offsetX: number, offsetY: number) => {\n        if (e.nativeEvent.contentOffset.y <= 0) {\n          fabRef.current?.show();\n        } else {\n          fabRef.current?.hide();\n        }\n\n        if (props.onScroll) {\n          props.onScroll(e, offsetX, offsetY);\n        }\n      },\n      [props]\n    );\n\n    const scrollToBottom = useCallback(() => {\n      recyclerlistviewRef.current?.scrollToEnd(true);\n    }, []);\n\n    return (\n      <View style={{ minWidth: 1, minHeight: 1, maxHeight: listHeight }}>\n        {propsContext.showScrollToBottomButton && (\n          <FAB\n            ref={fabRef}\n            onPress={scrollToBottom}\n            {...propsContext.scrollToBottomProps}\n          />\n        )}\n\n        <RecyclerListView\n          layoutProvider={layoutProvider()}\n          externalScrollView={ScrollViewWithHeader}\n          dataProvider={messages}\n          style={[\n            {\n              height: propsContext.replyingTo ? '90%' : '100%',\n            },\n            props.containerStyle,\n          ]}\n          // @ts-ignore\n          ref={recyclerlistviewRef}\n          scrollViewProps={{\n            keyboardShouldPersistTaps: 'never',\n          }}\n          onScroll={onScroll}\n          optimizeForInsertDeleteAnimations\n          forceNonDeterministicRendering\n          canChangeSize={true}\n          rowRenderer={rowRenderer}\n          renderFooter={() => <TypingStatus ref={typingStatusRef} />}\n          onEndReached={props?.onEndReached}\n          onEndReachedThreshold={props?.onEndReachedThreshold}\n        />\n      </View>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}