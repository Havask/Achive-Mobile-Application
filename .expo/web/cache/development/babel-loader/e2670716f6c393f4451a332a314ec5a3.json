{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { useCallback } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nfunction _LoadEarlier(props) {\n  var onLoadEarlier = props.onLoadEarlier;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fetchingEarlier = _useState2[0],\n      setFetchingEarlier = _useState2[1];\n\n  var onPress = useCallback(function () {\n    setFetchingEarlier(true);\n    onLoadEarlier().finally(function () {\n      return setFetchingEarlier(false);\n    });\n  }, [onLoadEarlier]);\n  return React.createElement(TouchableOpacity, {\n    onPress: onPress,\n    style: props !== null && props !== void 0 && props.buttonContainerStyle ? props.buttonContainerStyle : {\n      padding: 10,\n      backgroundColor: !fetchingEarlier ? '#eb8334' : undefined,\n      maxWidth: 100,\n      margin: 10,\n      borderRadius: 10,\n      alignSelf: 'center'\n    }\n  }, React.createElement(Text, {\n    style: props !== null && props !== void 0 && props.labelStyle ? props.labelStyle : {\n      color: '#fff'\n    }\n  }, fetchingEarlier ? React.createElement(ActivityIndicator, null) : 'Load Earlier'));\n}\n\nexport var LoadEarlier = React.memo(_LoadEarlier);","map":{"version":3,"sources":["LoadEarlier.tsx"],"names":["onLoadEarlier","useState","onPress","useCallback","setFetchingEarlier","props","padding","backgroundColor","maxWidth","margin","borderRadius","alignSelf","color","fetchingEarlier","LoadEarlier","React"],"mappings":";AAAA,OAAA,KAAA,IAAA,QAAA,QAAA,OAAA;AACA,SAAA,WAAA,QAAA,OAAA;;;;;AAKA,SAAA,YAAA,CAAA,KAAA,EAAgD;AAC9C,MAAQA,aAAR,GAAA,KAAA,CAAQA,aAAR;;AACA,kBAA8CC,QAAQ,CAAtD,KAAsD,CAAtD;AAAA;AAAA,MAAM,eAAN;AAAA,MAAM,kBAAN;;AAEA,MAAMC,OAAO,GAAGC,WAAW,CAAC,YAAM;AAChCC,IAAAA,kBAAkB,CAAlBA,IAAkB,CAAlBA;AAEAJ,IAAAA,aAAa,GAAbA,OAAAA,CAAyB;AAAA,aAAMI,kBAAkB,CAAjDJ,KAAiD,CAAxB;AAAA,KAAzBA;AAHyB,GAAA,EAIxB,CAJH,aAIG,CAJwB,CAA3B;AAMA,SACE,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA;AACE,IAAA,OAAO,EADT,OAAA;AAEE,IAAA,KAAK,EACHK,KAAK,KAALA,IAAAA,IAAAA,KAAK,KAAA,KAALA,CAAAA,IAAAA,KAAK,CAALA,oBAAAA,GACIA,KAAK,CADTA,oBAAAA,GAEI;AACEC,MAAAA,OAAO,EADT,EAAA;AAEEC,MAAAA,eAAe,EAAE,CAAA,eAAA,GAAA,SAAA,GAFnB,SAAA;AAGEC,MAAAA,QAAQ,EAHV,GAAA;AAIEC,MAAAA,MAAM,EAJR,EAAA;AAKEC,MAAAA,YAAY,EALd,EAAA;AAMEC,MAAAA,SAAS,EAAE;AANb;AALR,GAAA,EAeE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,KAAK,EAAEN,KAAK,KAALA,IAAAA,IAAAA,KAAK,KAAA,KAALA,CAAAA,IAAAA,KAAK,CAALA,UAAAA,GAAoBA,KAAK,CAAzBA,UAAAA,GAAuC;AAAEO,MAAAA,KAAK,EAAE;AAAT;AAApD,GAAA,EACGC,eAAe,GAAG,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAH,IAAG,CAAH,GAjBtB,cAgBI,CAfF,CADF;AAqBD;;AAED,OAAO,IAAMC,WAAW,GAAGC,KAAK,CAALA,IAAAA,CAApB,YAAoBA,CAApB","sourcesContent":["import React, { useState } from 'react';\nimport { useCallback } from 'react';\nimport { ActivityIndicator } from 'react-native';\nimport { Text, TouchableOpacity } from 'react-native';\nimport type { ILoadEarlierProps } from 'src/types/Chatty.types';\n\nfunction _LoadEarlier(props: ILoadEarlierProps) {\n  const { onLoadEarlier } = props;\n  const [fetchingEarlier, setFetchingEarlier] = useState(false);\n\n  const onPress = useCallback(() => {\n    setFetchingEarlier(true);\n\n    onLoadEarlier!().finally(() => setFetchingEarlier(false));\n  }, [onLoadEarlier]);\n\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={\n        props?.buttonContainerStyle\n          ? props.buttonContainerStyle\n          : {\n              padding: 10,\n              backgroundColor: !fetchingEarlier ? '#eb8334' : undefined,\n              maxWidth: 100,\n              margin: 10,\n              borderRadius: 10,\n              alignSelf: 'center',\n            }\n      }\n    >\n      <Text style={props?.labelStyle ? props.labelStyle : { color: '#fff' }}>\n        {fetchingEarlier ? <ActivityIndicator /> : 'Load Earlier'}\n      </Text>\n    </TouchableOpacity>\n  );\n}\n\nexport const LoadEarlier = React.memo(_LoadEarlier);\n"]},"metadata":{},"sourceType":"module"}