{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useImperativeHandle, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nfunction _FAB(_, ref) {\n  var _$containerStyle, _$content;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isVisible = _useState2[0],\n      setIsVisible = _useState2[1];\n\n  useImperativeHandle(ref, function () {\n    return {\n      show: function show() {\n        return setIsVisible(true);\n      },\n      hide: function hide() {\n        return setIsVisible(false);\n      }\n    };\n  }, []);\n  if (!isVisible) return null;\n  return React.createElement(TouchableOpacity, {\n    style: (_$containerStyle = _.containerStyle) !== null && _$containerStyle !== void 0 ? _$containerStyle : styles.button,\n    onPress: _.onPress\n  }, (_$content = _.content) !== null && _$content !== void 0 ? _$content : React.createElement(Text, {\n    style: styles.label\n  }, \"DOWN\"));\n}\n\nvar styles = StyleSheet.create({\n  button: {\n    width: 50,\n    zIndex: 1,\n    height: 50,\n    backgroundColor: 'lightblue',\n    padding: 10,\n    borderRadius: 50,\n    position: 'absolute',\n    bottom: 50,\n    right: 20\n  },\n  label: {\n    textAlign: 'center',\n    fontSize: 10\n  }\n});\nexport var FAB = React.memo(React.forwardRef(_FAB));","map":{"version":3,"mappings":";AACA,OAAOA,KAAP,IAAgBC,mBAAhB,EAAqCC,QAArC,QAAqD,OAArD;;;;;AASA,SAASC,IAAT,CAAcC,CAAd,EAAuCC,GAAvC,EAA0D;EAAA;;EACxD,gBAAkCH,QAAQ,CAAU,KAAV,CAA1C;EAAA;EAAA,IAAOI,SAAP;EAAA,IAAkBC,YAAlB;;EAEAN,mBAAmB,CACjBI,GADiB,EAEjB;IAAA,OAAO;MACLG,IAAI,EAAE;QAAA,OAAMD,YAAY,CAAC,IAAD,CAAlB;MAAA,CADD;MAELE,IAAI,EAAE;QAAA,OAAMF,YAAY,CAAC,KAAD,CAAlB;MAAA;IAFD,CAAP;EAAA,CAFiB,EAMjB,EANiB,CAAnBN;EASA,IAAI,CAACK,SAAL,EAAgB,OAAO,IAAP;EAEhB,OACEN,oBAACU,gBAAD;IACEC,KAAK,sBAAEP,CAAC,CAACQ,cAAJ,+DAAsBC,MAAM,CAACC,MADpC;IAEEC,OAAO,EAAEX,CAAC,CAACW;EAFb,gBAIGX,CAAC,CAACY,OAJL,iDAIgBhB,oBAACiB,IAAD;IAAMN,KAAK,EAAEE,MAAM,CAACK;EAApB,UAJhB,CADF;AAQD;;AAED,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAXD,CAAkB;EAC/BL,MAAM,EAAE;IACNO,KAAK,EAAE,EADD;IAENC,MAAM,EAAE,CAFF;IAGNC,MAAM,EAAE,EAHF;IAINC,eAAe,EAAE,WAJX;IAKNC,OAAO,EAAE,EALH;IAMNC,YAAY,EAAE,EANR;IAONC,QAAQ,EAAE,UAPJ;IAQNC,MAAM,EAAE,EARF;IASNC,KAAK,EAAE;EATD,CADuB;EAY/BX,KAAK,EAAE;IACLY,SAAS,EAAE,QADN;IAELC,QAAQ,EAAE;EAFL;AAZwB,CAAlBZ,CAAf;AAkBA,OAAO,IAAMa,GAAG,GAAGhC,KAAK,CAACiC,IAANjC,CAAWA,KAAK,CAACkC,UAANlC,CAAiBG,IAAjBH,CAAXA,CAAZ","names":["React","useImperativeHandle","useState","_FAB","_","ref","isVisible","setIsVisible","show","hide","TouchableOpacity","style","containerStyle","styles","button","onPress","content","Text","label","StyleSheet","create","width","zIndex","height","backgroundColor","padding","borderRadius","position","bottom","right","textAlign","fontSize","FAB","memo","forwardRef"],"sources":["FAB.tsx"],"sourcesContent":["import type { Ref } from 'react';\nimport React, { useImperativeHandle, useState } from 'react';\nimport { StyleSheet, Text, TouchableOpacity } from 'react-native';\nimport type { IScrollToBottomProps } from 'src/types/Chatty.types';\n\nexport interface IFabRef {\n  show: () => void;\n  hide: () => void;\n}\n\nfunction _FAB(_: IScrollToBottomProps, ref: Ref<IFabRef>) {\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      show: () => setIsVisible(true),\n      hide: () => setIsVisible(false),\n    }),\n    []\n  );\n\n  if (!isVisible) return null;\n\n  return (\n    <TouchableOpacity\n      style={_.containerStyle ?? styles.button}\n      onPress={_.onPress}\n    >\n      {_.content ?? <Text style={styles.label}>DOWN</Text>}\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    width: 50,\n    zIndex: 1,\n    height: 50,\n    backgroundColor: 'lightblue',\n    padding: 10,\n    borderRadius: 50,\n    position: 'absolute',\n    bottom: 50,\n    right: 20,\n  },\n  label: {\n    textAlign: 'center',\n    fontSize: 10,\n  },\n});\n\nexport const FAB = React.memo(React.forwardRef(_FAB));\n"]},"metadata":{},"sourceType":"module"}