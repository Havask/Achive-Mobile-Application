{"ast":null,"code":"import React, { useCallback } from 'react';\nimport { useMemo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TouchableWithoutFeedback } from 'react-native-gesture-handler';\nimport { ChatBubbleEmitter } from \"../utils/eventEmitter\";\n\nfunction _ReplyingTo(props) {\n  var username = props.username,\n      text = props.text,\n      messageId = props.messageId;\n  var cuttedText = useMemo(function () {\n    return text.slice(0, 100) + '...';\n  }, [text]);\n  var onPressChatBubble = useCallback(function () {\n    ChatBubbleEmitter.emit('replyBubblePressed', messageId);\n  }, [messageId]);\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: onPressChatBubble\n  }, React.createElement(View, {\n    style: styles.reply\n  }, React.createElement(View, {\n    style: styles.replyBody\n  }, React.createElement(Text, {\n    style: styles.replyUsername\n  }, username), React.createElement(Text, null, cuttedText))));\n}\n\nexport var ReplyingTo = React.memo(_ReplyingTo);\nvar styles = StyleSheet.create({\n  reply: {\n    borderRadius: 10,\n    flexDirection: 'row',\n    padding: 10,\n    backgroundColor: '#f5f5f5',\n    borderLeftColor: '#a35d96',\n    borderLeftWidth: 6,\n    marginBottom: 10\n  },\n  replyBody: {},\n  replyUsername: {\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,OAAxB;;;;AAEA,SAASC,wBAAT,QAAyC,8BAAzC;AACA,SAASC,iBAAT;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAIG;EACD,IAAQC,QAAR,GAAsCD,KAAtC,CAAQC,QAAR;EAAA,IAAkBC,IAAlB,GAAsCF,KAAtC,CAAkBE,IAAlB;EAAA,IAAwBC,SAAxB,GAAsCH,KAAtC,CAAwBG,SAAxB;EAEA,IAAMC,UAAU,GAAGR,OAAO,CAAC,YAAM;IAC/B,OAAOM,IAAI,CAACG,KAALH,CAAW,CAAXA,EAAc,GAAdA,IAAqB,KAA5B;EADwB,GAEvB,CAACA,IAAD,CAFuB,CAA1B;EAIA,IAAMI,iBAAiB,GAAGX,WAAW,CAAC,YAAM;IAC1CG,iBAAiB,CAACS,IAAlBT,CAAuB,oBAAvBA,EAA6CK,SAA7CL;EADmC,GAElC,CAACK,SAAD,CAFkC,CAArC;EAIA,OACET,oBAACG,wBAAD;IAA0BW,OAAO,EAAEF;EAAnC,GACEZ,oBAACe,IAAD;IAAMC,KAAK,EAAEC,MAAM,CAACC;EAApB,GACElB,oBAACe,IAAD;IAAMC,KAAK,EAAEC,MAAM,CAACE;EAApB,GACEnB,oBAACoB,IAAD;IAAMJ,KAAK,EAAEC,MAAM,CAACI;EAApB,GAAoCd,QAApC,CADF,EAEEP,oBAACoB,IAAD,QAAOV,UAAP,CAFF,CADF,CADF,CADF;AAUD;;AAED,OAAO,IAAMY,UAAU,GAAGtB,KAAK,CAACuB,IAANvB,CAAWK,WAAXL,CAAnB;AAEP,IAAMiB,MAAM,GAAGO,UAAU,CAACC,MAAXD,CAAkB;EAC/BN,KAAK,EAAE;IACLQ,YAAY,EAAE,EADT;IAELC,aAAa,EAAE,KAFV;IAGLC,OAAO,EAAE,EAHJ;IAILC,eAAe,EAAE,SAJZ;IAKLC,eAAe,EAAE,SALZ;IAMLC,eAAe,EAAE,CANZ;IAOLC,YAAY,EAAE;EAPT,CADwB;EAU/Bb,SAAS,EAAE,EAVoB;EAW/BE,aAAa,EAAE;IACbY,UAAU,EAAE;EADC;AAXgB,CAAlBT,CAAf","names":["React","useCallback","useMemo","TouchableWithoutFeedback","ChatBubbleEmitter","_ReplyingTo","props","username","text","messageId","cuttedText","slice","onPressChatBubble","emit","onPress","View","style","styles","reply","replyBody","Text","replyUsername","ReplyingTo","memo","StyleSheet","create","borderRadius","flexDirection","padding","backgroundColor","borderLeftColor","borderLeftWidth","marginBottom","fontWeight"],"sources":["ReplyingTo.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { useMemo } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { TouchableWithoutFeedback } from 'react-native-gesture-handler';\nimport { ChatBubbleEmitter } from '../utils/eventEmitter';\n\nfunction _ReplyingTo(props: {\n  username: string;\n  text: string;\n  messageId: number;\n}) {\n  const { username, text, messageId } = props;\n\n  const cuttedText = useMemo(() => {\n    return text.slice(0, 100) + '...';\n  }, [text]);\n\n  const onPressChatBubble = useCallback(() => {\n    ChatBubbleEmitter.emit('replyBubblePressed', messageId);\n  }, [messageId]);\n\n  return (\n    <TouchableWithoutFeedback onPress={onPressChatBubble}>\n      <View style={styles.reply}>\n        <View style={styles.replyBody}>\n          <Text style={styles.replyUsername}>{username}</Text>\n          <Text>{cuttedText}</Text>\n        </View>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n}\n\nexport const ReplyingTo = React.memo(_ReplyingTo);\n\nconst styles = StyleSheet.create({\n  reply: {\n    borderRadius: 10,\n    flexDirection: 'row',\n    padding: 10,\n    backgroundColor: '#f5f5f5',\n    borderLeftColor: '#a35d96',\n    borderLeftWidth: 6,\n    marginBottom: 10,\n  },\n  replyBody: {},\n  replyUsername: {\n    fontWeight: 'bold',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}