{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { FirebaseContext } from \"../../context/FirebaseContext\";\nimport { UserContext } from \"../../context/UserContext\";\nimport { GroupContext } from \"../../context/GroupContext\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport { VStack, Input, Button, Icon, Box, Heading, Stack, Pressable, AspectRatio, Image } from \"native-base\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default ExplorerScreen = function ExplorerScreen(_ref) {\n  var navigation = _ref.navigation;\n  var firebase = useContext(FirebaseContext);\n\n  var _useContext = useContext(UserContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      User = _useContext2[0],\n      setUser = _useContext2[1];\n\n  var _useContext3 = useContext(GroupContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      Group = _useContext4[0],\n      setGroup = _useContext4[1];\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      Suggestion = _useState2[0],\n      setSuggestion = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Query = _useState4[0],\n      setQuery = _useState4[1];\n\n  useEffect(function () {\n    RetriveGroups();\n  }, []);\n\n  var SearchHandler = function SearchHandler() {\n    var Search_array = firebase.SearchForCommunities(Query);\n    setSuggestion(Search_array);\n  };\n\n  var JoinGroup = function JoinGroup(groupID) {\n    firebase.JoinGroup(groupID);\n  };\n\n  var RetriveGroups = function RetriveGroups() {\n    var NewSuggestion;\n    return _regeneratorRuntime.async(function RetriveGroups$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(firebase.ExplorationFeed());\n\n          case 3:\n            NewSuggestion = _context.sent;\n            setSuggestion(NewSuggestion);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"Error @RetriveGroups\", _context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var RenderGroups = function RenderGroups(_ref2) {\n    var item = _ref2.item;\n    return _jsx(Box, {\n      w: \"200\",\n      h: \"200\",\n      rounded: \"lg\",\n      overflow: \"hidden\",\n      borderColor: \"coolGray.200\",\n      borderWidth: \"5\",\n      children: _jsxs(Pressable, {\n        _pressed: {\n          bg: \"muted.400\"\n        },\n        onPress: JoinGroup(item.groupID),\n        children: [_jsx(Box, {\n          w: \"100%\",\n          children: _jsx(AspectRatio, {\n            w: \"100%\",\n            ratio: 16 / 9,\n            children: _jsx(Image, {\n              source: {\n                uri: \"https://picsum.photos/200/300\"\n              },\n              alt: \"image\"\n            })\n          })\n        }), _jsx(Stack, {\n          p: \"4\",\n          space: 3,\n          children: _jsx(Stack, {\n            space: 2,\n            children: _jsx(Heading, {\n              size: \"md\",\n              ml: \"-1\",\n              children: item.groupname\n            })\n          })\n        })]\n      })\n    });\n  };\n\n  return _jsxs(Box, {\n    children: [_jsxs(VStack, {\n      my: \"4\",\n      space: 5,\n      w: \"100%\",\n      maxW: \"300px\",\n      alignSelf: \"center\",\n      pt: \"10\",\n      children: [_jsxs(VStack, {\n        w: \"100%\",\n        space: 5,\n        alignSelf: \"center\",\n        children: [_jsx(Heading, {\n          alignSelf: \"center\",\n          fontSize: \"lg\",\n          children: \" Find your community: \"\n        }), _jsx(Input, {\n          input: Query,\n          onChangeText: function onChangeText(Query) {\n            return setQuery(Query);\n          },\n          placeholder: \"Search for groups\",\n          width: \"100%\",\n          borderRadius: \"4\",\n          py: \"3\",\n          px: \"1\",\n          fontSize: \"14\",\n          InputLeftElement: _jsx(Icon, {\n            m: \"2\",\n            ml: \"3\",\n            size: \"6\",\n            color: \"gray.400\",\n            as: _jsx(MaterialIcons, {\n              name: \"search\"\n            })\n          })\n        })]\n      }), _jsx(Button, {\n        onPress: SearchHandler,\n        children: \"Search for group\"\n      })]\n    }), _jsx(FlatList, {\n      contentContainerStyle: {\n        alignSelf: 'center'\n      },\n      numColumns: 2,\n      data: Suggestion,\n      renderItem: RenderGroups,\n      keyExtractor: function keyExtractor(item) {\n        return item.groupID.toString();\n      },\n      refreshControl: _jsx(RefreshControl, {\n        onRefresh: RetriveGroups\n      })\n    })]\n  });\n};","map":{"version":3,"names":["React","useState","useContext","useEffect","FirebaseContext","UserContext","GroupContext","VStack","Input","Button","Icon","Box","Heading","Stack","Pressable","AspectRatio","Image","MaterialIcons","ExplorerScreen","navigation","firebase","User","setUser","Group","setGroup","Suggestion","setSuggestion","Query","setQuery","RetriveGroups","SearchHandler","Search_array","SearchForCommunities","JoinGroup","groupID","ExplorationFeed","NewSuggestion","console","log","RenderGroups","item","bg","uri","groupname","alignSelf","toString"],"sources":["/Users/havardskjaerstein/Desktop/Achive/screens/Explorer/ExploreScreen.js"],"sourcesContent":["\nimport React, {useState, useContext, useEffect} from \"react\";\nimport { FlatList } from \"react-native\";\nimport {FirebaseContext} from \"../../context/FirebaseContext\";\nimport {UserContext} from \"../../context/UserContext\";\nimport {GroupContext} from \"../../context/GroupContext\";\n\nimport {RefreshControl, Vibration} from 'react-native';\n\nimport { VStack, Input, Button, Icon, Box, Heading,Stack,Pressable, AspectRatio, Image} from \"native-base\";\nimport {MaterialIcons } from \"@expo/vector-icons\";\n\nexport default ExplorerScreen = ({navigation}) => {\n  \n  const firebase = useContext(FirebaseContext); \n  const [User, setUser] = useContext(UserContext); \n  const [Group, setGroup] = useContext(GroupContext); \n  \n  const [Suggestion, setSuggestion] = useState(); \n  const [Query, setQuery] = useState(\"\"); \n\n  useEffect(() => {\n    RetriveGroups();  \n  }, []);\n\n  const SearchHandler = () => {\n//queryes the database for groups to join\n\n  const Search_array = firebase.SearchForCommunities(Query)\n  setSuggestion(Search_array); \n}; \n\nconst JoinGroup = (groupID) => {\n    //queryes the database for groups to join\n    firebase.JoinGroup(groupID)\n  }; \n\nconst RetriveGroups = async () => {\n  try{\n    const NewSuggestion = await firebase.ExplorationFeed() \n    //console.log(\"sug\",NewSuggestion)\n    setSuggestion(NewSuggestion);  \n\n    }catch(error){\n      console.log(\"Error @RetriveGroups\", error)\n    }\n}\n  const RenderGroups = ({item}) =>(\n\n    <Box w=\"200\" h=\"200\" rounded=\"lg\" overflow=\"hidden\" borderColor=\"coolGray.200\" borderWidth=\"5\" >\n      <Pressable _pressed={{bg: \"muted.400\"}} onPress={JoinGroup(item.groupID)}>\n        <Box w=\"100%\">\n            <AspectRatio w=\"100%\" ratio={16 / 9}>\n              <Image source={{\n              uri: \"https://picsum.photos/200/300\"\n            }} alt=\"image\" />\n            </AspectRatio>\n        </Box>\n\n        <Stack p=\"4\" space={3}>\n          <Stack space={2}>\n            <Heading size=\"md\" ml=\"-1\">\n            {item.groupname}\n            </Heading>\n          </Stack>\n        </Stack>\n        </Pressable>\n      </Box>\n  )\n\n  return(\n    <Box>\n\n      <VStack my=\"4\" space={5} w=\"100%\" maxW=\"300px\" alignSelf=\"center\" pt=\"10\">\n        <VStack w=\"100%\" space={5} alignSelf=\"center\">\n          <Heading alignSelf=\"center\" fontSize=\"lg\"> Find your community: </Heading>\n          <Input input={Query} onChangeText={Query => setQuery(Query)} placeholder=\"Search for groups\" width=\"100%\" borderRadius=\"4\" py=\"3\" px=\"1\" fontSize=\"14\" \n          InputLeftElement={<Icon m=\"2\" ml=\"3\" size=\"6\" color=\"gray.400\" as={<MaterialIcons name=\"search\" />} />} />\n        </VStack>\n        <Button onPress={SearchHandler}>Search for group</Button>\n      </VStack>\n\n      <FlatList \n        contentContainerStyle={{alignSelf: 'center'}}\n        numColumns={2}\n        data={Suggestion} \n        renderItem={RenderGroups} \n        keyExtractor={item => item.groupID.toString()} \n        refreshControl={<RefreshControl onRefresh={RetriveGroups} />}\n      />\n    </Box>\n  );\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}