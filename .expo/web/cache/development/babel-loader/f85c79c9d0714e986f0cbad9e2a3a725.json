{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { Entypo, Ionicons } from \"@expo/vector-icons\";\nimport { FirebaseContext } from \"../../../context/FirebaseContext\";\nimport { UserContext } from \"../../../context/UserContext\";\nimport { GroupContext } from \"../../../context/GroupContext\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport { Timestamp } from \"firebase/firestore\";\nimport { Flex, Box, Pressable, Heading, IconButton, Icon, HStack, Avatar, VStack, Spacer, Center, Divider, Stack, Button, Input, Text, Image } from \"native-base\";\nimport * as Haptics from 'expo-haptics';\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default GroupFeeds = function GroupFeeds(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(GroupContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      group = _useContext2[0],\n      setGroup = _useContext2[1];\n\n  var firebase = useContext(FirebaseContext);\n\n  var _useContext3 = useContext(UserContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      user = _useContext4[0],\n      setUser = _useContext4[1];\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      post = _useState2[0],\n      setPost = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      setText = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      feed = _useState6[0],\n      setfeed = _useState6[1];\n\n  var _useState7 = useState(\"recent\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      sortsetting = _useState8[0],\n      setsortsetting = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      refreshing = _useState10[0],\n      setRefreshing = _useState10[1];\n\n  var data = [{\n    id: \"1223434\",\n    user: {\n      username: \"Synnøve\",\n      profilePhotoUrl: \"https://picsum.photos/96/96\"\n    },\n    postedAt: Timestamp,\n    post: \"Hei Håvard\",\n    photoUrl: \"https://picsum.photos/200/300\",\n    Upvotes: 21,\n    Downvotes: 3\n  }];\n  useEffect(function () {\n    FirstRefresh();\n  }, []);\n\n  var FirstRefresh = function FirstRefresh() {\n    var RetrivedFeed;\n    return _regeneratorRuntime.async(function FirstRefresh$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(firebase.RetriveFeed(sortsetting));\n\n          case 3:\n            RetrivedFeed = _context.sent;\n            setfeed(RetrivedFeed);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"Something went wrong @FirstRefresh\");\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var RetriveFeed = function RetriveFeed() {\n    var RetrivedFeed;\n    return _regeneratorRuntime.async(function RetriveFeed$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            Haptics.notificationAsync(Haptics.NotificationFeedbackType.Success);\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(firebase.RetriveFeed(sortsetting));\n\n          case 4:\n            RetrivedFeed = _context2.sent;\n            setfeed(RetrivedFeed);\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(\"Something went wrong @RetriveFeed\");\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var makeid = function makeid(length) {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n    return result;\n  };\n\n  var SendPost = function SendPost() {\n    return _regeneratorRuntime.async(function SendPost$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(sett());\n\n          case 2:\n            console.log(post);\n            console.log(group.groupID);\n            _context3.prev = 4;\n            _context3.next = 7;\n            return _regeneratorRuntime.awrap(firebase.AddPost(post, group.groupID));\n\n          case 7:\n            _context3.next = 12;\n            break;\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](4);\n            console.log(\"Error @SendPost\", _context3.t0);\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[4, 9]], Promise);\n  };\n\n  var Upvote = function Upvote() {\n    return _regeneratorRuntime.async(function Upvote$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(sett());\n\n          case 2:\n            _context4.prev = 2;\n            _context4.next = 5;\n            return _regeneratorRuntime.awrap(firebase.AddPost(post, group.groupID));\n\n          case 5:\n            _context4.next = 10;\n            break;\n\n          case 7:\n            _context4.prev = 7;\n            _context4.t0 = _context4[\"catch\"](2);\n            console.log(\"Error @SendPost\", _context4.t0);\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[2, 7]], Promise);\n  };\n\n  var sett = function sett() {\n    return _regeneratorRuntime.async(function sett$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            setPost({\n              id: makeid(10),\n              user: {\n                uid: user.uid,\n                username: user.username\n              },\n              avatar: {\n                uri: user.profilePhotoUrl\n              },\n              postedAt: new Date(),\n              post: text,\n              Upvotes: 0,\n              Downvotes: 0\n            });\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var renderPost = function renderPost(_ref2) {\n    var item = _ref2.item;\n    return _jsx(Box, {\n      pb: \"3\",\n      children: _jsx(Box, {\n        bg: \"#ffffff\",\n        p: \"3\",\n        children: _jsxs(HStack, {\n          children: [_jsxs(Flex, {\n            Flex: true,\n            direction: \"row\",\n            pr: \"3\",\n            children: [_jsx(Avatar, {\n              w: \"12\",\n              h: \"12\",\n              source: item.avatar\n            }), _jsxs(Box, {\n              flex: \"1\",\n              children: [_jsx(Text, {\n                children: item.user.username\n              }), _jsx(Text, {\n                children: item.user.postedAt\n              })]\n            })]\n          }), _jsxs(Box, {\n            children: [_jsx(VStack, {\n              children: _jsxs(Flex, {\n                Flex: true,\n                direction: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                children: [_jsx(Text, {\n                  fontSize: \"xl\",\n                  children: item.post\n                }), _jsx(IconButton, {\n                  onPress: SendPost,\n                  icon: _jsx(Entypo, {\n                    name: \"dots-three-horizontal\",\n                    size: 16,\n                    color: \"#73788b\"\n                  })\n                })]\n              })\n            }), _jsx(Stack, {\n              w: \"300\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              children: _jsx(Image, {\n                source: {\n                  uri: item.photoUrl\n                },\n                size: \"xl\",\n                w: \"100%\",\n                alt: \"ProfilePhoto\"\n              })\n            }), _jsxs(Flex, {\n              Flex: true,\n              direction: \"row\",\n              children: [_jsxs(Flex, {\n                direction: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                children: [_jsx(IconButton, {\n                  onPress: Upvote,\n                  icon: _jsx(Ionicons, {\n                    name: \"ios-arrow-up-circle-outline\",\n                    size: 24,\n                    color: \"#73788b\"\n                  })\n                }), _jsx(Text, {\n                  children: item.Upvotes\n                })]\n              }), _jsxs(Flex, {\n                direction: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                children: [_jsx(IconButton, {\n                  onPress: SendPost,\n                  icon: _jsx(Ionicons, {\n                    name: \"ios-chatbox-ellipses-outline\",\n                    size: 24,\n                    color: \"#73788b\"\n                  })\n                }), _jsx(Text, {\n                  children: item.comments\n                })]\n              })]\n            })]\n          })]\n        })\n      })\n    });\n  };\n\n  return _jsx(Box, {\n    pt: \"3\",\n    children: _jsxs(Box, {\n      p: \"3\",\n      children: [_jsxs(Flex, {\n        Flex: true,\n        direction: \"row\",\n        pb: \"4\",\n        children: [_jsx(Input, {\n          size: \"md\",\n          mx: \"4\",\n          placeholder: \"What on your mind?\",\n          w: \"75%\",\n          maxWidth: \"500px\",\n          autocorrect: false,\n          autoFocus: true,\n          value: text,\n          onChangeText: function onChangeText(text) {\n            return setText(text);\n          }\n        }), _jsx(IconButton, {\n          onPress: SendPost,\n          icon: _jsx(FontAwesome, {\n            name: \"pencil-square-o\",\n            size: 40,\n            color: \"black\"\n          })\n        })]\n      }), _jsx(FlatList, {\n        data: feed,\n        renderItem: renderPost,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        refreshControl: _jsx(RefreshControl, {\n          refreshing: refreshing,\n          onRefresh: RetriveFeed\n        })\n      })]\n    })\n  });\n};","map":{"version":3,"sources":["/Users/havardskjaerstein/Desktop/Achive/screens/GroupTab/GroupScreens/GroupFeeds.js"],"names":["React","useState","useContext","useEffect","Entypo","Ionicons","FirebaseContext","UserContext","GroupContext","FontAwesome","Timestamp","Flex","Box","Pressable","Heading","IconButton","Icon","HStack","Avatar","VStack","Spacer","Center","Divider","Stack","Button","Input","Text","Image","Haptics","GroupFeeds","navigation","group","setGroup","firebase","user","setUser","post","setPost","text","setText","feed","setfeed","sortsetting","setsortsetting","refreshing","setRefreshing","data","id","username","profilePhotoUrl","postedAt","photoUrl","Upvotes","Downvotes","FirstRefresh","RetriveFeed","RetrivedFeed","console","log","notificationAsync","NotificationFeedbackType","Success","makeid","length","result","characters","charactersLength","i","charAt","Math","floor","random","SendPost","sett","groupID","AddPost","Upvote","uid","avatar","uri","Date","renderPost","item","comments","toString"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from \"react\";\nimport {Entypo, Ionicons} from \"@expo/vector-icons\"; \nimport {FirebaseContext} from \"../../../context/FirebaseContext\";\nimport {UserContext} from \"../../../context/UserContext\";\nimport {GroupContext} from \"../../../context/GroupContext\";\nimport { FontAwesome } from '@expo/vector-icons'\nimport { Timestamp } from \"firebase/firestore\";\nimport {Flex,Box, Pressable, Heading, IconButton, Icon, HStack, \n  Avatar, VStack, Spacer, Center,Divider,Stack, Button, Input, Text, Image} from \"native-base\";\n\nimport * as Haptics from 'expo-haptics';\nimport {RefreshControl, FlatList} from 'react-native';\n\n\nexport default GroupFeeds = ({navigation}) => {\n\n  const [group, setGroup] = useContext(GroupContext); \n  const firebase = useContext(FirebaseContext); \n  const [user, setUser] = useContext(UserContext); \n  const [post, setPost] = useState([])\n  const [text, setText] = useState(\"\")\n  const [feed, setfeed] = useState([]); \n  const [sortsetting, setsortsetting] = useState(\"recent\"); \n  const [refreshing, setRefreshing] = useState(false);\n\n  const data = [\n    {\n      id: \"1223434\",\n      user: {\n        username: \"Synnøve\", \n        profilePhotoUrl: \"https://picsum.photos/96/96\"\n      },\n      postedAt: Timestamp,\n      post: \"Hei Håvard\",\n      photoUrl: \"https://picsum.photos/200/300\",\n      Upvotes: 21,\n      Downvotes: 3\n    },\n  ]\n\nuseEffect(() => {\n  FirstRefresh(); \n}, []);\n\nconst FirstRefresh = async () => {\n  try{\n    const RetrivedFeed = await firebase.RetriveFeed(sortsetting); \n    setfeed(RetrivedFeed); \n\n  }catch {\n    console.log(\"Something went wrong @FirstRefresh\"); \n  }\n};\n\n//fetch the latest feed for \nconst RetriveFeed = async () => {\n  try{\n    Haptics.notificationAsync(Haptics.NotificationFeedbackType.Success)\n    const RetrivedFeed = await firebase.RetriveFeed(sortsetting); \n    //console.log(RetrivedFeed); \n\n    setfeed(RetrivedFeed); \n\n  }catch {\n    console.log(\"Something went wrong @RetriveFeed\"); \n  }\n};\n\nconst makeid = length => {\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for ( var i = 0; i < length; i++ ) {\n    result += characters.charAt(Math.floor(Math.random() * \n    charactersLength));\n }\n  return result;\n}\n\n\n//Ha en max lengde på posten. \nconst SendPost = async () => {\n  \n  await sett(); \n  console.log(post)\n  console.log(group.groupID)\n  try{\n    await firebase.AddPost(post, group.groupID)\n  }catch(error){\n    console.log(\"Error @SendPost\", error)\n  }\n};\n\nconst Upvote = async () => {\n  \n  await sett(); \n  try{\n    await firebase.AddPost(post, group.groupID)\n  }catch(error){\n    console.log(\"Error @SendPost\", error)\n  }\n};\n\nconst sett = async () => {\n  setPost(\n    {\n      id: makeid(10), \n      user: {\n        uid: user.uid,\n        username: user.username, \n      }, \n      avatar: {uri: user.profilePhotoUrl},\n      postedAt: new Date(),\n      post: text,   \n      Upvotes: 0, \n      Downvotes: 0, \n    }); \n}\n\nconst renderPost = ({item}) =>(\n    <Box pb=\"3\">\n      <Box bg=\"#ffffff\" p=\"3\">\n        <HStack>\n          <Flex Flex direction=\"row\" pr=\"3\" > \n        \n            <Avatar w=\"12\" h=\"12\"   source={item.avatar}/>\n\n            <Box flex=\"1\">\n              <Text>{item.user.username}</Text>\n              <Text>  \n                {item.user.postedAt}\n              </Text>\n            </Box>\n          </Flex>\n\n        <Box>\n          <VStack>\n            <Flex Flex direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\"> \n              <Text fontSize=\"xl\">{item.post}</Text>\n              <IconButton onPress={SendPost}\n                  icon={ <Entypo name=\"dots-three-horizontal\" size={16} color=\"#73788b\" />}\n                  />\n            </Flex>\n          </VStack>\n\n          <Stack w=\"300\" justifyContent=\"space-between\" alignItems=\"center\">\n            <Image source={{uri: item.photoUrl}} size=\"xl\" w=\"100%\" alt=\"ProfilePhoto\" /> \n          </Stack>\n\n          <Flex Flex direction=\"row\">\n\n            <Flex direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n                <IconButton onPress={Upvote}\n                    icon={ <Ionicons name =\"ios-arrow-up-circle-outline\" size={24} color=\"#73788b\"/>}\n                    />\n                <Text>\n                  {item.Upvotes}\n                </Text>\n              </Flex>\n              <Flex direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n                <IconButton onPress={SendPost}\n                  icon={  <Ionicons name =\"ios-chatbox-ellipses-outline\" size={24} color=\"#73788b\"/>}\n                  />\n                <Text >\n                {item.comments}\n                </Text>\n              </Flex>\n            </Flex>\n          </Box>\n        </HStack>\n      </Box>\n    </Box>\n  )\n\n  return(\n    <Box pt=\"3\">\n      <Box p=\"3\">\n        <Flex Flex direction=\"row\" pb=\"4\" >\n          <Input \n            size=\"md\" mx=\"4\" placeholder=\"What on your mind?\" w=\"75%\" maxWidth=\"500px\" \n            autocorrect={false} \n            autoFocus={true} \n            value={text}\n            onChangeText={text => setText(text)}\n          />\n          <IconButton onPress={SendPost}\n            icon={ <FontAwesome \n              name=\"pencil-square-o\" \n              size={40} \n              color=\"black\" \n            />}\n          />\n        </Flex>\n\n        <FlatList \n          data={feed} \n          renderItem={renderPost} \n          keyExtractor={item => item.id.toString()} \n          refreshControl={<RefreshControl refreshing={refreshing} onRefresh={RetriveFeed} />}\n          />\n      </Box>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}