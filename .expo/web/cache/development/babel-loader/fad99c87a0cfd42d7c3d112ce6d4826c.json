{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext } from \"react\";\nimport styled from \"styled-components/native\";\nimport Text from \"../../components/Text.js\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as MediaLibrary from 'expo-media-library';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { FirebaseContext } from \"../../context/FirebaseContext\";\nimport { UserContext } from \"../../context/UserContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default SignUpScreen = function SignUpScreen(_ref) {\n  var navigation = _ref.navigation;\n  var firebase = useContext(FirebaseContext);\n\n  var _useContext = useContext(UserContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      _ = _useContext2[0],\n      setUser = _useContext2[1];\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      profilePhoto = _useState10[0],\n      setProfilePhoto = _useState10[1];\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n\n            if (!result.cancelled) {\n              setProfilePhoto(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var signUp = function signUp() {\n    var user, createdUser;\n    return _regeneratorRuntime.async(function signUp$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setLoading(true);\n            user = {\n              username: username,\n              email: email,\n              password: password,\n              profilePhoto: profilePhoto\n            };\n            _context2.prev = 2;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(firebase.createUser(user));\n\n          case 5:\n            createdUser = _context2.sent;\n            setUser(_objectSpread(_objectSpread({}, createdUser), {}, {\n              isLoggedIn: true\n            }));\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](2);\n            console.log(\"Error @SignUp\", error);\n\n          case 12:\n            _context2.prev = 12;\n            setLoading(false);\n            return _context2.finish(12);\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[2, 9, 12, 15]], Promise);\n  };\n\n  return _jsx(Container, {\n    children: _jsx(ScrollView, {\n      children: _jsxs(KeyboardAvoidingView, {\n        children: [_jsx(Main, {\n          children: _jsx(Text, {\n            title: true,\n            semi: true,\n            center: true,\n            color: \"#88d498\",\n            children: \"Sign up to get started:\"\n          })\n        }), _jsx(ProfilePhotoContainer, {\n          onPress: pickImage,\n          children: profilePhoto ? _jsx(ProfilePhoto, {\n            source: {\n              uri: profilePhoto\n            }\n          }) : _jsx(DefaultProfilePhoto, {\n            children: _jsx(AntDesign, {\n              name: \"plus\",\n              size: 24,\n              color: \"#88d498\"\n            })\n          })\n        }), _jsxs(Auth, {\n          children: [_jsxs(AuthContainer, {\n            children: [_jsx(AuthTitle, {\n              children: \"Name\"\n            }), _jsx(AuthField, {\n              autocorrect: false,\n              onChangeText: function onChangeText(username) {\n                return setUsername(username.trim());\n              },\n              value: username\n            })]\n          }), _jsxs(AuthContainer, {\n            children: [_jsx(AuthTitle, {\n              children: \"Email address\"\n            }), _jsx(AuthField, {\n              autoCapitalize: \"none\",\n              autocorrect: false,\n              keyboardType: \"email-address\",\n              onChangeText: function onChangeText(email) {\n                return setEmail(email.trim());\n              },\n              value: email\n            })]\n          }), _jsxs(AuthContainer, {\n            children: [_jsx(AuthTitle, {\n              children: \"password\"\n            }), _jsx(AuthField, {\n              autoCapitalize: \"none\",\n              autocorrect: false,\n              secureTextEntry: true,\n              onChangeText: function onChangeText(password) {\n                return setPassword(password.trim());\n              },\n              value: password\n            })]\n          })]\n        }), _jsx(SignUpContainer, {\n          onPress: signUp,\n          disable: loading,\n          children: loading ? _jsx(Loading, {}) : _jsx(Text, {\n            bold: true,\n            center: true,\n            color: \"#ffffff\",\n            children: \"Sign Up\"\n          })\n        }), _jsx(SignUp, {\n          onPress: function onPress() {\n            return navigation.push(\"LogInScreen\");\n          },\n          children: _jsxs(Text, {\n            small: true,\n            center: true,\n            children: [\"Already a user? \", _jsx(Text, {\n              bold: true,\n              color: \"#88d498\",\n              children: \"Sign In\"\n            })]\n          })\n        })]\n      })\n    })\n  });\n};\nvar Container = styled.KeyboardAvoidingView(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n    flex: 1; \\n\"])));\nvar Main = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  margin-top: 80px; \\n  margin-bottom: 50px; \\n\"])));\nvar Auth = styled.View(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  margin: 16px 32px 32px; \\n\"])));\nvar AuthContainer = styled.View(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 32px;\\n\"])));\nvar AuthTitle = styled(Text)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n  color: #8e93a1;\\n  font-size: 12px; \\n  text-transform: uppercase; \\n  font-weight: 300; \\n\"])));\nvar AuthField = styled.TextInput(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n  border-bottom-color: #8e93a1; \\n  border-bottom-width: 1px;\\n  height: 48px; \\n\"])));\nvar SignUpContainer = styled.TouchableOpacity(_templateObject7 || (_templateObject7 = _taggedTemplateLiteralLoose([\"\\n  margin: 0 32px; \\n  height: 48px; \\n  align-items: center; \\n  justify-content: center; \\n  background-color: #88d498;\\n  border-radius: 6px;\\n\"])));\nvar SignUp = styled.TouchableOpacity(_templateObject8 || (_templateObject8 = _taggedTemplateLiteralLoose([\"\\n  margin-top: 16px; \\n\"])));\nvar Loading = styled.ActivityIndicator.attrs(function (props) {\n  return {\n    color: \"#fffffff\",\n    size: \"small\"\n  };\n})(_templateObject9 || (_templateObject9 = _taggedTemplateLiteralLoose([\"\"])));\nvar ProfilePhotoContainer = styled.TouchableOpacity(_templateObject10 || (_templateObject10 = _taggedTemplateLiteralLoose([\"\\n  background-color: #e1e2e6;\\n  width: 80px; \\n  height: 80px; \\n  border-radius: 40px; \\n  align-self: center; \\n  margin-top: 16px;\\n  overflow: hidden; \\n\"])));\nvar DefaultProfilePhoto = styled.View(_templateObject11 || (_templateObject11 = _taggedTemplateLiteralLoose([\"\\n  align-items: center; \\n  justify-content: center; \\n  flex: 1; \\n\"])));\nvar ProfilePhoto = styled.Image(_templateObject12 || (_templateObject12 = _taggedTemplateLiteralLoose([\"\\n  width: 128px;\\n  height: 128px; \\n  border-radius: 64px; \\n\"])));","map":{"version":3,"sources":["/home/havard/Desktop/Achive/screens/AuthScreen/SignUpScreen.js"],"names":["React","useState","useContext","styled","Text","AntDesign","ImagePicker","MediaLibrary","FirebaseContext","UserContext","SignUpScreen","navigation","firebase","_","setUser","username","setUsername","email","setEmail","password","setPassword","loading","setLoading","profilePhoto","setProfilePhoto","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","uri","signUp","user","createUser","createdUser","isLoggedIn","console","log","error","trim","push","Container","KeyboardAvoidingView","Main","View","Auth","AuthContainer","AuthTitle","AuthField","TextInput","SignUpContainer","TouchableOpacity","SignUp","Loading","ActivityIndicator","attrs","props","color","size","ProfilePhotoContainer","DefaultProfilePhoto","ProfilePhoto","Image"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from \"react\";\nimport styled from \"styled-components/native\"; \nimport Text from \"../../components/Text.js\";\nimport {AntDesign} from \"@expo/vector-icons\"\nimport * as ImagePicker from \"expo-image-picker\"\nimport * as MediaLibrary from 'expo-media-library';\nimport { KeyboardAvoidingView, ScrollView} from \"react-native\";\nimport {FirebaseContext} from \"../../context/FirebaseContext\";\nimport {UserContext} from \"../../context/UserContext\";\n\nexport default SignUpScreen = ({navigation}) => {\n\n  const firebase = useContext(FirebaseContext); \n  const [_, setUser] = useContext(UserContext); \n\n  const [username, setUsername] = useState(); \n  const [email, setEmail] = useState(); \n  const [password, setPassword] = useState(); \n  const [loading, setLoading] = useState(false); \n  const [profilePhoto, setProfilePhoto] = useState(); \n\n  const pickImage = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n    if (!result.cancelled) {\n      setProfilePhoto(result.uri);\n    }\n  };\n\n  const signUp = async () => {\n\n    setLoading(true);\n    const user = {username, email, password, profilePhoto}\n\n    try{\n      const createdUser = await firebase.createUser(user)\n      setUser({...createdUser, isLoggedIn: true}); \n    }catch{\n      console.log(\"Error @SignUp\", error); \n    }finally{\n      setLoading(false); \n    }\n  };\n\n  return(\n    <Container>\n      <ScrollView>\n      <KeyboardAvoidingView>\n       <Main>\n         <Text title semi center color=\"#88d498\">\n              Sign up to get started:\n         </Text>\n        </Main>\n\n        <ProfilePhotoContainer onPress={pickImage}>\n          {profilePhoto ? ( \n            <ProfilePhoto source={{uri: profilePhoto}}/>\n          ) : (\n            <DefaultProfilePhoto>\n              <AntDesign name=\"plus\" size={24} color=\"#88d498\"/>\n            </DefaultProfilePhoto>\n          )}\n        </ProfilePhotoContainer>\n\n        <Auth>\n          <AuthContainer>\n            <AuthTitle>Name</AuthTitle>\n            <AuthField \n              autocorrect={false} \n              onChangeText={(username) => setUsername(username.trim())}\n              value={username}\n              />\n          </AuthContainer>\n\n          <AuthContainer>\n            <AuthTitle>Email address</AuthTitle>\n            <AuthField \n              autoCapitalize=\"none\" \n              autocorrect={false} \n              keyboardType=\"email-address\"\n              onChangeText={(email) => setEmail(email.trim())}\n              value={email}\n              />\n          </AuthContainer>\n          \n          <AuthContainer>\n            <AuthTitle>password</AuthTitle>\n            <AuthField \n              autoCapitalize=\"none\" \n              autocorrect={false} \n              secureTextEntry={true}\n              onChangeText={(password) => setPassword(password.trim())}\n              value={password}\n              />\n          </AuthContainer>\n        </Auth>\n        \n        <SignUpContainer onPress={signUp} disable={loading}>\n          {loading ? (<Loading/>) : (\n          <Text bold center color=\"#ffffff\">\n            Sign Up</Text>\n          )}\n        </SignUpContainer>\n\n        <SignUp onPress={() => navigation.push(\"LogInScreen\")}>\n          <Text small center> \n              Already a user? <Text bold color=\"#88d498\">Sign In</Text></Text>\n        </SignUp>\n        </KeyboardAvoidingView>\n      </ScrollView>\n     </Container>\n    );\n}\n\nconst Container = styled.KeyboardAvoidingView`\n    flex: 1; \n`;\n\nconst Main = styled.View`\n  margin-top: 80px; \n  margin-bottom: 50px; \n`;\n\nconst Auth = styled.View`\n  margin: 16px 32px 32px; \n`; \n\nconst AuthContainer = styled.View`\n  margin-bottom: 32px;\n`; \n\nconst AuthTitle = styled(Text)`\n  color: #8e93a1;\n  font-size: 12px; \n  text-transform: uppercase; \n  font-weight: 300; \n`; \n\nconst AuthField = styled.TextInput`\n  border-bottom-color: #8e93a1; \n  border-bottom-width: 1px;\n  height: 48px; \n`; \n\nconst SignUpContainer = styled.TouchableOpacity`\n  margin: 0 32px; \n  height: 48px; \n  align-items: center; \n  justify-content: center; \n  background-color: #88d498;\n  border-radius: 6px;\n`;\n\nconst SignUp = styled.TouchableOpacity`\n  margin-top: 16px; \n`; \n\nconst Loading = styled.ActivityIndicator.attrs(props => ({\n  color: \"#fffffff\",\n  size: \"small\", \n}))``; \n\nconst ProfilePhotoContainer = styled.TouchableOpacity`\n  background-color: #e1e2e6;\n  width: 80px; \n  height: 80px; \n  border-radius: 40px; \n  align-self: center; \n  margin-top: 16px;\n  overflow: hidden; \n`; \n\nconst DefaultProfilePhoto = styled.View`\n  align-items: center; \n  justify-content: center; \n  flex: 1; \n`; \n\nconst ProfilePhoto = styled.Image`\n  width: 128px;\n  height: 128px; \n  border-radius: 64px; \n`;"]},"metadata":{},"sourceType":"module"}