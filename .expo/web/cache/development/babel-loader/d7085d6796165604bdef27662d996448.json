{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useImperativeHandle, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nfunction _FAB(_, ref) {\n  var _$containerStyle, _$content;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isVisible = _useState2[0],\n      setIsVisible = _useState2[1];\n\n  useImperativeHandle(ref, function () {\n    return {\n      show: function show() {\n        return setIsVisible(true);\n      },\n      hide: function hide() {\n        return setIsVisible(false);\n      }\n    };\n  }, []);\n  if (!isVisible) return null;\n  return React.createElement(TouchableOpacity, {\n    style: (_$containerStyle = _.containerStyle) !== null && _$containerStyle !== void 0 ? _$containerStyle : styles.button,\n    onPress: _.onPress\n  }, (_$content = _.content) !== null && _$content !== void 0 ? _$content : React.createElement(Text, {\n    style: styles.label\n  }, \"DOWN\"));\n}\n\nvar styles = StyleSheet.create({\n  button: {\n    width: 50,\n    zIndex: 1,\n    height: 50,\n    backgroundColor: 'lightblue',\n    padding: 10,\n    borderRadius: 50,\n    position: 'absolute',\n    bottom: 50,\n    right: 20\n  },\n  label: {\n    textAlign: 'center',\n    fontSize: 10\n  }\n});\nexport var FAB = React.memo(React.forwardRef(_FAB));","map":{"version":3,"sources":["FAB.tsx"],"names":["useState","useImperativeHandle","show","setIsVisible","hide","_","styles","onPress","label","button","width","zIndex","height","backgroundColor","padding","borderRadius","position","bottom","right","textAlign","fontSize","FAB","React"],"mappings":";AACA,OAAA,KAAA,IAAA,mBAAA,EAAA,QAAA,QAAA,OAAA;;;;;AASA,SAAA,IAAA,CAAA,CAAA,EAAA,GAAA,EAA0D;AAAA,MAAA,gBAAA,EAAA,SAAA;;AACxD,kBAAkCA,QAAQ,CAA1C,KAA0C,CAA1C;AAAA;AAAA,MAAM,SAAN;AAAA,MAAM,YAAN;;AAEAC,EAAAA,mBAAmB,CAAA,GAAA,EAEjB;AAAA,WAAO;AACLC,MAAAA,IAAI,EAAE;AAAA,eAAMC,YAAY,CADnB,IACmB,CAAlB;AAAA,OADD;AAELC,MAAAA,IAAI,EAAE;AAAA,eAAMD,YAAY,CAAA,KAAA,CAAlB;AAAA;AAFD,KAAP;AAAA,GAFiB,EAAnBF,EAAmB,CAAnBA;AASA,MAAI,CAAJ,SAAA,EAAgB,OAAA,IAAA;AAEhB,SACE,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA;AACE,IAAA,KAAK,EAAA,CAAA,gBAAA,GAAEI,CAAC,CAAH,cAAA,MAAA,IAAA,IAAA,gBAAA,KAAA,KAAA,CAAA,GAAA,gBAAA,GAAsBC,MAAM,CADnC,MAAA;AAEE,IAAA,OAAO,EAAED,CAAC,CAACE;AAFb,GAAA,EAAA,CAAA,SAAA,GAIGF,CAAC,CAJJ,OAAA,MAAA,IAAA,IAAA,SAAA,KAAA,KAAA,CAAA,GAAA,SAAA,GAIgB,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACE;AAApB,GAAA,EALlB,MAKkB,CAJhB,CADF;AAQD;;AAED,IAAMF,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;AAC/BG,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EADC,EAAA;AAENC,IAAAA,MAAM,EAFA,CAAA;AAGNC,IAAAA,MAAM,EAHA,EAAA;AAINC,IAAAA,eAAe,EAJT,WAAA;AAKNC,IAAAA,OAAO,EALD,EAAA;AAMNC,IAAAA,YAAY,EANN,EAAA;AAONC,IAAAA,QAAQ,EAPF,UAAA;AAQNC,IAAAA,MAAM,EARA,EAAA;AASNC,IAAAA,KAAK,EAAE;AATD,GADuB;AAY/BV,EAAAA,KAAK,EAAE;AACLW,IAAAA,SAAS,EADJ,QAAA;AAELC,IAAAA,QAAQ,EAAE;AAFL;AAZwB,CAAlB,CAAf;AAkBA,OAAO,IAAMC,GAAG,GAAGC,KAAK,CAALA,IAAAA,CAAWA,KAAK,CAALA,UAAAA,CAAvB,IAAuBA,CAAXA,CAAZ","sourcesContent":["import type { Ref } from 'react';\nimport React, { useImperativeHandle, useState } from 'react';\nimport { StyleSheet, Text, TouchableOpacity } from 'react-native';\nimport type { IScrollToBottomProps } from 'src/types/Chatty.types';\n\nexport interface IFabRef {\n  show: () => void;\n  hide: () => void;\n}\n\nfunction _FAB(_: IScrollToBottomProps, ref: Ref<IFabRef>) {\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      show: () => setIsVisible(true),\n      hide: () => setIsVisible(false),\n    }),\n    []\n  );\n\n  if (!isVisible) return null;\n\n  return (\n    <TouchableOpacity\n      style={_.containerStyle ?? styles.button}\n      onPress={_.onPress}\n    >\n      {_.content ?? <Text style={styles.label}>DOWN</Text>}\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    width: 50,\n    zIndex: 1,\n    height: 50,\n    backgroundColor: 'lightblue',\n    padding: 10,\n    borderRadius: 50,\n    position: 'absolute',\n    bottom: 50,\n    right: 20,\n  },\n  label: {\n    textAlign: 'center',\n    fontSize: 10,\n  },\n});\n\nexport const FAB = React.memo(React.forwardRef(_FAB));\n"]},"metadata":{},"sourceType":"module"}