{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport dayjs from 'dayjs';\nimport React, { useCallback, useContext, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated, { FadeInDown, FadeOutUp } from 'react-native-reanimated';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { DataProvider, LayoutProvider, RecyclerListView } from 'recyclerlistview';\nimport { ChatBubble } from \"./ChatBubble\";\nimport { PropsContext } from \"./Chatty\";\nimport { FAB } from \"./components/FAB\";\nimport { LoadEarlier } from \"./components/LoadEarlier\";\nimport { RenderDate } from \"./components/RenderDate\";\nimport { TypingStatus } from \"./components/TypingStatus\";\nimport { useHaptic } from \"./hooks/useHaptic\";\nimport { usePrevious } from \"./hooks/usePrevious\";\nimport { SwipeableBubble } from \"./SwipeableBubble\";\nimport { HapticType, LayoutType } from \"./types/Chatty.types\";\nimport { ChatBubbleEmitter } from \"./utils/eventEmitter\";\nimport { hapticEngine } from \"./utils/hapticEngine\";\nimport { wait } from \"./utils/helpers\";\nvar ScrollViewWithHeader = React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var propsContext = useContext(PropsContext);\n  return React.createElement(ScrollView, _extends({\n    ref: ref\n  }, props), (propsContext === null || propsContext === void 0 ? void 0 : propsContext.loadEarlierProps) && propsContext.loadEarlierProps.show && React.createElement(LoadEarlier, propsContext.loadEarlierProps), children);\n});\nexport var List = React.forwardRef(function (props, ref) {\n  var propsContext = useContext(PropsContext);\n  var recyclerlistviewRef = useRef();\n  var windowDimensions = useWindowDimensions();\n  var safeArea = useSafeAreaInsets();\n\n  var _useHaptic = useHaptic(),\n      trigger = _useHaptic.trigger;\n\n  var fabRef = useRef(null);\n  var typingStatusRef = useRef(null);\n  var listHeight = useMemo(function () {\n    return windowDimensions.height - 150 - safeArea.bottom - safeArea.top;\n  }, [windowDimensions, safeArea]);\n  var rowRendererProp = props.rowRenderer,\n      data = props.data;\n  var dataProvider = useMemo(function () {\n    return new DataProvider(function (r1, r2) {\n      if (r1.id !== r2.id) {\n        return true;\n      }\n\n      return false;\n    });\n  }, []);\n\n  var _useState = useState(dataProvider),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var previousMessages = usePrevious(messages);\n  useEffect(function () {\n    setMessages(dataProvider.cloneWithRows(data));\n  }, [data, dataProvider]);\n  useEffect(function () {\n    ChatBubbleEmitter.addListener('replyBubblePressed', function (messageId) {\n      var index = messages.getAllData().findIndex(function (m) {\n        return m.id === messageId;\n      });\n\n      if (index !== -1) {\n        var _recyclerlistviewRef$;\n\n        (_recyclerlistviewRef$ = recyclerlistviewRef.current) === null || _recyclerlistviewRef$ === void 0 ? void 0 : _recyclerlistviewRef$.scrollToIndex(index, true);\n      }\n    });\n    return function () {\n      ChatBubbleEmitter.removeAllListeners();\n    };\n  }, [messages]);\n  useImperativeHandle(ref, function () {\n    return {\n      appendMessage: function appendMessage(message, firstIndex) {\n        if (firstIndex) {\n          if (Array.isArray(message)) {\n            setMessages(dataProvider.cloneWithRows([].concat(_toConsumableArray(message), _toConsumableArray(messages.getAllData()))));\n          } else {\n            setMessages(dataProvider.cloneWithRows([message].concat(_toConsumableArray(messages.getAllData()))));\n          }\n        } else {\n          if (Array.isArray(message)) {\n            setMessages(dataProvider.cloneWithRows([].concat(_toConsumableArray(messages.getAllData()), _toConsumableArray(message))));\n          } else {\n            setMessages(dataProvider.cloneWithRows([].concat(_toConsumableArray(messages.getAllData()), [message])));\n          }\n        }\n\n        if (!Array.isArray(message)) {\n          if (!message.me && propsContext !== null && propsContext !== void 0 && propsContext.enableHapticFeedback) {\n            if (Platform.OS !== 'web' && hapticEngine) trigger(HapticType.Heavy);\n          }\n        }\n      },\n      scrollToEnd: function scrollToEnd(animated) {\n        var _recyclerlistviewRef$2;\n\n        (_recyclerlistviewRef$2 = recyclerlistviewRef.current) === null || _recyclerlistviewRef$2 === void 0 ? void 0 : _recyclerlistviewRef$2.scrollToEnd(animated);\n      },\n      setIsTyping: function setIsTyping(typing) {\n        var _typingStatusRef$curr, _recyclerlistviewRef$3;\n\n        (_typingStatusRef$curr = typingStatusRef.current) === null || _typingStatusRef$curr === void 0 ? void 0 : _typingStatusRef$curr.setIsTyping(typing !== null && typing !== void 0 ? typing : false);\n        (_recyclerlistviewRef$3 = recyclerlistviewRef.current) === null || _recyclerlistviewRef$3 === void 0 ? void 0 : _recyclerlistviewRef$3.scrollToEnd(true);\n      },\n      removeMessage: function removeMessage(id) {\n        setMessages(dataProvider.cloneWithRows(messages.getAllData().filter(function (message) {\n          return message.id !== id;\n        })));\n      }\n    };\n  }, [dataProvider, messages, propsContext.enableHapticFeedback, trigger]);\n  useEffect(function () {\n    var _, _2;\n\n    if (previousMessages && ((_ = previousMessages.getAllData()[0]) === null || _ === void 0 ? void 0 : _.id) === ((_2 = messages.getAllData()[0]) === null || _2 === void 0 ? void 0 : _2.id)) {\n      wait(100).then(function () {\n        var _recyclerlistviewRef$4;\n\n        (_recyclerlistviewRef$4 = recyclerlistviewRef.current) === null || _recyclerlistviewRef$4 === void 0 ? void 0 : _recyclerlistviewRef$4.scrollToEnd(true);\n      });\n    }\n  }, [ref, messages, previousMessages]);\n  var layoutProvider = useCallback(function () {\n    return new LayoutProvider(function (index) {\n      var currentMessage = messages.getAllData()[index];\n      var prevMessage = messages.getAllData()[index - 1];\n\n      if (currentMessage.text.length >= 600) {\n        return LayoutType.ExtremeLong;\n      }\n\n      if (currentMessage.text.length >= 400) {\n        return LayoutType.Long3x;\n      }\n\n      if (currentMessage.text.length >= 200) {\n        return LayoutType.Long2x;\n      }\n\n      if (currentMessage.text.length >= 100) {\n        return LayoutType.Long;\n      }\n\n      if (currentMessage !== null && currentMessage !== void 0 && currentMessage.media) {\n        if (currentMessage.media.length > 2) {\n          return LayoutType.Media2x;\n        }\n\n        return LayoutType.Media;\n      }\n\n      if (currentMessage.repliedTo) {\n        return LayoutType.Replied;\n      }\n\n      var isFirstMessage = index === 0;\n\n      if (!isFirstMessage && dayjs(currentMessage.createdAt).date() !== dayjs(prevMessage.createdAt).date() || isFirstMessage) {\n        return LayoutType.Dated;\n      }\n\n      return LayoutType.Normal;\n    }, function (type, dim) {\n      dim.width = windowDimensions.width;\n\n      switch (type) {\n        case LayoutType.Normal:\n          dim.height = 85;\n          break;\n\n        case LayoutType.Replied:\n          dim.height = 190;\n          break;\n\n        case LayoutType.Dated:\n          dim.height = 110;\n          break;\n\n        case LayoutType.Long:\n          dim.height = 130;\n          break;\n\n        case LayoutType.Long2x:\n          dim.height = 170;\n          break;\n\n        case LayoutType.Long3x:\n          dim.height = 350;\n          break;\n\n        case LayoutType.ExtremeLong:\n          dim.height = 550;\n          break;\n\n        case LayoutType.Media:\n          dim.height = 180;\n          break;\n\n        case LayoutType.Media2x:\n          dim.height = 300;\n          break;\n\n        default:\n          dim.height = 85;\n          break;\n      }\n    });\n  }, [messages, windowDimensions.width]);\n  var renderBubble = useCallback(function (data, withDate) {\n    if (rowRendererProp) {\n      return React.createElement(View, null, withDate && React.createElement(RenderDate, _extends({\n        date: data.createdAt\n      }, propsContext.renderDateProps)), React.createElement(Animated.View, {\n        entering: FadeInDown,\n        exiting: FadeOutUp\n      }, React.createElement(SwipeableBubble, {\n        message: data,\n        onReply: propsContext.onReply\n      }, rowRendererProp(data))));\n    }\n\n    return React.createElement(View, {\n      style: {\n        width: '100%'\n      }\n    }, withDate && React.createElement(RenderDate, _extends({\n      date: data.createdAt\n    }, propsContext.renderDateProps)), React.createElement(Animated.View, {\n      entering: FadeInDown,\n      exiting: FadeOutUp\n    }, propsContext.onReply ? React.createElement(React.Fragment, null, React.createElement(SwipeableBubble, {\n      message: data,\n      onReply: propsContext.onReply\n    })) : React.createElement(ChatBubble, {\n      message: data\n    })));\n  }, [propsContext.onReply, propsContext.renderDateProps, rowRendererProp]);\n  var rowRenderer = useCallback(function (type, data) {\n    if (type === LayoutType.Dated) {\n      return renderBubble(data, true);\n    }\n\n    return renderBubble(data);\n  }, [renderBubble]);\n  var onScroll = useCallback(function (e, offsetX, offsetY) {\n    if (e.nativeEvent.contentOffset.y <= 0) {\n      var _fabRef$current;\n\n      (_fabRef$current = fabRef.current) === null || _fabRef$current === void 0 ? void 0 : _fabRef$current.show();\n    } else {\n      var _fabRef$current2;\n\n      (_fabRef$current2 = fabRef.current) === null || _fabRef$current2 === void 0 ? void 0 : _fabRef$current2.hide();\n    }\n\n    if (props.onScroll) {\n      props.onScroll(e, offsetX, offsetY);\n    }\n  }, [props]);\n  var scrollToBottom = useCallback(function () {\n    var _recyclerlistviewRef$5;\n\n    (_recyclerlistviewRef$5 = recyclerlistviewRef.current) === null || _recyclerlistviewRef$5 === void 0 ? void 0 : _recyclerlistviewRef$5.scrollToEnd(true);\n  }, []);\n  return React.createElement(View, {\n    style: {\n      minWidth: 1,\n      minHeight: 1,\n      maxHeight: listHeight\n    }\n  }, propsContext.showScrollToBottomButton && React.createElement(FAB, _extends({\n    ref: fabRef,\n    onPress: scrollToBottom\n  }, propsContext.scrollToBottomProps)), React.createElement(RecyclerListView, {\n    layoutProvider: layoutProvider(),\n    externalScrollView: ScrollViewWithHeader,\n    dataProvider: messages,\n    style: [{\n      height: propsContext.replyingTo ? '90%' : '100%'\n    }, props.containerStyle],\n    ref: recyclerlistviewRef,\n    scrollViewProps: {\n      keyboardShouldPersistTaps: 'never'\n    },\n    onScroll: onScroll,\n    optimizeForInsertDeleteAnimations: true,\n    forceNonDeterministicRendering: true,\n    canChangeSize: true,\n    rowRenderer: rowRenderer,\n    renderFooter: function renderFooter() {\n      return React.createElement(TypingStatus, {\n        ref: typingStatusRef\n      });\n    },\n    onEndReached: props === null || props === void 0 ? void 0 : props.onEndReached,\n    onEndReachedThreshold: props === null || props === void 0 ? void 0 : props.onEndReachedThreshold\n  }));\n});","map":{"version":3,"sources":["List.tsx"],"names":["ScrollViewWithHeader","props","propsContext","useContext","ref","List","recyclerlistviewRef","useRef","windowDimensions","useWindowDimensions","safeArea","useSafeAreaInsets","trigger","useHaptic","fabRef","typingStatusRef","listHeight","useMemo","rowRenderer","data","dataProvider","r1","r2","useState","previousMessages","usePrevious","useEffect","setMessages","ChatBubbleEmitter","messageId","index","messages","m","useImperativeHandle","appendMessage","Array","message","Platform","HapticType","scrollToEnd","animated","setIsTyping","typing","removeMessage","id","wait","layoutProvider","useCallback","currentMessage","prevMessage","LayoutType","isFirstMessage","dayjs","dim","renderBubble","withDate","createdAt","FadeOutUp","onReply","rowRendererProp","width","type","onScroll","e","scrollToBottom","minWidth","minHeight","maxHeight","height","keyboardShouldPersistTaps","onEndReachedThreshold"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AAEA,OAAA,KAAA,IAAA,WAAA,EAAA,UAAA,EAAA,SAAA,EAAA,mBAAA,EAAA,OAAA,EAAA,MAAA,EAAA,QAAA,QAAA,OAAA;;;;;AAUA,OAAA,QAAA,IAAA,UAAA,EAAA,SAAA,QAAA,yBAAA;AACA,SAAA,iBAAA,QAAA,gCAAA;AACA,SAAA,YAAA,EAAA,cAAA,EAAA,gBAAA,QAAA,kBAAA;AAMA,SAAA,UAAA;AACA,SAAA,YAAA;AACA,SAAA,GAAA;AACA,SAAA,WAAA;AACA,SAAA,UAAA;AACA,SAAA,YAAA;AACA,SAAA,SAAA;AACA,SAAA,WAAA;AACA,SAAA,eAAA;AACA,SAAA,UAAA,EAAA,UAAA;AAQA,SAAA,iBAAA;AACA,SAAA,YAAA;AACA,SAAA,IAAA;AAEA,IAAMA,oBAAoB,GAAG,KAAK,CAAL,UAAA,CAC3B,UAAA,IAAA,EAAA,GAAA,EAAkD;AAAjD,MAAA,QAAA,GAAiD,IAAjD,CAAA,QAAA;AAAA,MAAeC,KAAf,4BAAiD,IAAjD;;AACC,MAAMC,YAAY,GAAGC,UAAU,CAA/B,YAA+B,CAA/B;AAEA,SACE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,QAAA,CAAA;AAAY,IAAA,GAAG,EAAEC;AAAjB,GAAA,EAAA,KAAA,CAAA,EACG,CAAA,YAAY,KAAZ,IAAA,IAAA,YAAY,KAAA,KAAZ,CAAA,GAAA,KAAA,CAAA,GAAA,YAAY,CAAZ,gBAAA,KACCF,YAAY,CAAZA,gBAAAA,CADD,IAAA,IAEG,KAAA,CAAA,aAAA,CAAA,WAAA,EAAiBA,YAAY,CAHnC,gBAGM,CAHN,EADF,QACE,CADF;AAJJ,CAA6B,CAA7B;AAgBA,OAAO,IAAMG,IAAI,GAAG,KAAK,CAAL,UAAA,CAClB,UAAA,KAAA,EAAA,GAAA,EAAmD;AACjD,MAAMH,YAAY,GAAGC,UAAU,CAA/B,YAA+B,CAA/B;AACA,MAAMG,mBAAmB,GAAGC,MAA5B,EAAA;AACA,MAAMC,gBAAgB,GAAGC,mBAAzB,EAAA;AACA,MAAMC,QAAQ,GAAGC,iBAAjB,EAAA;;AACA,mBAAoBE,SAApB,EAAA;AAAA,MAAQD,OAAR,cAAQA,OAAR;;AACA,MAAME,MAAM,GAAGP,MAAM,CAArB,IAAqB,CAArB;AACA,MAAMQ,eAAe,GAAGR,MAAM,CAA9B,IAA8B,CAA9B;AACA,MAAMS,UAAU,GAAGC,OAAO,CACxB;AAAA,WAAMT,gBAAgB,CAAhBA,MAAAA,GAAAA,GAAAA,GAAgCE,QAAQ,CAAxCF,MAAAA,GAAkDE,QAAQ,CADxC,GACxB;AAAA,GADwB,EAExB,CAAA,gBAAA,EAFF,QAEE,CAFwB,CAA1B;AAIA,MAAM,eAAN,GAAA,KAAA,CAAQQ,WAAR;AAAA,MAAsCC,IAAtC,GAAA,KAAA,CAAsCA,IAAtC;AAEA,MAAMC,YAAY,GAAGH,OAAO,CAAe,YAAM;AAC/C,WAAO,IAAA,YAAA,CAAiB,UAAA,EAAA,EAAA,EAAA,EAAgC;AACtD,UAAII,EAAE,CAAFA,EAAAA,KAAUC,EAAE,CAAhB,EAAA,EAAqB;AACnB,eAAA,IAAA;AACD;;AAED,aAAA,KAAA;AALF,KAAO,CAAP;AAD0B,GAAA,EAA5B,EAA4B,CAA5B;;AAUA,kBAAgCC,QAAQ,CAAxC,YAAwC,CAAxC;AAAA;AAAA,MAAM,QAAN;AAAA,MAAM,WAAN;;AACA,MAAMC,gBAAgB,GAAGC,WAAW,CAApC,QAAoC,CAApC;AAGAC,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,WAAW,CAACP,YAAY,CAAZA,aAAAA,CAAZO,IAAYP,CAAD,CAAXO;AADO,GAAA,EAEN,CAAA,IAAA,EAFHD,YAEG,CAFM,CAATA;AAMAA,EAAAA,SAAS,CAAC,YAAM;AAEdE,IAAAA,iBAAiB,CAAjBA,WAAAA,CAAAA,oBAAAA,EAAqDC,UAAAA,SAAD,EAAe;AACjE,UAAMC,KAAK,GAAGC,QAAQ,CAARA,UAAAA,GAAAA,SAAAA,CAEAC,UAAAA,CAAD;AAAA,eAAOA,CAAC,CAADA,EAAAA,KAFpB,SAEa;AAAA,OAFCD,CAAd;;AAIA,UAAID,KAAK,KAAK,CAAd,CAAA,EAAkB;AAAA,YAAA,qBAAA;;AAChB,SAAA,qBAAA,GAAA,mBAAmB,CAAnB,OAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,CAAA;AACD;AAPHF,KAAAA;AAUA,WAAO,YAAM;AACXA,MAAAA,iBAAiB,CAAjBA,kBAAAA;AADF,KAAA;AAZO,GAAA,EAeN,CAfHF,QAeG,CAfM,CAATA;AAmBAO,EAAAA,mBAAmB,CAAA,GAAA,EAEjB;AAAA,WAAO;AACLC,MAAAA,aAAa,EAAE,uBAAA,OAAA,EAAA,UAAA,EAGV;AACH,YAAA,UAAA,EAAgB;AACd,cAAIC,KAAK,CAALA,OAAAA,CAAJ,OAAIA,CAAJ,EAA4B;AAC1BR,YAAAA,WAAW,CACTP,YAAY,CAAZA,aAAAA,8BAA2B,OAA3BA,sBAEKW,QAAQ,CAHfJ,UAGOI,EAFLX,GADS,CAAXO;AADF,WAAA,MAOO;AACLA,YAAAA,WAAW,CACTP,YAAY,CAAZA,aAAAA,EAA2B,OAA3BA,4BAAwCW,QAAQ,CADlDJ,UAC0CI,EAAxCX,GADS,CAAXO;AAGD;AAZH,SAAA,MAaO;AACL,cAAIQ,KAAK,CAALA,OAAAA,CAAJ,OAAIA,CAAJ,EAA4B;AAC1BR,YAAAA,WAAW,CACTP,YAAY,CAAZA,aAAAA,8BACKW,QAAQ,CADc,UACtBA,EADLX,sBADFO,OACEP,GADS,CAAXO;AADF,WAAA,MAOO;AACLA,YAAAA,WAAW,CACTP,YAAY,CAAZA,aAAAA,8BAA+BW,QAAQ,CAAZ,UAAIA,EAA/BX,IADFO,OACEP,GADS,CAAXO;AAGD;AACF;;AAED,YAAI,CAACQ,KAAK,CAALA,OAAAA,CAAL,OAAKA,CAAL,EAA6B;AAC3B,cAAI,CAACC,OAAO,CAAR,EAAA,IAAelC,YAAf,KAAA,IAAA,IAAeA,YAAf,KAAA,KAAA,CAAA,IAAeA,YAAY,CAA/B,oBAAA,EAAuD;AACrD,gBAAImC,QAAQ,CAARA,EAAAA,KAAAA,KAAAA,IAAJ,YAAA,EACEzB,OAAO,CAAC0B,UAAU,CAAlB1B,KAAO,CAAPA;AACH;AACF;AAtCE,OAAA;AAyCL2B,MAAAA,WAAW,EAAGC,qBAAAA,QAAD,EAAwB;AAAA,YAAA,sBAAA;;AACnC,SAAA,sBAAA,GAAA,mBAAmB,CAAnB,OAAA,MAAA,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,sBAAA,CAAA,WAAA,CAAA,QAAA,CAAA;AA1CG,OAAA;AA6CLC,MAAAA,WAAW,EAAGC,qBAAAA,MAAD,EAAsB;AAAA,YAAA,qBAAA,EAAA,sBAAA;;AACjC,SAAA,qBAAA,GAAA,eAAe,CAAf,OAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAA,WAAA,CAAqCA,MAArC,KAAA,IAAqCA,IAAAA,MAArC,KAAA,KAAA,CAAqCA,GAArC,MAAqCA,GAArC,KAAA,CAAA;AACA,SAAA,sBAAA,GAAA,mBAAmB,CAAnB,OAAA,MAAA,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,sBAAA,CAAA,WAAA,CAAA,IAAA,CAAA;AA/CG,OAAA;AAkDLC,MAAAA,aAAa,EAAGC,uBAAAA,EAAD,EAAgB;AAC7BjB,QAAAA,WAAW,CACTP,YAAY,CAAZA,aAAAA,CACEW,QAAQ,CAARA,UAAAA,GAAAA,MAAAA,CAA8BK,UAAAA,OAAD;AAAA,iBAAaA,OAAO,CAAPA,EAAAA,KAF9CT,EAEiC;AAAA,SAA7BI,CADFX,CADS,CAAXO;AAKD;AAxDI,KAAP;AAAA,GAFiB,EA4DjB,CAAA,YAAA,EAAA,QAAA,EAAyBzB,YAAY,CAArC,oBAAA,EA5DF+B,OA4DE,CA5DiB,CAAnBA;AAiEAP,EAAAA,SAAS,CAAC,YAAM;AAAA,QAAA,CAAA,EAAA,EAAA;;AACd,QACEF,gBAAgB,IAChB,CAAA,CAAA,CAAA,GAAA,gBAAgB,CAAhB,UAAA,GAAA,CAAA,CAAA,MAAA,IAAA,IAAA,CAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,CAAA,EAAA,OAAA,CAAA,EAAA,GAA0CO,QAAQ,CAARA,UAAAA,GAA1C,CAA0CA,CAA1C,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAA0CA,EAAAA,CAF5C,EAEE,CAFF,EAGE;AACAc,MAAAA,IAAI,CAAJA,GAAI,CAAJA,CAAAA,IAAAA,CAAe,YAAM;AAAA,YAAA,sBAAA;;AACnB,SAAA,sBAAA,GAAA,mBAAmB,CAAnB,OAAA,MAAA,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,sBAAA,CAAA,WAAA,CAAA,IAAA,CAAA;AADFA,OAAAA;AAGD;AARM,GAAA,EASN,CAAA,GAAA,EAAA,QAAA,EATHnB,gBASG,CATM,CAATA;AAWA,MAAMoB,cAAc,GAAGC,WAAW,CAAC,YAAM;AACvC,WAAO,IAAA,cAAA,CACJjB,UAAAA,KAAD,EAAW;AACT,UAAMkB,cAAwB,GAAGjB,QAAQ,CAARA,UAAAA,GAAjC,KAAiCA,CAAjC;AACA,UAAMkB,WAAqB,GAAGlB,QAAQ,CAARA,UAAAA,GAAsBD,KAAK,GAAzD,CAA8BC,CAA9B;;AAEA,UAAIiB,cAAc,CAAdA,IAAAA,CAAAA,MAAAA,IAAJ,GAAA,EAAuC;AACrC,eAAOE,UAAU,CAAjB,WAAA;AACD;;AAED,UAAIF,cAAc,CAAdA,IAAAA,CAAAA,MAAAA,IAAJ,GAAA,EAAuC;AACrC,eAAOE,UAAU,CAAjB,MAAA;AACD;;AAED,UAAIF,cAAc,CAAdA,IAAAA,CAAAA,MAAAA,IAAJ,GAAA,EAAuC;AACrC,eAAOE,UAAU,CAAjB,MAAA;AACD;;AAED,UAAIF,cAAc,CAAdA,IAAAA,CAAAA,MAAAA,IAAJ,GAAA,EAAuC;AACrC,eAAOE,UAAU,CAAjB,IAAA;AACD;;AAED,UAAIF,cAAJ,KAAA,IAAIA,IAAAA,cAAJ,KAAA,KAAA,CAAIA,IAAAA,cAAc,CAAlB,KAAA,EAA2B;AACzB,YAAIA,cAAc,CAAdA,KAAAA,CAAAA,MAAAA,GAAJ,CAAA,EAAqC;AACnC,iBAAOE,UAAU,CAAjB,OAAA;AACD;;AAED,eAAOA,UAAU,CAAjB,KAAA;AACD;;AAED,UAAIF,cAAc,CAAlB,SAAA,EAA8B;AAC5B,eAAOE,UAAU,CAAjB,OAAA;AACD;;AAED,UAAMC,cAAc,GAAGrB,KAAK,KAA5B,CAAA;;AAEA,UACG,CAAA,cAAA,IACCsB,KAAK,CAACJ,cAAc,CAApBI,SAAK,CAALA,CAAAA,IAAAA,OACEA,KAAK,CAACH,WAAW,CAAjBG,SAAK,CAALA,CAFJ,IAEIA,EAFH,IADH,cAAA,EAKE;AACA,eAAOF,UAAU,CAAjB,KAAA;AACD;;AAED,aAAOA,UAAU,CAAjB,MAAA;AA5CG,KAAA,EA8CL,UAAA,IAAA,EAAA,GAAA,EAAe;AACbG,MAAAA,GAAG,CAAHA,KAAAA,GAAY7C,gBAAgB,CAA5B6C,KAAAA;;AAEA,cAAA,IAAA;AACE,aAAKH,UAAU,CAAf,MAAA;AACEG,UAAAA,GAAG,CAAHA,MAAAA,GAAAA,EAAAA;AACA;;AACF,aAAKH,UAAU,CAAf,OAAA;AACEG,UAAAA,GAAG,CAAHA,MAAAA,GAAAA,GAAAA;AACA;;AACF,aAAKH,UAAU,CAAf,KAAA;AACEG,UAAAA,GAAG,CAAHA,MAAAA,GAAAA,GAAAA;AACA;;AACF,aAAKH,UAAU,CAAf,IAAA;AACEG,UAAAA,GAAG,CAAHA,MAAAA,GAAAA,GAAAA;AACA;;AACF,aAAKH,UAAU,CAAf,MAAA;AACEG,UAAAA,GAAG,CAAHA,MAAAA,GAAAA,GAAAA;AACA;;AACF,aAAKH,UAAU,CAAf,MAAA;AACEG,UAAAA,GAAG,CAAHA,MAAAA,GAAAA,GAAAA;AACA;;AACF,aAAKH,UAAU,CAAf,WAAA;AACEG,UAAAA,GAAG,CAAHA,MAAAA,GAAAA,GAAAA;AACA;;AACF,aAAKH,UAAU,CAAf,KAAA;AACEG,UAAAA,GAAG,CAAHA,MAAAA,GAAAA,GAAAA;AACA;;AACF,aAAKH,UAAU,CAAf,OAAA;AACEG,UAAAA,GAAG,CAAHA,MAAAA,GAAAA,GAAAA;AACA;;AAEF;AACEA,UAAAA,GAAG,CAAHA,MAAAA,GAAAA,EAAAA;AACA;AA/BJ;AAjDJ,KAAO,CAAP;AADgC,GAAA,EAqF/B,CAAA,QAAA,EAAW7C,gBAAgB,CArF9B,KAqFG,CArF+B,CAAlC;AAuFA,MAAM8C,YAAY,GAAGP,WAAW,CAC9B,UAAA,IAAA,EAAA,QAAA,EAAwC;AACtC,QAAA,eAAA,EAAqB;AACnB,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EACGQ,QAAQ,IACP,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,QAAA,CAAA;AACE,QAAA,IAAI,EAAEpC,IAAI,CAACqC;AADb,OAAA,EAEMtD,YAAY,CAJtB,eAEI,CAAA,CAFJ,EAQE,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,EAAA;AAAe,QAAA,QAAQ,EAAvB,UAAA;AAAqC,QAAA,OAAO,EAAEuD;AAA9C,OAAA,EACE,KAAA,CAAA,aAAA,CAAA,eAAA,EAAA;AAAiB,QAAA,OAAO,EAAxB,IAAA;AAAgC,QAAA,OAAO,EAAEvD,YAAY,CAACwD;AAAtD,OAAA,EACGC,eAAe,CAXxB,IAWwB,CADlB,CADF,CARF,CADF;AAgBD;;AAED,WACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAAb,KAAA,EACGL,QAAQ,IACP,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,QAAA,CAAA;AACE,MAAA,IAAI,EAAEpC,IAAI,CAACqC;AADb,KAAA,EAEMtD,YAAY,CAJtB,eAEI,CAAA,CAFJ,EAOE,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,EAAA;AAAe,MAAA,QAAQ,EAAvB,UAAA;AAAqC,MAAA,OAAO,EAAEuD;AAA9C,KAAA,EACGvD,YAAY,CAAZA,OAAAA,GACC,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,eAAA,EAAA;AACE,MAAA,OAAO,EADT,IAAA;AAEE,MAAA,OAAO,EAAEA,YAAY,CAACwD;AAFxB,KAAA,CADF,CADDxD,GAQC,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AAAY,MAAA,OAAO,EAAEiB;AAArB,KAAA,CATJ,CAPF,CADF;AArB4B,GAAA,EA4C9B,CAACjB,YAAY,CAAb,OAAA,EAAuBA,YAAY,CAAnC,eAAA,EA5CF,eA4CE,CA5C8B,CAAhC;AA+CA,MAAMgB,WAAW,GAAG6B,WAAW,CAC7B,UAAA,IAAA,EAAA,IAAA,EAA0B;AACxB,QAAIc,IAAI,KAAKX,UAAU,CAAvB,KAAA,EAA+B;AAC7B,aAAOI,YAAY,CAAA,IAAA,EAAnB,IAAmB,CAAnB;AACD;;AAED,WAAOA,YAAY,CAAnB,IAAmB,CAAnB;AAN2B,GAAA,EAQ7B,CARF,YAQE,CAR6B,CAA/B;AAWA,MAAMQ,QAAQ,GAAGf,WAAW,CAC1B,UAAA,CAAA,EAAA,OAAA,EAAA,OAAA,EAAsD;AACpD,QAAIgB,CAAC,CAADA,WAAAA,CAAAA,aAAAA,CAAAA,CAAAA,IAAJ,CAAA,EAAwC;AAAA,UAAA,eAAA;;AACtC,OAAA,eAAA,GAAA,MAAM,CAAN,OAAA,MAAA,IAAA,IAAA,eAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,eAAA,CAAA,IAAA,EAAA;AADF,KAAA,MAEO;AAAA,UAAA,gBAAA;;AACL,OAAA,gBAAA,GAAA,MAAM,CAAN,OAAA,MAAA,IAAA,IAAA,gBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,gBAAA,CAAA,IAAA,EAAA;AACD;;AAED,QAAI9D,KAAK,CAAT,QAAA,EAAoB;AAClBA,MAAAA,KAAK,CAALA,QAAAA,CAAAA,CAAAA,EAAAA,OAAAA,EAAAA,OAAAA;AACD;AAVuB,GAAA,EAY1B,CAZF,KAYE,CAZ0B,CAA5B;AAeA,MAAM+D,cAAc,GAAGjB,WAAW,CAAC,YAAM;AAAA,QAAA,sBAAA;;AACvC,KAAA,sBAAA,GAAA,mBAAmB,CAAnB,OAAA,MAAA,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,sBAAA,CAAA,WAAA,CAAA,IAAA,CAAA;AADgC,GAAA,EAAlC,EAAkC,CAAlC;AAIA,SACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,KAAK,EAAE;AAAEkB,MAAAA,QAAQ,EAAV,CAAA;AAAeC,MAAAA,SAAS,EAAxB,CAAA;AAA6BC,MAAAA,SAAS,EAAEnD;AAAxC;AAAb,GAAA,EACGd,YAAY,CAAZA,wBAAAA,IACC,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA;AACE,IAAA,GAAG,EADL,MAAA;AAEE,IAAA,OAAO,EAAE8D;AAFX,GAAA,EAGM9D,YAAY,CALtB,mBAEI,CAAA,CAFJ,EASE,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA;AACE,IAAA,cAAc,EAAE4C,cADlB,EAAA;AAEE,IAAA,kBAAkB,EAFpB,oBAAA;AAGE,IAAA,YAAY,EAHd,QAAA;AAIE,IAAA,KAAK,EAAE,CACL;AACEsB,MAAAA,MAAM,EAAElE,YAAY,CAAZA,UAAAA,GAAAA,KAAAA,GAAkC;AAD5C,KADK,EAILD,KAAK,CART,cAIS,CAJT;AAWE,IAAA,GAAG,EAXL,mBAAA;AAYE,IAAA,eAAe,EAAE;AACfoE,MAAAA,yBAAyB,EAAE;AADZ,KAZnB;AAeE,IAAA,QAAQ,EAfV,QAAA;AAgBE,IAAA,iCAAiC,EAhBnC,IAAA;AAiBE,IAAA,8BAA8B,EAjBhC,IAAA;AAkBE,IAAA,aAAa,EAlBf,IAAA;AAmBE,IAAA,WAAW,EAnBb,WAAA;AAoBE,IAAA,YAAY,EAAE;AAAA,aAAM,KAAA,CAAA,aAAA,CAAA,YAAA,EAAA;AAAc,QAAA,GAAG,EAAEtD;AAAnB,OAAA,CAAN;AAAA,KApBhB;AAqBE,IAAA,YAAY,EAAEd,KAAF,KAAA,IAAEA,IAAAA,KAAF,KAAA,KAAA,CAAEA,GAAF,KAAA,CAAEA,GAAAA,KAAK,CArBrB,YAAA;AAsBE,IAAA,qBAAqB,EAAEA,KAAF,KAAA,IAAEA,IAAAA,KAAF,KAAA,KAAA,CAAEA,GAAF,KAAA,CAAEA,GAAAA,KAAK,CAAEqE;AAtBhC,GAAA,CATF,CADF;AAtSG,CAAa,CAAb","sourcesContent":["import dayjs from 'dayjs';\nimport type { ForwardedRef, Ref } from 'react';\nimport React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { Platform, ScrollView, useWindowDimensions, View } from 'react-native';\nimport Animated, { FadeInDown, FadeOutUp } from 'react-native-reanimated';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport {\n  DataProvider,\n  LayoutProvider,\n  RecyclerListView,\n} from 'recyclerlistview';\nimport type { ScrollEvent } from 'recyclerlistview/dist/reactnative/core/scrollcomponent/BaseScrollView';\nimport { ChatBubble } from './ChatBubble';\nimport { PropsContext } from './Chatty';\nimport { FAB, IFabRef } from './components/FAB';\nimport { LoadEarlier } from './components/LoadEarlier';\nimport { RenderDate } from './components/RenderDate';\nimport { TypingStatus } from './components/TypingStatus';\nimport { useHaptic } from './hooks/useHaptic';\nimport { usePrevious } from './hooks/usePrevious';\nimport { SwipeableBubble } from './SwipeableBubble';\nimport {\n  HapticType,\n  IListProps,\n  IMessage,\n  ITypingStatusRef,\n  LayoutType,\n  ListRef,\n} from './types/Chatty.types';\nimport { ChatBubbleEmitter } from './utils/eventEmitter';\nimport { hapticEngine } from './utils/hapticEngine';\nimport { wait } from './utils/helpers';\n\nconst ScrollViewWithHeader = React.forwardRef(\n  ({ children, ...props }, ref: Ref<ScrollView>) => {\n    const propsContext = useContext(PropsContext);\n\n    return (\n      <ScrollView ref={ref} {...props}>\n        {propsContext?.loadEarlierProps &&\n          propsContext.loadEarlierProps.show && (\n            <LoadEarlier {...propsContext.loadEarlierProps} />\n          )}\n        {children}\n      </ScrollView>\n    );\n  }\n);\n\nexport const List = React.forwardRef(\n  (props: IListProps, ref: ForwardedRef<ListRef>) => {\n    const propsContext = useContext(PropsContext);\n    const recyclerlistviewRef = useRef<RecyclerListView<any, any>>();\n    const windowDimensions = useWindowDimensions();\n    const safeArea = useSafeAreaInsets();\n    const { trigger } = useHaptic();\n    const fabRef = useRef<IFabRef>(null);\n    const typingStatusRef = useRef<ITypingStatusRef>(null);\n    const listHeight = useMemo(\n      () => windowDimensions.height - 150 - safeArea.bottom - safeArea.top,\n      [windowDimensions, safeArea]\n    );\n    const { rowRenderer: rowRendererProp, data } = props;\n\n    const dataProvider = useMemo<DataProvider>(() => {\n      return new DataProvider((r1: IMessage, r2: IMessage) => {\n        if (r1.id !== r2.id) {\n          return true;\n        }\n\n        return false;\n      });\n    }, []);\n\n    const [messages, setMessages] = useState<DataProvider>(dataProvider);\n    const previousMessages = usePrevious<DataProvider>(messages);\n\n    /* This is a React Hook that is used to update the messages list when new messages are added. */\n    useEffect(() => {\n      setMessages(dataProvider.cloneWithRows(data));\n    }, [data, dataProvider]);\n\n    /* This code is listening to the event of a reply bubble being pressed. When it is pressed, it scrolls\nto the replied message. */\n    useEffect(() => {\n      // When reply is pressed, scroll to replied message\n      ChatBubbleEmitter.addListener('replyBubblePressed', (messageId) => {\n        const index = messages\n          .getAllData()\n          .findIndex((m) => m.id === messageId);\n\n        if (index !== -1) {\n          recyclerlistviewRef.current?.scrollToIndex(index, true);\n        }\n      });\n\n      return () => {\n        ChatBubbleEmitter.removeAllListeners();\n      };\n    }, [messages]);\n\n    /* Using the useImperativeHandle hook to expose a function to the parent component that will allow\n    it to manipulate the messages list. */\n    useImperativeHandle(\n      ref,\n      () => ({\n        appendMessage: (\n          message: IMessage | IMessage[],\n          firstIndex?: boolean\n        ) => {\n          if (firstIndex) {\n            if (Array.isArray(message)) {\n              setMessages(\n                dataProvider.cloneWithRows([\n                  ...message,\n                  ...messages.getAllData(),\n                ])\n              );\n            } else {\n              setMessages(\n                dataProvider.cloneWithRows([message, ...messages.getAllData()])\n              );\n            }\n          } else {\n            if (Array.isArray(message)) {\n              setMessages(\n                dataProvider.cloneWithRows([\n                  ...messages.getAllData(),\n                  ...message,\n                ])\n              );\n            } else {\n              setMessages(\n                dataProvider.cloneWithRows([...messages.getAllData(), message])\n              );\n            }\n          }\n\n          if (!Array.isArray(message)) {\n            if (!message.me && propsContext?.enableHapticFeedback) {\n              if (Platform.OS !== 'web' && hapticEngine)\n                trigger(HapticType.Heavy);\n            }\n          }\n        },\n        /* This is a function that is used to scroll to the bottom of the list. */\n        scrollToEnd: (animated?: boolean) => {\n          recyclerlistviewRef.current?.scrollToEnd(animated);\n        },\n        /* Setting the typing status of the user. */\n        setIsTyping: (typing?: boolean) => {\n          typingStatusRef.current?.setIsTyping(typing ?? false);\n          recyclerlistviewRef.current?.scrollToEnd(true);\n        },\n        /* Removing a message from the list of messages. */\n        removeMessage: (id: number) => {\n          setMessages(\n            dataProvider.cloneWithRows(\n              messages.getAllData().filter((message) => message.id !== id)\n            )\n          );\n        },\n      }),\n      [dataProvider, messages, propsContext.enableHapticFeedback, trigger]\n    );\n\n    /* This code is checking if the first message in the previous messages is the same as the first message\nin the current messages. If it is, then it will not scroll to the bottom. */\n    useEffect(() => {\n      if (\n        previousMessages &&\n        previousMessages.getAllData()![0]?.id === messages.getAllData()![0]?.id\n      ) {\n        wait(100).then(() => {\n          recyclerlistviewRef.current?.scrollToEnd(true);\n        });\n      }\n    }, [ref, messages, previousMessages]);\n\n    const layoutProvider = useCallback(() => {\n      return new LayoutProvider(\n        (index) => {\n          const currentMessage: IMessage = messages.getAllData()[index];\n          const prevMessage: IMessage = messages.getAllData()[index - 1];\n\n          if (currentMessage.text.length >= 600) {\n            return LayoutType.ExtremeLong;\n          }\n\n          if (currentMessage.text.length >= 400) {\n            return LayoutType.Long3x;\n          }\n\n          if (currentMessage.text.length >= 200) {\n            return LayoutType.Long2x;\n          }\n\n          if (currentMessage.text.length >= 100) {\n            return LayoutType.Long;\n          }\n\n          if (currentMessage?.media) {\n            if (currentMessage.media.length > 2) {\n              return LayoutType.Media2x;\n            }\n\n            return LayoutType.Media;\n          }\n\n          if (currentMessage.repliedTo) {\n            return LayoutType.Replied;\n          }\n\n          const isFirstMessage = index === 0;\n\n          if (\n            (!isFirstMessage &&\n              dayjs(currentMessage.createdAt).date() !==\n                dayjs(prevMessage.createdAt).date()) ||\n            isFirstMessage\n          ) {\n            return LayoutType.Dated;\n          }\n\n          return LayoutType.Normal;\n        },\n        (type, dim) => {\n          dim.width = windowDimensions.width;\n\n          switch (type) {\n            case LayoutType.Normal:\n              dim.height = 85;\n              break;\n            case LayoutType.Replied:\n              dim.height = 190;\n              break;\n            case LayoutType.Dated:\n              dim.height = 110;\n              break;\n            case LayoutType.Long:\n              dim.height = 130;\n              break;\n            case LayoutType.Long2x:\n              dim.height = 170;\n              break;\n            case LayoutType.Long3x:\n              dim.height = 350;\n              break;\n            case LayoutType.ExtremeLong:\n              dim.height = 550;\n              break;\n            case LayoutType.Media:\n              dim.height = 180;\n              break;\n            case LayoutType.Media2x:\n              dim.height = 300;\n              break;\n\n            default:\n              dim.height = 85;\n              break;\n          }\n        }\n      );\n    }, [messages, windowDimensions.width]);\n\n    const renderBubble = useCallback(\n      (data: IMessage, withDate?: boolean) => {\n        if (rowRendererProp) {\n          return (\n            <View>\n              {withDate && (\n                <RenderDate\n                  date={data.createdAt}\n                  {...propsContext.renderDateProps}\n                />\n              )}\n\n              <Animated.View entering={FadeInDown} exiting={FadeOutUp}>\n                <SwipeableBubble message={data} onReply={propsContext.onReply}>\n                  {rowRendererProp(data)}\n                </SwipeableBubble>\n              </Animated.View>\n            </View>\n          );\n        }\n\n        return (\n          <View style={{ width: '100%' }}>\n            {withDate && (\n              <RenderDate\n                date={data.createdAt}\n                {...propsContext.renderDateProps}\n              />\n            )}\n            <Animated.View entering={FadeInDown} exiting={FadeOutUp}>\n              {propsContext.onReply ? (\n                <>\n                  <SwipeableBubble\n                    message={data}\n                    onReply={propsContext.onReply}\n                  />\n                </>\n              ) : (\n                <ChatBubble message={data} />\n              )}\n            </Animated.View>\n          </View>\n        );\n      },\n      [propsContext.onReply, propsContext.renderDateProps, rowRendererProp]\n    );\n\n    const rowRenderer = useCallback(\n      (type, data: IMessage) => {\n        if (type === LayoutType.Dated) {\n          return renderBubble(data, true);\n        }\n\n        return renderBubble(data);\n      },\n      [renderBubble]\n    );\n\n    const onScroll = useCallback(\n      (e: ScrollEvent, offsetX: number, offsetY: number) => {\n        if (e.nativeEvent.contentOffset.y <= 0) {\n          fabRef.current?.show();\n        } else {\n          fabRef.current?.hide();\n        }\n\n        if (props.onScroll) {\n          props.onScroll(e, offsetX, offsetY);\n        }\n      },\n      [props]\n    );\n\n    const scrollToBottom = useCallback(() => {\n      recyclerlistviewRef.current?.scrollToEnd(true);\n    }, []);\n\n    return (\n      <View style={{ minWidth: 1, minHeight: 1, maxHeight: listHeight }}>\n        {propsContext.showScrollToBottomButton && (\n          <FAB\n            ref={fabRef}\n            onPress={scrollToBottom}\n            {...propsContext.scrollToBottomProps}\n          />\n        )}\n\n        <RecyclerListView\n          layoutProvider={layoutProvider()}\n          externalScrollView={ScrollViewWithHeader}\n          dataProvider={messages}\n          style={[\n            {\n              height: propsContext.replyingTo ? '90%' : '100%',\n            },\n            props.containerStyle,\n          ]}\n          // @ts-ignore\n          ref={recyclerlistviewRef}\n          scrollViewProps={{\n            keyboardShouldPersistTaps: 'never',\n          }}\n          onScroll={onScroll}\n          optimizeForInsertDeleteAnimations\n          forceNonDeterministicRendering\n          canChangeSize={true}\n          rowRenderer={rowRenderer}\n          renderFooter={() => <TypingStatus ref={typingStatusRef} />}\n          onEndReached={props?.onEndReached}\n          onEndReachedThreshold={props?.onEndReachedThreshold}\n        />\n      </View>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}