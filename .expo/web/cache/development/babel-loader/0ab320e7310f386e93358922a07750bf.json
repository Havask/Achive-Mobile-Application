{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar imagePicker;\n\ntry {\n  imagePicker = require('expo-image-picker');\n} catch (_unused) {\n  try {\n    imagePicker = require('react-native-image-picker');\n  } catch (_unused2) {\n    console.warn('expo-image-picker or react-native-image-picker not found. Please install it to use this feature.');\n  }\n}\n\nexport function selectImage() {\n  var _imagePicker;\n\n  return _regeneratorRuntime.async(function selectImage$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!((_imagePicker = imagePicker) !== null && _imagePicker !== void 0 && _imagePicker.launchImageLibraryAsync)) {\n            _context.next = 4;\n            break;\n          }\n\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(imagePicker.launchImageLibraryAsync({\n            base64: true\n          }));\n\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 4:\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(imagePicker.launchImageLibrary({\n            includeBase64: true\n          }));\n\n        case 6:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"mappings":";AAAA,IAAIA,WAAJ;;AAEA,IAAI;EACFA,WAAW,GAAGC,OAAO,CAAC,mBAAD,CAArBD;AADF,EAEE,gBAAM;EACN,IAAI;IACFA,WAAW,GAAGC,OAAO,CAAC,2BAAD,CAArBD;EADF,EAEE,iBAAM;IACNE,OAAO,CAACC,IAARD,CACE,kGADFA;EAGD;AACF;;AAMD,OAAO,SAAeE,WAAf;EAAA;;EAAA;IAAA;MAAA;QAAA;UAAA,MACL,gBAAIJ,WAAJ,yCAAIK,aAAaC,uBADZ;YAAA;YAAA;UAAA;;UAAA;UAAA,iCAEUN,WAAW,CAACM,uBAAZN,CAAoC;YAC/CO,MAAM,EAAE;UADuC,CAApCP,CAFV;;QAAA;UAAA;;QAAA;UAAA;UAAA,iCAOQA,WAAW,CAACQ,kBAAZR,CAA+B;YAC1CS,aAAa,EAAE;UAD2B,CAA/BT,CAPR;;QAAA;UAAA;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA","names":["imagePicker","require","console","warn","selectImage","_imagePicker","launchImageLibraryAsync","base64","launchImageLibrary","includeBase64"],"sources":["imagePicker.ts"],"sourcesContent":["let imagePicker: any;\n\ntry {\n  imagePicker = require('expo-image-picker');\n} catch {\n  try {\n    imagePicker = require('react-native-image-picker');\n  } catch {\n    console.warn(\n      'expo-image-picker or react-native-image-picker not found. Please install it to use this feature.'\n    );\n  }\n}\n\n/**\n * It launches the native image picker\n * @returns The image data is being returned as a base64 string.\n */\nexport async function selectImage() {\n  if (imagePicker?.launchImageLibraryAsync) {\n    return await imagePicker.launchImageLibraryAsync({\n      base64: true,\n    });\n  }\n\n  return await imagePicker.launchImageLibrary({\n    includeBase64: true,\n  });\n}\n"]},"metadata":{},"sourceType":"module"}